<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN" "http://www.w3.org/TR/html4/loose.dtd">
<html>
<head>
<meta http-equiv="content-type" content="text/html; charset=utf-8">
<title>Detailed History of Ghostscript versions 9.n - DEPRECATED</title>
<!--
	WARNING: do not use Pete Kaiser's emacs function "gs-toc" alone to
	re-create the table of contents here, because it will replace the
	hand-edited TOC subheads with a separate subhead for each H2 in
	the body of the file.  Or if you do, first look at the original
	TOC to see how to edit it for visual conciseness.
-->
<link rel="stylesheet" type="text/css" href="gs.css" title="Ghostscript Style">
</head>

<body>
<!-- [1.0 begin visible header] ============================================ -->

<!-- [1.1 begin headline] ================================================== -->

<table width="100%" border="0">
<tr><th align="center" bgcolor="#CCCC00"><font size=6>Detailed History of Ghostscript versions 9.xx</font>
</table>

<!-- [1.1 end headline] ==================================================== -->

<!-- [1.2 begin table of contents] ========================================= -->

This file is deprecated, please see:
<br>
<a href="News.htm">News.htm</a><br>


<h2>Table of contents</h2>

<blockquote><ul>
<li><a href="#Version9.01">Version 9.01 (2011-02-07)</a>
<ul>
<li><a href="#9.01_Incompatible_changes">Incompatible changes</a>,
    <a href="#9.01_changelog">Changelog</a>,
</ul>
<li><a href="#Version9.00">Version 9.00 (2010-09-14)</a>
</ul>
</blockquote>

<!-- [1.2 end table of contents] =========================================== -->

<!-- [1.3 begin hint] ====================================================== -->

<p>
This document is a record of changes in Ghostscript releases numbered 9.xx.
For earlier versions, see the the history documents:

<blockquote>
<a href="History8.htm">History of Ghostscript versions 8.n</a><br>
<a href="History7.htm">History of Ghostscript versions 7.n</a><br>
<a href="History6.htm">History of Ghostscript versions 6.n</a><br>
<a href="History5.htm">History of Ghostscript versions 5.n</a><br>
<a href="History4.htm">History of Ghostscript versions 4.n</a><br>
<a href="History3.htm">History of Ghostscript versions 3.n</a><br>
<a href="History2.htm">History of Ghostscript versions 2.n</a><br>
<a href="History1.htm">History of Ghostscript versions 1.n</a>
</blockquote>

<p>For other information, see the <a href="Readme.htm">Ghostscript
overview</a>.

<!-- [1.3 end hint] ======================================================== -->

<hr>

<!-- [1.0 end visible header] ============================================== -->

<!-- [2.0 begin contents] ================================================== -->

<h2><a name="Version9.01"></a>Version 9.01 (2011-02-07)</h2>

<p>This is the second release in the stable 9.x series.

<p> Highlights in this release include:

<p> A new, robust CFF parser implemented in C (replacing the previous
Poscript one),

<p> tiffscaled device - this renders internally as tiffgray, but then
downsamples by an integer scale factor (specified by -dDownScaleFactor=n)
and error diffuses to 1bpp output. The tiffscaled device also implements
limited minimum feature size functionality; by setting -dMinFeatureSize
to 1, 2 or 3, the device output is guaranteed to generate minimum dot
sizes as multiples of the final resolution, useful for devices that
offer finer position control than dot size control.


<p> Add DSC compatible output in ps2write.

<p> Windows makefiles now support 64 bit builds on 64 bit systems.

<p> A number of performance, memory use, and stability improvements with the new
features introduced in 9.00, plus the usual bug fixes.

<p> We have also dropped support for Watcom and Borland development environments.
These had not been maintained for some time, and were suffering "bit rot".


<p>For a list of open issues, or to report problems,
please visit <a href="http://bugs.ghostscript.com/">bugs.ghostscript.com</a>.

<h3><a name="9.01_Incompatible_changes"></a>Incompatible changes</h3>

<p>
No recorded incompatible changes.

<h3><a name="9.01_changelog"></a>Changelog</h3>

<p><strong><a name="2011-02-07T141027.833602Z"></a>
2011-02-07T14:10:27.833602Z Chris Liddell</strong></p>
<blockquote>
<pre>
Some updates to the details of the UFST and Freetype related
information.

Plus adding the warning about Xfonts pending removal.
</pre>
<p>[doc/Make.htm doc/Xfonts.htm]</p>
</blockquote>

<p><strong><a name="2011-02-05T152932.296497Z"></a>
2011-02-05T15:29:32.296497Z Chris Liddell</strong></p>
<blockquote>
<pre>
As we plan to deprecate Xfonts in a future release, add a
warning message to this effect when an Xfont is used, as follows:

&quot;Warning: the Xfonts feature is deprecated and will be removed in a future release.&quot;

No cluster differences expected.

</pre>
<p>[base/gxccman.c]</p>
</blockquote>

<p><strong><a name="2011-02-05T152725.033646Z"></a>
2011-02-05T15:27:25.033646Z Chris Liddell</strong></p>
<blockquote>
<pre>
Merge r12117 from the &quot;halftone&quot; branch into trunk, the original commit
comment says:

Fix bug in bit devices rgb mapping procedure; in the ncomp == 1 case it
was only setting the first component. This was causing indeterminisms in
calling code, which has been giving vastly different timings in Norberts
tests.

This has apparently been here since revision 3318.

</pre>
<p>[base/gdevbit.c]</p>
</blockquote>

<p><strong><a name="2011-02-04T155142.379449Z"></a>
2011-02-04T15:51:42.379449Z Robin Watts</strong></p>
<blockquote>
<pre>
Fix problem with shifting in gsroprun.c. I had systematically got this
wrong throughout the code, but fixed it everywhere except this one
case in an earlier commit. This completes the fix.

No cluster changes expected.

</pre>
<p>[base/gsroprun.c]</p>
</blockquote>

<p><strong><a name="2011-02-03T123028.178697Z"></a>
2011-02-03T12:30:28.178697Z Chris Liddell</strong></p>
<blockquote>
<pre>
A final tweak to the FAPI/UFST code to keep C compilers
less liberal than gcc happy (specifically Visual C).

No functional changes.

</pre>
<p>[psi/fapiufst.c]</p>
</blockquote>

<p><strong><a name="2011-02-02T182757.905008Z"></a>
2011-02-02T18:27:57.905008Z Chris Liddell</strong></p>
<blockquote>
<pre>
A couple of minor UFST related tweaks to account for differences between
UFST 6.2 and UFST 5.x.

</pre>
<p>[psi/fapiufst.c base/gxfapiu.c]</p>
</blockquote>

<p><strong><a name="2011-02-02T171809.939035Z"></a>
2011-02-02T17:18:09.939035Z Ray Johnston</strong></p>
<blockquote>
<pre>
Change Windows makefiles extensively for 64-bit issues:
1. Command line nmake works now for 32-bit build on 64-bit OS
2. 64-bit builds use different directories for objects to allow 32 and
   64 bit builds to be alternated without confusion. 64-bit objects have
   '64' suffix to the 32-bit objects which remain in the same places
3. 64-bit binaries are now named uniquely, e.g. gsdll64.dll and gswin64.exe
   Binaries coexist in 'bin' directory since names are unique.
4. 'Style' changes to the makefiles to remove the '32' suffix from files
   that are not 32-bit specific -- hopefully will prevent future confusion.

Tested with VS 2005 and VS 2008 as well as with GhostPDL.sln (to make sure
the pcl, xps, and language_switch builds don't break.
</pre>
<p>[psi/msvc64.mak psi/gsdll64.def psi/dwsetup.cpp psi/msvc.mak psi/dwmain.c psi/dw64c.def psi/msvc32.mak psi/dwmain64.def psi/dwdll.c base/msvctail.mak psi/dwimg.c]</p>
</blockquote>

<p><strong><a name="2011-02-02T153453.024741Z"></a>
2011-02-02T15:34:53.024741Z Ken Sharp</strong></p>
<blockquote>
<pre>
Remove 4 cases where lines had apparently spurious leading spaces, this seriously 
confused nmake and refused to build on Windows.

No cluster differences expected.
</pre>
<p>[psi/msvc32.mak]</p>
</blockquote>

<p><strong><a name="2011-02-02T151453.428205Z"></a>
2011-02-02T15:14:53.428205Z Ken Sharp</strong></p>
<blockquote>
<pre>
Fix (ps2write) : Enable ps2write on PCL

Bug #691881 &quot;ps2write broken with GhostPCL&quot;

ps2write formerly required 4 'resource' PostScript files stored on disk in order to
write a PostScript header to the output file. These files have now been converted into
'C' header files and included in the source in earlier revisions.

This commit removes the last barrier to ps2write working with PCL (and other
non-PostScript languages) by removing a disk-based check for opdfread.ps.

No differences expected.
</pre>
<p>[base/gdevpdfu.c]</p>
</blockquote>

<p><strong><a name="2011-02-02T145537.673202Z"></a>
2011-02-02T14:55:37.673202Z Robin Watts</strong></p>
<blockquote>
<pre>
Add cups files to VS project. This is a very simple, clean patch to the
gs visual studio project file, so (famous last words) can't affect the
cluster build and shouldn't conflict with anyone else.

</pre>
<p>[ghostscript.vcproj]</p>
</blockquote>

<p><strong><a name="2011-02-02T141215.676565Z"></a>
2011-02-02T14:12:15.676565Z Chris Liddell</strong></p>
<blockquote>
<pre>
A set of changes to make it easier to use the UFST with Ghostscript
and to get us closer to having the option of the UFST handling font
types other than the Microtype fonts.

The UFST build, using the default COMPILE_INITS=1  will now include
the Microtype FCO files in the rom file system along with the other
initialisation files (it does not currently strip out the normal
Postscript fonts in Resource/Fonts), and setup default values for
the various paramters required to have Ghostscript use the
Microtype fonts (these can still be overridden on the command
line). For the build with COMPILE_INITS=0, the default paths
will use the path to the UFST you specify for configure, or
nmake on Windows.


Included in this revision are changes to prevent the UFST version
5.x (or less) from trying to handle non-Microtype fonts, and allow
it to safely fall back to the Freetype (or a.n.other FAPI plugin).
UFST 6.2 or better will try to handle all fonts types, but this is
not yet reliable.

Currently, this code only replaces the UFST memory management on
UFST 6.2 and above (this is purely because I haven't time to test
this capability on UFST 5 yet).

A further change will be committed shortly to the UFST 5 sources
to force the UFST to use the Ghostscript stream IO instead of the
standard lib file IO on the Windows builds (this has been in place
for the Unix/Linux UFST builds for some time).



</pre>
<p>[psi/zfapi.c base/Makefile.in Resource/Init/gs_fntem.ps base/configure.ac psi/fapiufst.c base/gxfapiu.c psi/msvc32.mak Resource/Init/gs_fapi.ps]</p>
</blockquote>

<p><strong><a name="2011-02-02T133054.074131Z"></a>
2011-02-02T13:30:54.074131Z Ken Sharp</strong></p>
<blockquote>
<pre>
The ps2write dependency on the new header files was incorrect (over-enthusiastic
copy and paste error)
</pre>
<p>[base/devs.mak]</p>
</blockquote>

<p><strong><a name="2011-02-02T112307.465859Z"></a>
2011-02-02T11:23:07.465859Z Chris Liddell</strong></p>
<blockquote>
<pre>
Allow building with the system (shared) lcms library.

Bug 691644.

</pre>
<p>[base/lib.mak base/Makefile.in base/configure.ac]</p>
</blockquote>

<p><strong><a name="2011-02-02T092815.868989Z"></a>
2011-02-02T09:28:15.868989Z Ken Sharp</strong></p>
<blockquote>
<pre>
Remove the check on opdfread.ps from gs_pdfwr.ps as this is no longer shipped as a
PostScript file in /gs/Resource</pre>
<p>[Resource/Init/gs_pdfwr.ps]</p>
</blockquote>

<p><strong><a name="2011-02-02T084611.323868Z"></a>
2011-02-02T08:46:11.323868Z Ken Sharp</strong></p>
<blockquote>
<pre>
Update two make files that had dependencies on opdfread.ps, which has been removed from
the PostScript file system.</pre>
<p>[psi/psromfs.mak base/unixinst.mak]</p>
</blockquote>

<p><strong><a name="2011-02-02T082743.587977Z"></a>
2011-02-02T08:27:43.587977Z Ken Sharp</strong></p>
<blockquote>
<pre>
It seems that three of the files removed in revision 12093 are used by devices other
than ps2write. Replacing those files.
</pre>
<p>[Resource/Init/gs_mro_e.ps Resource/Init/gs_agl.ps Resource/Init/gs_mgl_e.ps lib/gs_mro_e.ps lib/gs_agl.ps lib/gs_mgl_e.ps]</p>
</blockquote>

<p><strong><a name="2011-02-02T081436.361918Z"></a>
2011-02-02T08:14:36.361918Z Ken Sharp</strong></p>
<blockquote>
<pre>
Fix ps2write : Don't depend on the PS file system for resources.

ps2write needs up to 4 resource files which are normally stored in the PostScript ROM
file system. However on PCL and other languages these resources are (obviously) not
present, so the output is incomplete.

Move the relevant files from PostScript into 'C' as header files. Remove the files from
the PostScript file system to save ROM file system space. Put the removed files into
the gs/lib folder for safe-keeping. Add the .h files as dependencies for gdevpdfu.c in
the build system so that changes to these files cause a rebuild.

No differences expected.
</pre>
<p>[base/opdfread.h Resource/Init/gs_mro_e.ps Resource/Init/gs_agl.ps Resource/Init/gs_mgl_e.ps base/gs_mro_e.h lib/opdfread.ps base/gs_agl.h base/gs_mgl_e.h Resource/Init/opdfread.ps base/gdevpdfu.c lib/gs_mro_e.ps base/devs.mak lib/gs_agl.ps lib/gs_mgl_e.ps]</p>
</blockquote>

<p><strong><a name="2011-02-01T221144.446124Z"></a>
2011-02-01T22:11:44.446124Z Marcos H. Woehrmann</strong></p>
<blockquote>
<pre>
Fix for missing arch.h when compiling gdevcups.c with parallel make.
</pre>
<p>[base/devs.mak]</p>
</blockquote>

<p><strong><a name="2011-02-01T214627.115736Z"></a>
2011-02-01T21:46:27.115736Z Ray Johnston</strong></p>
<blockquote>
<pre>
Fix for PDF 1.7 fts_09_0910.pdf where the /Font is in an ExtGState instead of
set by the Tf operator. In this case, the font is an indirect reference, not
a font resource name. Reported by customer 532.
</pre>
<p>[Resource/Init/pdf_draw.ps]</p>
</blockquote>

<p><strong><a name="2011-02-01T170750.035956Z"></a>
2011-02-01T17:07:50.035956Z Chris Liddell</strong></p>
<blockquote>
<pre>
Freetype expects the resolution we supply it to be in
&quot;glyph orientation&quot; - not a problem until we have a
non-square resolution, and rotated glyphs!

Bug 691920.

</pre>
<p>[psi/fapi_ft.c]</p>
</blockquote>

<p><strong><a name="2011-02-01T140046.378487Z"></a>
2011-02-01T14:00:46.378487Z Ken Sharp</strong></p>
<blockquote>
<pre>
Fix (pdfwrite) : Always write a ToUnicode CMap for TrueType fonts

Bug #691907 &quot;PDFs with TrueType fonts from Windows PostScript files not searchable&quot;

Patch from SaGS.

When choosing whether to embed a ToUnicode CMap, always embed if the font type is 
TrueType. This is because TT fonts are always embedded as symbolic, and we now no longer
add Encodings to Symbolic TT fonts (violates spec), which results in PDF files where the
text is unsearchable and cannot be successfully copy/pasted in the absence of a
ToUnicode CMap.

It is possible that the ToUnicode CMap is incorrectly generated, but this is no worse
than having no CMap at all.

No expected differences since ToUnicode CMaps are not used in rendering.
</pre>
<p>[base/gdevpdtw.c]</p>
</blockquote>

<p><strong><a name="2011-02-01T115726.132691Z"></a>
2011-02-01T11:57:26.132691Z Robin Watts</strong></p>
<blockquote>
<pre>
Add new 'Profile' configuration to Visual Studio targets. This builds
objects/binaries with debugging symbols enabled, but otherwise full
optimisation.

The changes are entirely within the VS files, except for a few small tweaks
to the MSVC makefile. These changes should mean that it is possible to use
the makefiles in a way that doesn't rely on recursive make calls (even though
we leave the 'debug' targets in for now that do use that).

No cluster differences expected or shown in testing.

</pre>
<p>[/trunk/ghostpdl/win32/xps.vcproj ghostscript.vcproj /trunk/ghostpdl/win32/GhostPDL.sln /trunk/ghostpdl/win32/pcl.vcproj /trunk/ghostpdl/win32/svg.vcproj psi/msvc32.mak /trunk/ghostpdl/win32/language_switch.vcproj]</p>
</blockquote>

<p><strong><a name="2011-02-01T083427.091701Z"></a>
2011-02-01T08:34:27.091701Z Ken Sharp</strong></p>
<blockquote>
<pre>
Fix (pdfwrite) : permit symbolic fonts in PDF/A output

Bug #691877 &quot;Invalid text when converting to PDF/A&quot;

TrueType fonts were being emitted as non-symbolic when PDF/A output was selected. This
was causing the text to be incorrect, because the fonts actually are symbolic and 
Acrobat was unable to apply the correct decoding.

This will result in more text being unsearchable/copyable but the rendering result is 
correct, which is more important.

No differences expected, PDF/A output not tested on the cluster.</pre>
<p>[base/gdevpdtd.c]</p>
</blockquote>

<p><strong><a name="2011-01-31T181010.028647Z"></a>
2011-01-31T18:10:10.028647Z Robin Watts</strong></p>
<blockquote>
<pre>
While searching for performance on an ARM based dev board, I developed 2
new versions of the skip_white_pixels macro. The first uses native int sized
checking, and should be faster on long run matching. I have as yet been unable
to find any files that show this expected speedup.

The second should be faster on architectures (such as ARM) where the tradeoff
in the test is different (and where pointer arithmetic is cheaper than array
indexing).

Both versions are disabled by default until the case for their existence has
been proven, but are committed here to avoid bitrot.

No cluster differences expected, as the default code does not change.

</pre>
<p>[base/scf.h]</p>
</blockquote>

<p><strong><a name="2011-01-31T123210.322306Z"></a>
2011-01-31T12:32:10.322306Z Robin Watts</strong></p>
<blockquote>
<pre>
Tweak to the PxM output code; spot that the output is /dev/null (or nul:)
and avoid saving it. This is a port of code from gdevbit and gdevwts, and is
purely useful for testing/timing/profiling purposes.

No cluster differences expected.

</pre>
<p>[base/gdevpbm.c]</p>
</blockquote>

<p><strong><a name="2011-01-31T111953.283257Z"></a>
2011-01-31T11:19:53.283257Z Ken Sharp</strong></p>
<blockquote>
<pre>
Revert minor changes accidentally committed in revision 12082.
</pre>
<p>[Resource/Init/Fontmap.GS Resource/Init/cidfmap lib/PDFA_def.ps]</p>
</blockquote>

<p><strong><a name="2011-01-31T111505.175916Z"></a>
2011-01-31T11:15:05.175916Z Ken Sharp</strong></p>
<blockquote>
<pre>
Add the two new make files required for the altered CUPS build, these were accidentally
omitted in revision 12080.
</pre>
<p>[Resource/Init/Fontmap.GS base/lcups.mak Resource/Init/cidfmap lib/PDFA_def.ps base/lcupsi.mak]</p>
</blockquote>

<p><strong><a name="2011-01-31T110911.349638Z"></a>
2011-01-31T11:09:11.349638Z Ken Sharp</strong></p>
<blockquote>
<pre>
Undo changes to PDFX_def.ps accidentally committed as part of the CPS changes.
</pre>
<p>[lib/PDFX_def.ps]</p>
</blockquote>

<p><strong><a name="2011-01-31T110611.139867Z"></a>
2011-01-31T11:06:11.139867Z Ken Sharp</strong></p>
<blockquote>
<pre>
More changes for CUPS, mostly to the build system.

We now build the CUPS device unconditionally on Windows, using the recently added local
partial copy of the CUPS library sources. This change also builds CUPS on Linux either
using the system shared libraries (if available) or using the same partial copy of the 
library sources, if *specifically* directed to use this.

On Windows CUPS is now always built and installed. On Unix systems the behavious is as
follows:

./configure cups not installed  - no cups device
./configure cups is installed   - cups device linked to system cups shared libraries.
./configure --disable-cups      - no cups device, regardless of cups libs installed
                                  on system
./configure --with-local-cups   - cups device with the partial cups code, regardless of
                                  cups libs installed on system
./configure --with-local-cups --disable-cups results in no cups device.

No differences expected as the cluster should still build and run with the system
CUPS libraries just as it always has.
</pre>
<p>[base/winlib.mak lib/PDFX_def.ps base/unix-end.mak base/gs.mak cups/cups.mak base/Makefile.in base/configure.ac cups/libs/configlinux.h psi/msvc32.mak base/msvclib.mak base/devs.mak base/msvctail.mak]</p>
</blockquote>

<p><strong><a name="2011-01-29T153532.332503Z"></a>
2011-01-29T15:35:32.332503Z Ken Sharp</strong></p>
<blockquote>
<pre>
More changes to the CUPS sources so they will compile on various systems:

language.c - if __APPLE__ is true, includes code which uses what I think is Carbon
             Framework calls and structures, but does not #include any of the .h files.
             Modified to #undef __APPLE__ to avoid this.

ppd.c  -  Same problem as for MSVC, the include file string.h seems to prevent the C
          string.h being included, and so leaves strchr undefined. Now unconditionally
          provide a prototype for strchr.

localize.c - Another problem with string.h. This doesn't exist on the MSVC build, but
             unconditionally providing a prototype fro strcmp doesn't cause an error.

The code now builds on MSVC, Linux and Mac. Lots of warnings, but I don't propose to
try and deal with those as they would require extensive alterations to the CUPS
sources.

No differences expected as this code is not yet in use.
</pre>
<p>[cups/libs/cups/localize.c cups/libs/cups/language.c cups/libs/cups/ppd.c]</p>
</blockquote>

<p><strong><a name="2011-01-28T132120.983748Z"></a>
2011-01-28T13:21:20.983748Z Robin Watts</strong></p>
<blockquote>
<pre>
Further rop run optimisations.

 * Add mechanism for dumping ROPs used (including frequency and runlength).
Disabled by default.
 * Add special case code for most common rops (invert and xor).
 * Correct '1bit colors' code in various cases.

Cluster pushing shows no differences.

</pre>
<p>[base/gsroprun.c]</p>
</blockquote>

<p><strong><a name="2011-01-28T122737.269985Z"></a>
2011-01-28T12:27:37.269985Z Robin Watts</strong></p>
<blockquote>
<pre>
Optimisations to mem_mapped8_copy_mono. Driven initially by a desire to
speed up 100pagemono.pxl on ARM devices, but useful on all architectures.
This work may end up being subsumed by the run_rop work, but is a worthwhile
stepping stone.

On x86 this speeds 100pagemono.pxl in greyscale 600dpi from 4.2 seconds to
3.6seconds. On ARM it shows a definite improvement too, but I don't have
figures to hand.

Clusterpush shows no changes.

</pre>
<p>[base/gdevm8.c]</p>
</blockquote>

<p><strong><a name="2011-01-27T143346.308935Z"></a>
2011-01-27T14:33:46.308935Z Ken Sharp</strong></p>
<blockquote>
<pre>
Update the CUPS sources so that they can be compiled under Windows.

1) Remove config.h which was a Linux configure result, replace with configwin.h (from
the CUPS distribution for Windows) and configlinux.h which is config,h renamed. We
will copy and use the correct version at make time.

2) cups/debug.c guard the use of pthread_mutex so that we don't try to use it if
HAVE_PTHREAD_H is not defined, as the variable will not be declared. Guard use of 
cups_debug_filter and cups_filter with a #ifndef WIN32 as these variables are not 
defined in a Windows build. Replace gettimeofday with a Windows equivalent when 
building on Windows as this function is not available.

3) ppd.c Add a definition of strchr when building for Windows. The use of an include
file called string.h confuses MSVC and it does not include the C string.h which leaves 
strchr undefined.

4) string.h When defining equivalents to strcasecmp and strncasecmp, also define the
HAVE_* variables so that inclusion order doesn't lead to these being undefined when
we have declared equivalents.

5) image-bmp.c Guard the declaration of the BI_* constants with a #ifndef WIN32 as 
these are Windows constants and already defined on a Windows build.

6) image-colorspace.c Define cbrt() in terms of pow() when WIN32 is set as the MSVC
compiler does not define a cube root function.

7) image-tiff.c Guard inclusion of unistd.h when HAVE_LIBTIFF is true as this include
file does not ship with MSVC on Windows.


These have been supplied to the CUPS development group, and at least some of the
problems are likely resolved in a newer version of CUPS. 

No differences expected.
</pre>
<p>[cups/libs/cups/debug.c cups/libs/filter/image-bmp.c cups/libs/cups/string.h cups/libs/configwin.h cups/libs/config.h cups/libs/configlinux.h cups/libs/cups/ppd.c cups/libs/filter/image-tiff.c cups/libs/filter/image-colorspace.c]</p>
</blockquote>

<p><strong><a name="2011-01-27T130715.912561Z"></a>
2011-01-27T13:07:15.912561Z Tor Andersson</strong></p>
<blockquote>
<pre>
Relax version check in JPEG-XR to allow older version HDP and WDP images.</pre>
<p>[jpegxr/cr_parse.c]</p>
</blockquote>

<p><strong><a name="2011-01-26T181028.996727Z"></a>
2011-01-26T18:10:28.996727Z Chris Liddell</strong></p>
<blockquote>
<pre>
Fix the message for the new IJS check to read IJS, instead of jpeg!

</pre>
<p>[base/configure.ac]</p>
</blockquote>

<p><strong><a name="2011-01-26T145140.178552Z"></a>
2011-01-26T14:51:40.178552Z Chris Liddell</strong></p>
<blockquote>
<pre>
revert accidentally committed file.
</pre>
<p>[base/jpeg.mak]</p>
</blockquote>

<p><strong><a name="2011-01-26T122536.497890Z"></a>
2011-01-26T12:25:36.497890Z Chris Liddell</strong></p>
<blockquote>
<pre>
Allow IJS code to be linked as a library instead of using our distributed source.

This will permit distributions which include a separately built libijs to link the
the system's libijs.

Bug 691904 

</pre>
<p>[base/winlib.mak base/gdevijs.c base/ijs.mak base/jpeg.mak base/ugcclib.mak base/macosx.mak base/Makefile.in base/configure.ac base/unix-gcc.mak base/unixansi.mak psi/msvc32.mak base/devs.mak]</p>
</blockquote>

<p><strong><a name="2011-01-26T010440.273776Z"></a>
2011-01-26T01:04:40.273776Z Alex Cherepanov</strong></p>
<blockquote>
<pre>
Old gs assumed TrueType font collections occur only as external resource.
It turned out that PDF can have embedded TrueType collection. So this patch
replaces --setfileposition-- with {... () /SubFileDecode filter flushfile}
for forward search. Bug 691908, customer 870.
</pre>
<p>[Resource/Init/gs_ttf.ps]</p>
</blockquote>

<p><strong><a name="2011-01-25T120322.384476Z"></a>
2011-01-25T12:03:22.384476Z Ken Sharp</strong></p>
<blockquote>
<pre>
Add code to define cbrt, strcasecmp and stncasecmp when compiling for Windows, as these
are not present in the MSVC run-time.

Also alter the initialisation of the gs_cups_device structure. Previously this set three
matrices by including empty braces '{}', but MSVC throws a compilation error on this.
Altered to {0x00} which is not quite the same, but it compiles (with a warning from gcc)
and is no worse than leaving the members uninitialised.

No differences expected.
</pre>
<p>[cups/gdevcups.c]</p>
</blockquote>

<p><strong><a name="2011-01-24T235139.084611Z"></a>
2011-01-24T23:51:39.084611Z Tor Andersson</strong></p>
<blockquote>
<pre>
Add JPEG-XR makefile and library to XPS build.</pre>
<p>[/trunk/ghostpdl/xps/xps.mak /trunk/ghostpdl/xps/xps_msvc.mak base/jpegxr.mak /trunk/ghostpdl/xps/xps_gcc.mak]</p>
</blockquote>

<p><strong><a name="2011-01-24T235123.771340Z"></a>
2011-01-24T23:51:23.771340Z Tor Andersson</strong></p>
<blockquote>
<pre>
Import JPEG-XR reference software.

ITU-T Rec. T.835 (ex T.JXR-5) | ISO/IEC 29199-5.
JPEG XR reference software 1.8 (September 2009).</pre>
<p>[jpegxr/jpegxr.h jpegxr/io.c jpegxr/jpegxr_pixelformat.c jpegxr/api.c jpegxr/my_getopt-1.5/getopt.h jpegxr/stdint_minimal.h jpegxr/r_strip.c jpegxr/qp.tab.c jpegxr/JPEG-XR.sln jpegxr/cw_emit.c jpegxr/w_strip.c jpegxr/x_strip.c jpegxr/qp.tab.h jpegxr/r_parse.c jpegxr/r_tile_spatial.c jpegxr/app_resource.h jpegxr/Makefile jpegxr/DLL.rc jpegxr/cr_parse.c jpegxr/APP.vcproj jpegxr/w_tile_frequency.c jpegxr/COPYRIGHT.txt jpegxr/jxr_priv.h jpegxr/my_getopt-1.5/LICENSE jpegxr/sample.qp jpegxr jpegxr/file.c jpegxr/my_getopt-1.5/my_getopt.c jpegxr/dllmain.c jpegxr/algo.c jpegxr/file.h jpegxr/my_getopt-1.5/my_getopt.h jpegxr/w_emit.c jpegxr/my_getopt-1.5 jpegxr/dll_resource.h jpegxr/qp_lexor.c jpegxr/README.txt jpegxr/flags.c jpegxr/DLL.vcproj jpegxr/versions-windows.txt jpegxr/jpegxr.c jpegxr/qp_lexor.lex jpegxr/r_tile_frequency.c jpegxr/qp_parse.y jpegxr/w_tile_spatial.c jpegxr/APP.rc jpegxr/init.c]</p>
</blockquote>

<p><strong><a name="2011-01-24T181640.240500Z"></a>
2011-01-24T18:16:40.240500Z Robin Watts</strong></p>
<blockquote>
<pre>
We want to be able to use planar buffers in a line interleaved format.
Unfortunately, at the moment the planar device is hardcoded to use
contiguous buffers. Fortunately this appears to be a 1 line fix; rather than
calculting raster from the width, we instead calculate it as the difference
between line pointers.

This does assume that we can always safely read line_ptrs[1], even if we only
have 1 line in the band. (The value is unimportant in this case, but we must
be able to read it without crashing.)


</pre>
<p>[base/gdevmpla.c]</p>
</blockquote>

<p><strong><a name="2011-01-24T145630.755196Z"></a>
2011-01-24T14:56:30.755196Z Chris Liddell</strong></p>
<blockquote>
<pre>
Make sure the X11 drivers get removed from the DEVICE_DEVS declaration
if the --enable-dynamic option is give to configure. Also, fix up the
the non shared library builds, so they will still work with
--enable-dynamic  (only really useful for debugging).

Bug 691905.

Reorganise and correct the names of the devices specified in
configure.ac so that the options --with-drivers=[FILES,PRINTERS,X11]
actually work.

Finally, make the &quot;make debug&quot; compiler options originate from
configure, instead of being hard coded into the Makefile. A first
step in making some of useful debugging features of modern compilers
available when we can.

</pre>
<p>[base/Makefile.in base/configure.ac]</p>
</blockquote>

<p><strong><a name="2011-01-20T042302.586888Z"></a>
2011-01-20T04:23:02.586888Z Alex Cherepanov</strong></p>
<blockquote>
<pre>
Search for 'trailer' harder: at the end and at the beginning of the file.
This helps to recover some more of broken linearized files.
Bug 691894, customer 580.
</pre>
<p>[Resource/Init/pdf_rbld.ps]</p>
</blockquote>

<p><strong><a name="2011-01-19T202554.918598Z"></a>
2011-01-19T20:25:54.918598Z Robin Watts</strong></p>
<blockquote>
<pre>
Revision 12038 revealed a bug in the transparency code; an operation with
a blend mode of 'Normal' and a solid alpha would be allowed to use the
fast stroking code, even though it had transparency in due to being a pattern.

Here we fix the code to check for transparency. As noted on bug 691900 this
test treats all type 2 patterns as being transparent, so could be improved.

The cluster differences this gives have been checked and correct the
regressions of revision 12038.


</pre>
<p>[base/gdevp14.c base/gstrans.c]</p>
</blockquote>

<p><strong><a name="2011-01-19T180059.394482Z"></a>
2011-01-19T18:00:59.394482Z Robin Watts</strong></p>
<blockquote>
<pre>
Bug 691897 shows a PDF that is much slower when transparency is enabled than
when it is not. The time is primarily spent in the stroke filling code due
to the fact that when transparency is enabled strokes need to be rendered
all at once, rather than segment by segment. This causes the scan conversion
code to have to work much harder.

In fact, the code uses solid alpha and &quot;compatible&quot; blend mode for most
strokes, so we would be perfectly safe to use the normal mechanism. The
code attempts to recognise this case already, but was only spotting &quot;Normal&quot;
blend mode and not it's synonym &quot;Compatible&quot;. We now roll the two together.

Cluster testing shows this produces various differences; none to do with
blending, all to do with different roundings in the positions of the stroked
paths. Bug 690845 is open for this already.

</pre>
<p>[base/gdevp14.c base/gstrans.c base/gstparam.h]</p>
</blockquote>

<p><strong><a name="2011-01-18T215256.712015Z"></a>
2011-01-18T21:52:56.712015Z regression</strong></p>
<blockquote>
<pre>
Temporarily add 75 dpi pgmraw output to GhostPCL and disable ps2write output to the cluster regressions.
</pre>
<p>[toolbin/localcluster/build.pl]</p>
</blockquote>

<p><strong><a name="2011-01-18T102212.280482Z"></a>
2011-01-18T10:22:12.280482Z Chris Liddell</strong></p>
<blockquote>
<pre>
Resolve some problems with the shared library build on Sparc/Solaris,
with the SunStudio tools.

Have configure select between the GNUism -soname and the more convetional
-h option to set the &quot;internal&quot; name of the shared library.

SunStudio 12 has changed the default optimization level option for cc to
be -O3 (previously was -02), which results in Ghostscript crashing.

No cluster differences expected.

Bug 689490 

</pre>
<p>[base/macosx.mak base/Makefile.in base/configure.ac base/unix-dll.mak base/unix-gcc.mak base/macos-mcp.mak]</p>
</blockquote>

<p><strong><a name="2011-01-17T213708.425154Z"></a>
2011-01-17T21:37:08.425154Z Alex Cherepanov</strong></p>
<blockquote>
<pre>
I don't know any version of VC compiler that can compile embedded assembly
code in Luratech JPEG 2000 library. (and other compilers are excluded on
the preprocessor level). So the library is now always compiled with
NO_ASSEMBLY flag. Perhaps, a new version of the library will be better.
</pre>
<p>[psi/msvc32.mak]</p>
</blockquote>

<p><strong><a name="2011-01-17T173350.118892Z"></a>
2011-01-17T17:33:50.118892Z Robin Watts</strong></p>
<blockquote>
<pre>
Add code for using run_rops for 8 and 24 bit targets too. Cluster testing shows
that this gives the same results, but limited local testing suggests the setup
costs mean this isn't yet a win. Therefore leaving disabled for now.

</pre>
<p>[base/gdevmr8n.c base/gsroprun.c base/gsropt.h]</p>
</blockquote>

<p><strong><a name="2011-01-17T121139.376205Z"></a>
2011-01-17T12:11:39.376205Z Robin Watts</strong></p>
<blockquote>
<pre>
Remove unused lop_ral definitions, and move pdf14 lop bit down into the freed
space (for neatness).

No changes expected in cluster.

</pre>
<p>[base/gsropt.h]</p>
</blockquote>

<p><strong><a name="2011-01-16T012536.175335Z"></a>
2011-01-16T01:25:36.175335Z Marcos H. Woehrmann</strong></p>
<blockquote>
<pre>
Added missing std.h dependency to gstoptab.c to fix parallel make
under linux.
</pre>
<p>[base/lib.mak]</p>
</blockquote>

<p><strong><a name="2011-01-15T160130.937666Z"></a>
2011-01-15T16:01:30.937666Z Robin Watts</strong></p>
<blockquote>
<pre>
First commit of new scheme for rop acceleration; offer functions that do
'runs' of rops rather than single rops. This enables us to hide optimised
versions (or even dynamically created code) under a single interface.

The current code is only used in 1bpp cases, but is already showing a
signficant speed up, with lots of scope for future optimisations.

No cluster differences shown.

</pre>
<p>[base/lib.mak base/gsroprun.c base/gsropt.h base/gdevmr1.c]</p>
</blockquote>

<p><strong><a name="2011-01-15T155350.166886Z"></a>
2011-01-15T15:53:50.166886Z Robin Watts</strong></p>
<blockquote>
<pre>
Fix loooong standing bug in rop3_swap_S_T, in that it doesn't actually work.
This shouldn't affect anything as it's not currently used, but WILL be used
in my next commit.

</pre>
<p>[base/gsropt.h]</p>
</blockquote>

<p><strong><a name="2011-01-14T185846.405071Z"></a>
2011-01-14T18:58:46.405071Z Henry Stiles</strong></p>
<blockquote>
<pre>
Bracket off gs_debug_c with #ifdef DEBUG so it is not called in
production builds.

</pre>
<p>[base/gxht.c base/gxclimag.c base/gxttfb.c base/gxpcmap.c base/gxccman.c base/gsfcmap1.c base/gspaint.c]</p>
</blockquote>

<p><strong><a name="2011-01-14T165647.376046Z"></a>
2011-01-14T16:56:47.376046Z Chris Liddell</strong></p>
<blockquote>
<pre>
Changes to the Unix configure based builds to tidy up specifying
subsets of output devices.

Some devices were always being included regardless of the options
given to configure, resolved by tidying up the macro expansions
in Makefile.in done by the configure script.

Also the page device and clist device are effectively required by
all configurations, so those are now included in the core build.

Finally, the contrib/gomni.c driver relied on two functions in
base/gdevbmpc.c which is an optional driver, so configuring
the Omni driver to be built it, and bmp16 not would result
in undefined symbols. contrib/gomni.c now has its own
equivalents of those functions.

The bbox device remains as the ultimate &quot;fallback&quot; device.

Bug 689546

</pre>
<p>[base/lib.mak contrib/gomni.c base/Makefile.in base/configure.ac base/devs.mak]</p>
</blockquote>

<p><strong><a name="2011-01-13T161939.522851Z"></a>
2011-01-13T16:19:39.522851Z Chris Liddell</strong></p>
<blockquote>
<pre>
Remove the bogus C++ requirement in the copy of Jasper we
ship with Ghostscript by recreating the autotools related
files for Jasper.

I can't be sure, but it seems that a bug in one of the
autotools originally used for our Jasper had a bug which
resulted in C++ being misidentified as a required,
rather than optional, feature of the build environment.

Bug 691563.

No cluster differences expected.



</pre>
<p>[jasper/src/libjasper/jpc/Makefile.in jasper/src/libjasper/bmp/Makefile.in jasper/configure.ac jasper/src/libjasper/jpg/Makefile.in jasper/src/appl/Makefile.in jasper/src/libjasper/include/Makefile.in jasper/src/libjasper/ras/Makefile.in jasper/src/Makefile.in jasper/aclocal.m4 jasper/src/libjasper/pnm/Makefile.in jasper/src/libjasper/jp2/Makefile.in jasper/configure jasper/src/msvc/Makefile.in jasper/src/libjasper/pgx/Makefile.in jasper/Makefile.in jasper/src/libjasper/Makefile.in jasper/src/libjasper/include/jasper/Makefile.in jasper/src/libjasper/base/Makefile.in jasper/src/libjasper/mif/Makefile.in]</p>
</blockquote>

<p><strong><a name="2011-01-13T143733.986698Z"></a>
2011-01-13T14:37:33.986698Z Robin Watts</strong></p>
<blockquote>
<pre>
Fix Bug 689698 by prefixing scan_token (and other externally exported
scanning related symbols) by gs_.

No changes in cluster testing (other than 1 timeout, and 2 indeterminisms).


</pre>
<p>[psi/ztoken.c psi/ztype.c psi/imain.c psi/iscan.c psi/itoken.h psi/ziodev.c psi/interp.c psi/iscan.h psi/imainarg.c]</p>
</blockquote>

<p><strong><a name="2011-01-12T211153.461044Z"></a>
2011-01-12T21:11:53.461044Z Robin Watts</strong></p>
<blockquote>
<pre>
Fix Bug 691682 - cryptic error messages when misspecifying compression type
for tiff devices.

This patch makes the tiff devices take heed of errors propogated up from the
tiff library. This means we'll now drop out at the first error rather than
carry on through and give a broken file at the end silently.

Also, we output a more helpful error message in the case where the
compression type is misselected.

Cluster testing shows no changes.

</pre>
<p>[base/gdevtifs.c]</p>
</blockquote>

<p><strong><a name="2011-01-11T213354.972732Z"></a>
2011-01-11T21:33:54.972732Z Michael Vrhel</strong></p>
<blockquote>
<pre>
Fix for a number of issues found by Ray with the halftone creation tool.  

These include a crash for a divide by zero in the gcd function (caused failure at 0 degree screen generation)
Fix so that the Holladay screen is no longer created as an output option.
Fix in  ppm output header.
Fix in how the lpi is selected.
Fix for when we have a screen that has essentially one dot (also caused a crash).
Addition of a ReadMe.

A lot more testing is needed, in particular, the dithering of the dots in the macro-screens needs additional testing and the relationship between the desired number of quantization levels and the size of the screen needs to be properly computed.  There is a list of features that need to be added described in the ReadMe.  </pre>
<p>[toolbin/color/halftone/halfttoning/halfttoning.vcproj toolbin/color/halftone/README toolbin/color/halftone/halfttoning/halftone.c]</p>
</blockquote>

<p><strong><a name="2011-01-11T011759.815496Z"></a>
2011-01-11T01:17:59.815496Z Ray Johnston</strong></p>
<blockquote>
<pre>
Add output modes for PostScript HalftoneType 3 threshold arrays (-ps) and
PPM files (-ppm) that have the width in the file rather than only encoded
in the filename. The -ppm mode is untested and marginally useful.

The -ps mode was tested (on Windoze) with:

toolbin/color/halftone/Debug/halfttoning.exe -ps -r 300 -l 23 -a 45

gswin32c -r300 -dDisplayFormat=16#20102 -c &quot;(Screen_Holladay_Shift10_20x10.ps) \
 run sethalftone (examples/tiger.eps) run&quot;

The result doesn't look very good, but at least it runs and we can examine
the problems.
</pre>
<p>[toolbin/color/halftone/halfttoning/halftone.c]</p>
</blockquote>

<p><strong><a name="2011-01-11T004920.559732Z"></a>
2011-01-11T00:49:20.559732Z Michael Vrhel</strong></p>
<blockquote>
<pre>
Hopefully a fix for indeterminism introduced in rev 12005.  The source of this was that the cups and psdcmyk device are now using the older slower color image rendering function due to the fact that they have non-standard color mapping procedures.  Missing parenthesis were introduced when the ICC branch was merged into the trunk which was the source of the issue.  This was causing a check for color range mask testing even when the image was not a type 4.</pre>
<p>[base/gxicolor.c]</p>
</blockquote>

<p><strong><a name="2011-01-10T220019.847574Z"></a>
2011-01-10T22:00:19.847574Z Till Kamppeter</strong></p>
<blockquote>
<pre>
Added the source code of the CUPS libraries to the Ghostscript source
package

Like with zlib, libpng, libjpeg, ... it is now possible to
build the complete Ghostscript (including the CUPS Raster output
device) on systems where there is no CUPS library available.

Note that currently only the CUPS library source code is added, the
results of the ./configure run in the Makedefs and config.h files, and
the Makefiles are stripped to only build the libraries and nothing
else. The CUPS ./configure command line which was used to obtain
makedefs and config.h was

./configure --enable-static --without-shared --disable-dbus --without-php \
--disable-slp --disable-gssapi --disable-ldap --disable-ssl \
--disable-cdsassl --disable-gnutls --disable-openssl --disable-pam \
--disable-dnssd --disable-launchd

This way the built CUPS libraries do not need any system services or
hardware interfaces of Linux. In addition to standard libraries they
use only libz, libpng, libjpeg, and libtiff. These libraries
Ghostscript needs anyway and copies of their source code also ship
with Ghostscript.

What is still missing is the integration into the build system of
Ghostscript and also the operating-system-independent base/cups.mak
file (like base/png.mak etc.).

No changes expected in the built Ghostscript as the code is not yet
integrated in the build system.

</pre>
<p>[cups/libs/cups/backend.c cups/libs/cups/testadmin.c cups/libs/filter/image-pix.c cups/libs/cups/testoptions.c cups/libs/cups/backend.h cups/libs/cups/http-private.h cups/libs/filter/image.c cups/libs/cups/testpwg.c cups/libs/filter/image-sun.c cups/libs/cups/ppd-private.h cups/libs/filter/image.h cups/libs/filter/error.c cups/libs/cups/Dependencies cups/libs/cups/ipp-private.h cups/libs/cups/md5passwd.c cups/libs/cups/notify.c cups/libs/cups/dir.c cups/libs/cups/testarray.c cups/libs/cups/file.c cups/libs/cups/testhttp.c cups/libs/filter/image-png.c cups/libs/filter/image-zoom.c cups/libs/cups/getdevices.c cups/libs/cups/transcode.c cups/libs/cups/dir.h cups/libs/cups/globals.c cups/libs/cups/testppd.c cups/libs/filter/image-tiff.c cups/libs/cups/file.h cups/libs/filter/image-pnm.c cups/libs/cups/transcode.h cups/libs/cups/testipp.c cups/libs/cups/globals.h cups/libs/filter cups/libs/filter/image-photocd.c cups/libs/cups/options.c cups/libs/cups/emit.c cups/libs/cups/localize.c cups/libs/cups/tempfile.c cups/libs cups/libs/cups/testcups.c cups/libs/cups/custom.c cups/libs/cups/pwg-media.c cups/libs/cups/util.c cups/libs/cups/array.c cups/libs/cups/pwg-ppd.c cups/libs/cups/testi18n.c cups/libs/cups/http.c cups/libs/filter/image-jpeg.c cups/libs/filter/Dependencies cups/libs/cups/array.h cups/libs/cups/http-addrlist.c cups/libs/cups/language.c cups/libs/cups/ppd.c cups/libs/cups/http.h cups/libs/cups/md5.c cups/libs/cups/debug.c cups/libs/cups/ipp.c cups/libs/cups/language.h cups/libs/cups/ppd.h cups/libs/cups/backchannel.c cups/libs/cups/http-support.c cups/libs/cups/mark.c cups/libs/cups/md5.h cups/libs/cups/snmp-private.h cups/libs/cups/debug.h cups/libs/cups/Makefile cups/libs/cups/ipp.h cups/libs/cups/dest.c cups/libs/config.h cups/libs/cups/auth.c cups/libs/cups/ipp-support.c cups/libs/filter/common.c cups/libs/cups/langprintf.c cups/libs/filter/image-sgilib.c cups/libs/cups/raster.h cups/libs/filter/common.h cups/libs/cups/attr.c cups/libs/filter/image-private.h cups/libs/cups/sidechannel.c cups/libs/cups/testsnmp.c cups/libs/cups/usersys.c cups/libs/cups cups/libs/cups/cups.h cups/libs/cups/sidechannel.h cups/libs/cups/i18n.h cups/libs/Makedefs cups/libs/cups/testconflicts.c cups/libs/filter/image-colorspace.c cups/libs/cups/adminutil.c cups/libs/cups/http-addr.c cups/libs/filter/interpret.c cups/libs/cups/request.c cups/libs/cups/versioning.h cups/libs/cups/md5-apple.h cups/libs/cups/adminutil.h cups/libs/cups/file-private.h cups/libs/cups/encode.c cups/libs/filter/image-gif.c cups/libs/cups/snprintf.c cups/libs/cups/string.c cups/libs/filter/Makefile cups/libs/cups/getputfile.c cups/libs/filter/image-bmp.c cups/libs/cups/pwg-private.h cups/libs/cups/pwg-file.c cups/libs/cups/string.h cups/libs/filter/raster.c cups/libs/cups/page.c cups/libs/cups/getifaddrs.c cups/libs/cups/snmp.c cups/libs/filter/image-sgi.c cups/libs/cups/testfile.c cups/libs/cups/testlang.c cups/libs/filter/image-sgi.h cups/libs/cups/conflicts.c]</p>
</blockquote>

<p><strong><a name="2011-01-10T032952.464842Z"></a>
2011-01-10T03:29:52.464842Z Alex Cherepanov</strong></p>
<blockquote>
<pre>
Add support for MSVC 10 to msvc32.mak .
</pre>
<p>[psi/msvc32.mak]</p>
</blockquote>

<p><strong><a name="2011-01-09T021919.656942Z"></a>
2011-01-09T02:19:19.656942Z Michael Vrhel</strong></p>
<blockquote>
<pre>
Fix for color related warnings in bug 691459</pre>
<p>[base/gxi12bit.c base/lib.mak base/gxiscale.c base/gsicc_manage.c base/gxcmap.h base/gxicolor.c base/gscspace.c]</p>
</blockquote>

<p><strong><a name="2011-01-08T195651.307278Z"></a>
2011-01-08T19:56:51.307278Z Alex Cherepanov</strong></p>
<blockquote>
<pre>
Don't discard encoding of a TrueType PDF font when it is not embedded.
Ghyph indexes vary between font versions, and encoding-based mapping
yelds better results in this case. Bug 691693.
</pre>
<p>[Resource/Init/pdf_font.ps]</p>
</blockquote>

<p><strong><a name="2011-01-08T194231.743686Z"></a>
2011-01-08T19:42:31.743686Z regression</strong></p>
<blockquote>
<pre>
Additional changes to support ps2write in the cluster (and nightly and weekly) regression.
</pre>
<p>[toolbin/localcluster/clustermaster.pl toolbin/localcluster/readlog.pl toolbin/localcluster/build.pl toolbin/localcluster/run.pl toolbin/localcluster/compare.pl]</p>
</blockquote>

<p><strong><a name="2011-01-08T175607.987718Z"></a>
2011-01-08T17:56:07.987718Z regression</strong></p>
<blockquote>
<pre>
Add ps2write testing to the cluster regression.
</pre>
<p>[toolbin/localcluster/build.pl]</p>
</blockquote>

<p><strong><a name="2011-01-08T175526.179279Z"></a>
2011-01-08T17:55:26.179279Z Alex Cherepanov</strong></p>
<blockquote>
<pre>
Fix the code that repairs missing or incorrect /Subtype attribute. Write
a valid attribute (always /Type1) into the font resource. This helps to 
avoid confusion caused by an invalid value later on. Bug 691872.
</pre>
<p>[Resource/Init/pdf_font.ps]</p>
</blockquote>

<p><strong><a name="2011-01-08T105004.294111Z"></a>
2011-01-08T10:50:04.294111Z Till Kamppeter</strong></p>
<blockquote>
<pre>
Fixed typo.
</pre>
<p>[cups/gdevcups.c]</p>
</blockquote>

<p><strong><a name="2011-01-08T104712.179146Z"></a>
2011-01-08T10:47:12.179146Z Till Kamppeter</strong></p>
<blockquote>
<pre>
CUPS Raster device: Some clean-up.
</pre>
<p>[cups/gdevcups.c]</p>
</blockquote>

<p><strong><a name="2011-01-08T103656.827100Z"></a>
2011-01-08T10:36:56.827100Z Till Kamppeter</strong></p>
<blockquote>
<pre>
CUPS Raster: Another approach to fix both bug #691733 and #690435: Set _old values at the beginning of the cups_put_params() function.
</pre>
<p>[cups/gdevcups.c]</p>
</blockquote>

<p><strong><a name="2011-01-07T233317.663910Z"></a>
2011-01-07T23:33:17.663910Z Till Kamppeter</strong></p>
<blockquote>
<pre>
CUPS Raster output device: Use positive values (1) as dummy values to mark that the color depth has changed and therefore memory needs to get rallocated

WEith this both bug #691733 and bug #690435 get fixed, but this is not
necessarily he right and best solution.

</pre>
<p>[cups/gdevcups.c]</p>
</blockquote>

<p><strong><a name="2011-01-07T140517.614099Z"></a>
2011-01-07T14:05:17.614099Z Till Kamppeter</strong></p>
<blockquote>
<pre>
Fixed search-and-replace error in &quot;cups&quot; output device, bug 691871.
</pre>
<p>[cups/gdevcups.c]</p>
</blockquote>

<p><strong><a name="2011-01-07T044942.455234Z"></a>
2011-01-07T04:49:42.455234Z Michael Vrhel</strong></p>
<blockquote>
<pre>
Fix so that we do not do the ICC optimized flow for color images when our target device does not have standard color mapping procedures.  This occurs for example, in the case for the CUPs device where the color mapping procedures map CMYK, RGB and Gray to the current CUPs device color space.   For standard gray, RGB and CMYK devices these procedures are avoided as the CMM performs all the required mappings.  This commit will show differences in the files for the cups device as well as the psdcmyk device, which also should be using the non-optimized flow due to the use of CMYK + spot colorants, which will not be managed correctly by the CMM in general.  The differences int the psdcmyk files that do not have extra spot colorants are tiny.  This should fix bug 691760.</pre>
<p>[base/gxi12bit.c base/gdevp14.c base/lib.mak base/gxcmap.c base/gxiscale.c base/gdevnfwd.c base/gxcmap.h base/gxicolor.c]</p>
</blockquote>

<p><strong><a name="2011-01-06T191856.657732Z"></a>
2011-01-06T19:18:56.657732Z Alex Cherepanov</strong></p>
<blockquote>
<pre>
Fix a cut-ant-paste error in setting QuantTables for JPXEncode filter.
Bug 691868.
</pre>
<p>[base/sdeparam.c]</p>
</blockquote>

<p><strong><a name="2011-01-06T110852.017177Z"></a>
2011-01-06T11:08:52.017177Z Ken Sharp</strong></p>
<blockquote>
<pre>
Minor enhancement to ps2write for DSC output, remove trailing EOF.

Prevent ps2write emitting a trailing EOF (0x04) byte when producing DSC-compliant
output. The emission of this byte was leading to warnings about the output containing
binary.

No differences expected.
</pre>
<p>[base/gdevpdf.c]</p>
</blockquote>

<p><strong><a name="2011-01-05T173542.089947Z"></a>
2011-01-05T17:35:42.089947Z Michael Vrhel</strong></p>
<blockquote>
<pre>
Reverting of commit 11995</pre>
<p>[base/gxipixel.c base/lib.mak]</p>
</blockquote>

<p><strong><a name="2011-01-05T160522.763938Z"></a>
2011-01-05T16:05:22.763938Z Ken Sharp</strong></p>
<blockquote>
<pre>
ps2write DSC enhancement. Alter the default setting of CompressPages and CompressFonts to
true. Gives better conforming output at present (as well as smaller output)
</pre>
<p>[Resource/Init/gs_pdfwr.ps]</p>
</blockquote>

<p><strong><a name="2011-01-05T154341.972063Z"></a>
2011-01-05T15:43:41.972063Z Ken Sharp</strong></p>
<blockquote>
<pre>
Fix three compiler warnings in revision 11997
</pre>
<p>[base/gdevpdfu.c]</p>
</blockquote>

<p><strong><a name="2011-01-05T152839.325806Z"></a>
2011-01-05T15:28:39.325806Z Till Kamppeter</strong></p>
<blockquote>
<pre>
Use the &quot;x11&quot; output device as default output device for an X-enabled Ghostscript, as &quot;x11alpha&quot; is too buggy

The simple call &quot;gs &lt;file&gt;&quot; is a common call to check a PostScript
file when debugging printing problems. Unfortunately, this call uses
the &quot;x11alpha&quot; output device which has a lot of bugs, especially on
complex input files. This makes easily a wrong impression of the input
file then. Having a somewhat inferior screen output quality (no
anti-aliasing) is no problem as the mentioned Ghostscript call is only
used for debugging purposes.

</pre>
<p>[base/Makefile.in]</p>
</blockquote>

<p><strong><a name="2011-01-05T141741.770782Z"></a>
2011-01-05T14:17:41.770782Z Ken Sharp</strong></p>
<blockquote>
<pre>
ps2write DSC enhancement. Belt and braces approach when emitting a serialised array/proc

This code should break an (already serialised) array or procedure emission if the total
length of the data to write exceeds 255 bytes. The data will be broken at name, array,
string or procedure tokens (ie '/', '[', '(', '&lt;') or a space character. If none of
these occurs in the preceding 255 bytes then we emit a line break anyway and carry on.

I do not have any test cases which exercise this code path with a data size &gt; 255
bytes, so I'm not certain that it works as expected.

No differences expected as the regression test doesn't exercise ps2write.
</pre>
<p>[base/gdevpdfu.c]</p>
</blockquote>

<p><strong><a name="2011-01-04T185636.226711Z"></a>
2011-01-04T18:56:36.226711Z Alex Cherepanov</strong></p>
<blockquote>
<pre>
Fix spelling errors in a German man page. Thanks to Peter Dyballa for
the patch. Bug 691863.
</pre>
<p>[man/de/gsnd.1]</p>
</blockquote>

<p><strong><a name="2011-01-04T181941.129921Z"></a>
2011-01-04T18:19:41.129921Z Michael Vrhel</strong></p>
<blockquote>
<pre>
Fix so that the presence of source black and white are properly detected with the ICC color management changes.  This detection is useful for the optimization of certain ROPs.  Previously black and white were detected from looking at the device color.  This was a problem since the device black color is usually not pure for a CMYK printer with the ICC changes.  This fix updates the detection function so that it looks at the source color and maps it to the default RGB color space where black and white are well defined.
</pre>
<p>[base/gxipixel.c base/lib.mak]</p>
</blockquote>

<p><strong><a name="2011-01-04T163538.827232Z"></a>
2011-01-04T16:35:38.827232Z Ken Sharp</strong></p>
<blockquote>
<pre>
More DSC-compliant ps2write work.

When emitting strings for ps2write, write them as hex strings instead of regular
strings, if the ps2write output is to be DSC-compliant, break the hex strings every
255 bytes or less. Prepend and append newlines to the hex string when emitting
DSC-compliant PostScript to ensure that preceding or following data doesn't cause the
line length to exceed 255 bytes.

No differences expected as ps2write is not currently regression tested.
</pre>
<p>[base/gdevpdfu.c]</p>
</blockquote>

<p><strong><a name="2011-01-04T104832.930138Z"></a>
2011-01-04T10:48:32.930138Z Ken Sharp</strong></p>
<blockquote>
<pre>
Fix (pdfwrite) : Write ToUnicode CMap files which Acrobat likes

Bug #691862 (and also bug #691849) &quot;Unable to copy text from the converted PDF&quot;

It seems the Adobe documentation lies (or more generously is inconsistent). The
CMap tech note (5014) says that entries are not zero padded, so values less
than 256 are emitted as single bytes, values 256-&gt;65535 are two bytes etc.
However the ToUnicode CMap tech note (5411) says:

&quot;Because a “ToUnicode” mapping file is used to covert from CIDs (which begin at
decimal 0, which is expressed as 0x0000 in hexadecimal notation) to Unicode
code points, the following “codespacerange” definition, without exception,
shall always be used: 1 begincodespacerange  &lt;0000&gt; &lt;FFFF&gt;endcodespacerange&quot;

(This is somewhat restrictive, since CIDs can exceed 2 bytes, even though
UTF-16 can't, I could forsee a need to map high CIDs to lower UTF-16 values)

Finally, the PDF Reference (1.7) says:

&quot;The CMap file must contain begincodespacerange and endcodespacerangeoperators
that are consistent with the encoding that the font uses. In particular, for a
simple font, the codespace must be one byte long.&quot;

So the PDF Reference conflicts with the tech note which it references!

In fact none of the above seems to be quite what Acrobat actually does. 

It seems that Acrobat does not care what size (in bytes) the codespacerange is,
no matter what kind of font is present. However it *does* care what size the
bfrange entries are. For simple fonts the bfrange entries must be single bytes,
for CIDFonts the bfrange entries must be two bytes. Deviation in either case
leads to files which Acrobat cannot process and either causes errors or
incorrect text when copying and pasting.

Changed the ToUnicode emission (mostly restoring revision 11170 which was removed in
revision 11795 because of bug #691849) so that we emit single byte bfrange and 
codespacerange arguments for simple (non-CID) fonts, and emit double byte, padded with
00 arguments to bfrange and codespacerange for CID fonts.

No differences expected as this only affects text search/copy in Acrobat.
</pre>
<p>[base/gsfcmap.c base/gdevpdte.c]</p>
</blockquote>

<p><strong><a name="2011-01-03T201958.048424Z"></a>
2011-01-03T20:19:58.048424Z Ray Johnston</strong></p>
<blockquote>
<pre>
Don't bump the 'used' element of the chunk manager structure if the allocation
of a chunk fails. Thanks to Norbert Janssen for noticing this. Bug 691720.
</pre>
<p>[base/gsmchunk.c]</p>
</blockquote>

<p><strong><a name="2011-01-03T185800.432432Z"></a>
2011-01-03T18:58:00.432432Z Henry Stiles</strong></p>
<blockquote>
<pre>
The optimization in gdevdgbr to detect a device with a &quot;plain&quot; cmyk 1
bit to rgb mapping was broken because the procedure
cmyk_1bit_map_color_rgb() is obsolete.  The hack here is to detect
output formats compatible with gx_get_bits_copy_cmyk_1bit() which is
significantly faster since it does not have to call the device color
decode procedure.  The device API should have a member that indicates
the most frequently encountered pixel organizations.
</pre>
<p>[base/gdevdgbr.c]</p>
</blockquote>

<p><strong><a name="2011-01-03T162021.454447Z"></a>
2011-01-03T16:20:21.454447Z Henry Stiles</strong></p>
<blockquote>
<pre>
Decode image samples with single precision calculations only.  This
area of the code is performance sensitive and there is no need to
convert to and from doubles.  Also, &quot;image_set_gray&quot; is now inline but
still not enabled.

</pre>
<p>[base/gximono.c base/gximage.h]</p>
</blockquote>

<p><strong><a name="2011-01-03T143356.098558Z"></a>
2011-01-03T14:33:56.098558Z Ken Sharp</strong></p>
<blockquote>
<pre>
Fix ps2write : Attach Encoding for symbolic TrueType fonts

The recent change to not attach Encodings to Sy,bolic TrueType fonts, as per the PDF
spec, meant that ps2write also wrote symbolic TT fonts without a /Encoding. This is not
ideal, because opdfread.ps then attaches a default StandardEncoding to the font. This
simply will not work correctly.

After some experimentation with extracting (in PostScript) the POST table from the TT
font, sense prevailed. This patch modifies the condition so that if we are producing
output for ps2write we continue to attach a /Encoding. (in this case it doesn't
matter whether we are producing DSC output, we always want the Encoding)

No differences expected.
</pre>
<p>[base/gdevpdtt.c]</p>
</blockquote>

<p><strong><a name="2011-01-03T062152.574265Z"></a>
2011-01-03T06:21:52.574265Z Alex Cherepanov</strong></p>
<blockquote>
<pre>
Adjust pdfemptycount variable during .execgroup execution to reflect the
actual stack count. Avoid errors in sc1/scn caused by wrong operand count.
Bug 691624.
</pre>
<p>[Resource/Init/pdf_draw.ps]</p>
</blockquote>

<p><strong><a name="2011-01-01T161749.255469Z"></a>
2011-01-01T16:17:49.255469Z Alex Cherepanov</strong></p>
<blockquote>
<pre>
Change all &quot;/foo /bar load def&quot; into &quot;/foo {bar} bind 0 get def&quot;
in PDF interpreter to ebable operator redefinition with -dDELAYBIND.
Bug 691669, customer 850.
</pre>
<p>[Resource/Init/pdf_draw.ps]</p>
</blockquote>

<p><strong><a name="2010-12-31T062359.391706Z"></a>
2010-12-31T06:23:59.391706Z Alex Cherepanov</strong></p>
<blockquote>
<pre>
Trap errors that may happen during loading of embedded fonts and try
to load the font by the name. Bug 691045.
</pre>
<p>[Resource/Init/pdf_font.ps]</p>
</blockquote>

<p><strong><a name="2010-12-30T190959.966731Z"></a>
2010-12-30T19:09:59.966731Z Alex Cherepanov</strong></p>
<blockquote>
<pre>
Use -fPIC instead of -KPIC on SunOS for &quot;so&quot; target when compiler is gcc.
Bug 690630, customer 200.
</pre>
<p>[base/configure.ac]</p>
</blockquote>

<p><strong><a name="2010-12-30T141142.974030Z"></a>
2010-12-30T14:11:42.974030Z Alex Cherepanov</strong></p>
<blockquote>
<pre>
Clip excessive size of the radial gradient extensions to the fixed point
range. To avoid trivial differences, try the old fixed point function first
and use new floating point one only when the old function fails. Bug 691775.
</pre>
<p>[base/gspath.h base/gxshade1.c base/gspath.c]</p>
</blockquote>

<p><strong><a name="2010-12-29T130145.722135Z"></a>
2010-12-29T13:01:45.722135Z Alex Cherepanov</strong></p>
<blockquote>
<pre>
Ignore transparency group XObject without /Group attribute and issue a
warning about it. Bug 691854.
</pre>
<p>[Resource/Init/pdf_draw.ps]</p>
</blockquote>

<p><strong><a name="2010-12-28T031357.856572Z"></a>
2010-12-28T03:13:57.856572Z Alex Cherepanov</strong></p>
<blockquote>
<pre>
Implement correct defaults for /FontMatrix attribute in composite CFF
font following analysis by Ken and Masaki (see the comment). Bug 690724.
</pre>
<p>[psi/zfont2.c]</p>
</blockquote>

<p><strong><a name="2010-12-27T233439.189121Z"></a>
2010-12-27T23:34:39.189121Z Alex Cherepanov</strong></p>
<blockquote>
<pre>
Fix unterminated string used by &quot;%%CreationDate:&quot; comment in ps2write
device. Partial fix for 691853.
</pre>
<p>[base/gdevpdfu.c]</p>
</blockquote>

<p><strong><a name="2010-12-24T110847.918403Z"></a>
2010-12-24T11:08:47.918403Z Chris Liddell</strong></p>
<blockquote>
<pre>
Put a check in place to ensure that the UFST pre version 6
does not attempt to handle anything other than its own
Microtype fonts.

This ensures that the UFST 5.x FAPI plugin can coexist
safely with the Freetype FAPI plugin.


</pre>
<p>[psi/fapiufst.c]</p>
</blockquote>

<p><strong><a name="2010-12-24T095039.994493Z"></a>
2010-12-24T09:50:39.994493Z Chris Liddell</strong></p>
<blockquote>
<pre>
Where FAPI finds a TTF glyf description to pass into the target font
library, fix the decision on the length of the offset to the glyph
data. Previously, the condition was wrong, and always ended up reading
2 bytes for the offset.

Bug 691850
	

No cluster differences expected.


</pre>
<p>[psi/zfapi.c]</p>
</blockquote>

<p><strong><a name="2010-12-24T002830.327488Z"></a>
2010-12-24T00:28:30.327488Z Alex Cherepanov</strong></p>
<blockquote>
<pre>
Limit the use of -rdynamic flag to GCC on Linux. This flags is supported
by GCC only if the platform has ELF executable format. Bug 691453.
</pre>
<p>[base/configure.ac]</p>
</blockquote>

<p><strong><a name="2010-12-23T143936.123969Z"></a>
2010-12-23T14:39:36.123969Z Ken Sharp</strong></p>
<blockquote>
<pre>
fix pdfwrite : Always write 2 bytes for ToUnicode CMap ranges

Bug #691849 &quot;pdfwriter regression: pdf text element is broken&quot;

revision 11170 modified CMap emission so that bfchar/bfrange entries less than 256 were
emitted as a single byte, as specified in the CMAp specification. However ToUnicode
CMaps don't follow the normal specification (I suspect this is a bug which has been
pickled into the spec by Adobe), and require that values always have 2 bytes.

reverted 11170 so that we write 2 byte ToUnicode CMap entries.

No differences expected.</pre>
<p>[base/gsfcmap.c]</p>
</blockquote>

<p><strong><a name="2010-12-23T114120.825457Z"></a>
2010-12-23T11:41:20.825457Z Ken Sharp</strong></p>
<blockquote>
<pre>
ps2write enhancement

Initialise the SetPageSize flag to true when ProduceDSC is set, so that page sizes are
properly requested by the output PostScript file.

No differences expected.
</pre>
<p>[base/gdevpdfu.c]</p>
</blockquote>

<p><strong><a name="2010-12-22T184813.456231Z"></a>
2010-12-22T18:48:13.456231Z Michael Vrhel</strong></p>
<blockquote>
<pre>
Initial commit of code for creating halftone screens.  This code needs additional debugging, especially in the case of edge parameters.  It will currently create threshold arrays based upon desired lpi, angle, quantization levels, and device resolution.  The method is restricted to angles that are the arctangent of rational numbers. Every attempt is made to achieve the requested lpi by using the rational angle that achieves an lpi over the requested value.  Since there is a trade off between lpi and quantization levels, the requested quantization levels are obtained through dithering of the dot cells within the supercell.  Essentially, the dots within the supercell do not all take on the same values and can grow at different rates in a visually pleasing manner.  There is still a bit of work to do still on this dithering as well as controlling the rate of growth for the dots.</pre>
<p>[toolbin/color/halftone toolbin/color/halftone/halfttoning.sln toolbin/color/halftone/halfttoning/halfttoning.vcproj toolbin/color/halftone/halfttoning toolbin/color/halftone/halfttoning/halftone.c]</p>
</blockquote>

<p><strong><a name="2010-12-22T161758.830786Z"></a>
2010-12-22T16:17:58.830786Z Ken Sharp</strong></p>
<blockquote>
<pre>
Just remove a commented out line of code that should have been removed before commit.
</pre>
<p>[base/gdevpdfb.c]</p>
</blockquote>

<p><strong><a name="2010-12-22T140556.481488Z"></a>
2010-12-22T14:05:56.481488Z Ken Sharp</strong></p>
<blockquote>
<pre>
More enhancement work for type 3 fonts with PCL

Previously we set the horizontal advance argument to the d1 (setcachedevice) operator to
0, and set the Widths entry to 0, for all type 3 bitmap fonts created by rendering the
original font.

This was required to prevent regression errors with the test suite when we altered the
type 3 font accumulation so that it made more effort to preserve the input character
code, in an attempt to improve searching.

Revision 11969 fixes a problem with cached characters which was leading to the /Widths
array containing garbage values. With that revision we can now properly set the 'd1'
horizontal advance, and also set the /Widths array correctly.

No expected differences
</pre>
<p>[base/gdevpdfb.c base/gdevpdti.c]</p>
</blockquote>

<p><strong><a name="2010-12-22T135829.830017Z"></a>
2010-12-22T13:58:29.830017Z Ken Sharp</strong></p>
<blockquote>
<pre>
Fix ps2write/pdfwrite : Up date the show enumerator with the cached character width

When capturing a character bitmap on the first time it is rendered, pdfwrite and
ps2write get the width of the glyph in the cache device. This is then used to update
values in the show enumerator, and these values are used as the Widths entry for the
glyph.

When imaging an already cached character, however, the enumerator values are not updated
which can lead to garbage (uninitialised data) being written as values in the /Widths
array. This patch takes the value from the cached character 'wxy' and updates the show
enumerator 'wxy' with it. This is then used as the value for the /Widths array.

Bug #691836, zweiseit01d4-1.pdf, limitcheck --nostringval--

No differences expected.
</pre>
<p>[base/gxccache.c]</p>
</blockquote>

<p><strong><a name="2010-12-22T003556.638864Z"></a>
2010-12-22T00:35:56.638864Z regression</strong></p>
<blockquote>
<pre>
Fixed bug with r11967 that redirected output to the wrong directory on the 
cluster nodes.
</pre>
<p>[toolbin/localcluster/run.pl]</p>
</blockquote>

<p><strong><a name="2010-12-21T230747.064606Z"></a>
2010-12-21T23:07:47.064606Z Marcos H. Woehrmann</strong></p>
<blockquote>
<pre>
Attempt to remove obj directories before build and report failure.
This detects the situation where a user manually built on one of
the cluster nodes, leaving an obj directory that can't be overwritten
by the cluster software.
</pre>
<p>[toolbin/localcluster/run.pl]</p>
</blockquote>

<p><strong><a name="2010-12-21T230104.915150Z"></a>
2010-12-21T23:01:04.915150Z regression</strong></p>
<blockquote>
<pre>
Merge run.pl and build.pl with nightly regression versions.
</pre>
<p>[toolbin/localcluster/clustermonitor.pl toolbin/localcluster/build.pl toolbin/localcluster/run.pl]</p>
</blockquote>

<p><strong><a name="2010-12-21T175345.618494Z"></a>
2010-12-21T17:53:45.618494Z Chris Liddell</strong></p>
<blockquote>
<pre>
Revise how we set the font types which FAPI should handle, and
ensure that the &quot;dummy&quot; CharStrings dict we set up for Microtype
fonts doesn't get replaced.

Bug 691810

No cluster differences expected.

</pre>
<p>[Resource/Init/gs_fntem.ps Resource/Init/gs_fapi.ps]</p>
</blockquote>

<p><strong><a name="2010-12-21T104401.003179Z"></a>
2010-12-21T10:44:01.003179Z Chris Liddell</strong></p>
<blockquote>
<pre>
Handle Charstrings being replaced by a procedure. This can happen
even with Microtype fonts (which &quot;pretend&quot; to be Type 1, but don't
actually use CharStrings).

This commit also includes some UFST 6.x related changes, the complete
UFST 6.x integration should follow in the not too distant future.

Bug 691834

Not cluster differences.


</pre>
<p>[psi/fapiufst.c base/gxfapiu.c]</p>
</blockquote>

<p><strong><a name="2010-12-20T163854.977548Z"></a>
2010-12-20T16:38:54.977548Z Chris Liddell</strong></p>
<blockquote>
<pre>
When we're handling a Type42 font in FAPI, handle the possibility that
the &quot;CharString&quot; we get might be a null object, by falling back to
the notdef glyph.

Bug 691848
	

No cluster differences expected.

</pre>
<p>[psi/zfapi.c]</p>
</blockquote>

<p><strong><a name="2010-12-18T192714.937495Z"></a>
2010-12-18T19:27:14.937495Z Alex Cherepanov</strong></p>
<blockquote>
<pre>
Implement correct bit packing for an indexed image with 4 bit/pixel color
depth in the interface to Luratech JPX library. Bug 691843, customer 532.
</pre>
<p>[base/sjpx_luratech.c]</p>
</blockquote>

<p><strong><a name="2010-12-18T152443.064303Z"></a>
2010-12-18T15:24:43.064303Z Ken Sharp</strong></p>
<blockquote>
<pre>
Bug #691835

Temporary work-around. It is possible to get into gsicc_init_device_profile with the 
graphics state pointer (pgs) being NULL. This happens if ps2write or pdfwrite convert
a masked image into a regular image.

Because pgs is dereferenced without checking for NULL, this causes a crash.

Its not immediately clear to me if I need to modify ps2write/pdfwrite so that this 
condition doesn't occur, but for now, if pgs is NULL we return from the routine in order
to prevent a crash.

No differences expected
</pre>
<p>[base/gsicc_manage.c]</p>
</blockquote>

<p><strong><a name="2010-12-17T165835.097740Z"></a>
2010-12-17T16:58:35.097740Z Till Kamppeter</strong></p>
<blockquote>
<pre>
Install the CJK examples.
</pre>
<p>[base/unixinst.mak]</p>
</blockquote>

<p><strong><a name="2010-12-17T165651.880152Z"></a>
2010-12-17T16:56:51.880152Z Till Kamppeter</strong></p>
<blockquote>
<pre>
Mention &quot;ps2pdf14&quot; in the man page for ps2pdf.
</pre>
<p>[man/ps2pdf.1 man/de/ps2pdf.1]</p>
</blockquote>

<p><strong><a name="2010-12-17T165453.331106Z"></a>
2010-12-17T16:54:53.331106Z Till Kamppeter</strong></p>
<blockquote>
<pre>
Let Ghostscript work with the libjasper provided by the system.
</pre>
<p>[base/sjpx.c]</p>
</blockquote>

<p><strong><a name="2010-12-17T165049.932561Z"></a>
2010-12-17T16:50:49.932561Z Till Kamppeter</strong></p>
<blockquote>
<pre>
pphs is a script and not a library, put it into the correct group of files in the Makefile.
</pre>
<p>[base/unixinst.mak]</p>
</blockquote>

<p><strong><a name="2010-12-17T164802.245525Z"></a>
2010-12-17T16:48:02.245525Z Till Kamppeter</strong></p>
<blockquote>
<pre>
Fix stone-old security advisory CVE-2009-4270.
</pre>
<p>[base/gsmisc.c]</p>
</blockquote>

<p><strong><a name="2010-12-17T164302.736497Z"></a>
2010-12-17T16:43:02.736497Z Till Kamppeter</strong></p>
<blockquote>
<pre>
Build gsx and gsc executables correctly as executables and not as shared libraries.
</pre>
<p>[base/unix-dll.mak]</p>
</blockquote>

<p><strong><a name="2010-12-17T001641.356524Z"></a>
2010-12-17T00:16:41.356524Z Till Kamppeter</strong></p>
<blockquote>
<pre>
Removed patch noise file.
</pre>
<p>[contrib/pcl3/eprn/eprnrend.c.orig]</p>
</blockquote>

<p><strong><a name="2010-12-16T170024.131587Z"></a>
2010-12-16T17:00:24.131587Z Ken Sharp</strong></p>
<blockquote>
<pre>
Fix (pdfwrite) : Don't clamp rectfill to the page.

Bug #691839 &quot;Invalid EPS conversion with -dEPSCrop&quot;

Rectangular fills (and only the special case of rectangles) were being clamped to the
width/height of the device when emitted. This can cause problems when a matrix is in
force which reduces the actual co-ordinates, in this case a Pattern with a 0.25 scaling.

The clamping caused co-ordinates to be reduced, and part of the fill went missing.

The comment indicated this was to 'work-around' the limit in Acrobat of 32k on user
co-ordinates, but this is too sever a clamp to apply, also the general case path code
does not apply this limit. Altered to make the limit the 32k enforced by Acrobat.

</pre>
<p>[base/gdevpdfd.c]</p>
</blockquote>

<p><strong><a name="2010-12-15T161254.275384Z"></a>
2010-12-15T16:12:54.275384Z Ken Sharp</strong></p>
<blockquote>
<pre>
pdfwrite enhancement : Final DSC changes

Fix a compiler warning, make ProduceDSC=true the default condition so that we create
DSC-compliant PostScript unless told otherwise.

Update the documentation for pswrite and ps2write in devices.htm and Ps2ps2.htm. Note
that pswrite is now deprecated.

Modify the pdf2ps and ps2ps scripts to use ps2write instead of pswrite.

No differences expected.
</pre>
<p>[lib/pdf2ps doc/Ps2ps2.htm lib/pdf2ps.cmd lib/pdf2ps.bat lib/ps2ps doc/Devices.htm base/gdevpdfu.c lib/ps2ps.cmd base/gdevpdfb.h lib/ps2ps.bat]</p>
</blockquote>

<p><strong><a name="2010-12-15T082258.985898Z"></a>
2010-12-15T08:22:58.985898Z Ken Sharp</strong></p>
<blockquote>
<pre>
pdfwrite enhancement : more DSC related activity

Defer the output of the header and the opdfread.ps 'prcoset' until the output file is
closed. This allows us to count the pages and emit the %%Pages: comment in the header
instead of at the end of the file.

Fix the PageBoundingBox comment to have two % characters instead of one.

Check for a new flag 'DSC_OPDFREAD' at the start of opdfread.ps (and write its
definition as part of the header emission in ps2write). If present this prevents the
SetupPageView routine from using setmatrix to reset the CTM to the one saved during
document setup. Because the DSC-compliant output puts save/restore around each page
we don't need to reset the matrix, and the reset prevents the output from working
properly with psnup. If the flag is not present, it is treated as false.

The output now works with GSView, psselect and psnup. The only remaining work is to
track the usage of ProcessDSC and see if we can reuse any of the comments parsed out
of the input.

No differences expected
</pre>
<p>[base/gdevpdfx.h base/gdevpdf.c Resource/Init/opdfread.ps base/gdevpdfu.c]</p>
</blockquote>

<p><strong><a name="2010-12-13T115736.965203Z"></a>
2010-12-13T11:57:36.965203Z Ken Sharp</strong></p>
<blockquote>
<pre>
pdfwrite enhancement : DSC output

Add some more comments, and re-arrange a few to make better sense. Initial tests
indicate the output of the code with ProduceDSC does not introduce any new errors.

Still to do: See if we can re-order the output so that we can write the %%Pages: comment
in the header with the correct number of pages. This requires us to defer writing the 
header and ProceSet until the end of the job.

No differences expected.
</pre>
<p>[base/gdevpdfg.h base/gdevpdf.c base/gdevpdfe.c base/gdevpdfu.c]</p>
</blockquote>

<p><strong><a name="2010-12-12T161859.870768Z"></a>
2010-12-12T16:18:59.870768Z Alex Cherepanov</strong></p>
<blockquote>
<pre>
Make const_90_degrees an external variable to stop smart optimizers from
converting angle/const_90_degrees to angle*(1/const_90_degrees). Bug 689794.
</pre>
<p>[base/gsmisc.c]</p>
</blockquote>

<p><strong><a name="2010-12-11T230225.039826Z"></a>
2010-12-11T23:02:25.039826Z Alex Cherepanov</strong></p>
<blockquote>
<pre>
Don't break ANSI aliasing rules. Use memcpy() to assign Ghostscript classes
i.e. structures of different type. Fix SEGV on GCC 4.5.1, release build.
Thanks to ubitux@gmail.com for analysis of the problem. Bug 691831.
</pre>
<p>[base/gximag3x.c]</p>
</blockquote>

<p><strong><a name="2010-12-10T195053.800825Z"></a>
2010-12-10T19:50:53.800825Z Michael Vrhel</strong></p>
<blockquote>
<pre>
Removal of Smask_is_CIE flag in the code as well as removal of code that is no longer used in the soft mask rendering.</pre>
<p>[base/gdevp14.c base/gdevp14.h base/gstrans.c base/gstparam.h base/gxblend.c base/gstrans.h base/gxblend.h]</p>
</blockquote>

<p><strong><a name="2010-12-10T132611.089772Z"></a>
2010-12-10T13:26:11.089772Z Ken Sharp</strong></p>
<blockquote>
<pre>
pdfwrite enhancement : More work towards DSC compliance

This is a resubmission of revision 11941, with some additional changes so that it
doesn't crash with pdfwrite on Linux systems. 

We now pass around the 'type' of an object much more when writing. This is so that
we can emit &quot;%%BeginResource/%%EndResource&quot; comment pairs around the resources we write.
It is also required so that we *don't* write these comments around pages.

The code now emits %%BeginProlog, then writes the opdfread.ps procedure. It then writes
all the various resources used in the document, each with a reasonable DSC comment. Then
it writes %%EndProlog. After this come the page descriptions, each is written with a
%%Page: comment and a %%PageTrailer. Finally we write the %%Trailer, %%Pages
comment (NB we write %%Pages: (atend) in the header comments as we don't know how many
pages there will be until the end) and %%EOF.

The resources are mostly defined as being of type 'file', as most of them are not normal
PostScript resources. The DSC specification says under the %%BeginResource definition 
(file note on p72) &quot;The enclosed segment is a fragment of PostScript language code or
some other item that does not fall within the other resource categories&quot; and so this
seems the best type to use for our purposes.

The output is now minimally DSC compliant, though there are a few other comments I'd
like to add if possible. Given the way the file is created we are always going to have a
large prolog, and that will need to be copied to all the pages if they are split
individually, in order to make sure that all the required resources are present.

Technically we could follow the resource chain and write %%IncludeResource comments,
at the page level at least, but this is probably more effort than it is realistically
worth.

Still need to add some more DSC comment types, and run some extensive testing.

No differences expected currently. Minimal testing with GSView suggests that the output
so far is DSC-compliant as-is.
</pre>
<p>[base/gdevpdfk.c base/gdevpdfm.c base/gdevpdfx.h base/gdevpdfo.c base/gdevpdf.c base/gdevpdfb.c base/gdevpdtd.c base/gdevpdfc.c base/gdevpdfo.h base/gdevpdfe.c base/gdevpdfu.c base/gdevpdtw.c base/gdevpdfg.c base/gdevpdti.c]</p>
</blockquote>

<p><strong><a name="2010-12-10T030640.558274Z"></a>
2010-12-10T03:06:40.558274Z Michael Vrhel</strong></p>
<blockquote>
<pre>
Apply proper alpha blending to compute luminosity of mask per the PDF specification.  Fixes bug 691822</pre>
<p>[base/gdevp14.c]</p>
</blockquote>

<p><strong><a name="2010-12-09T165055.001506Z"></a>
2010-12-09T16:50:55.001506Z Ken Sharp</strong></p>
<blockquote>
<pre>
undo revision 11941 and 11942 as this causes seg faults on Linux.
</pre>
<p>[base/gdevpdfk.c base/gdevpdfm.c base/gdevpdfx.h base/gdevpdfo.c base/gdevpdf.c base/gdevpdfb.c base/gdevpdtd.c base/gdevpdfc.c base/gdevpdfo.h base/gdevpdfe.c base/gdevpdfu.c base/gdevpdtw.c base/gdevpdfg.c base/gdevpdti.c]</p>
</blockquote>

<p><strong><a name="2010-12-09T153910.142451Z"></a>
2010-12-09T15:39:10.142451Z Chris Liddell</strong></p>
<blockquote>
<pre>
A change to how we get the advance width of the glyph from Freetype.

Previously, we used the data in the glyph metrics structure, which
are scaled, and the undid the scaling. This is correct method for
everything except the horizontal and vertical advance distances.

We now get the two advance distances from the glyph structure,
and tell Freetype not to scale them, this avoids the rounding
errors that occur due to Freetype's fixed point number
format. It also saves the (less significant) error when we
previously unscaled the value, and saves a couple of
fairly large double precision calculations.

This does cause a number of changes in the regression suite,
the vast majority are pixel or so differences in glyph
positions. A very few are improvements.

Bugs 691778 and 691777

</pre>
<p>[psi/fapi_ft.c]</p>
</blockquote>

<p><strong><a name="2010-12-09T143526.421173Z"></a>
2010-12-09T14:35:26.421173Z Ken Sharp</strong></p>
<blockquote>
<pre>
fix pdfwrite

Revision 11941 had a typo in gdevpdf.c which spelled %%EndProlog with too many %
characters.
</pre>
<p>[base/gdevpdf.c]</p>
</blockquote>

<p><strong><a name="2010-12-09T142046.589285Z"></a>
2010-12-09T14:20:46.589285Z Ken Sharp</strong></p>
<blockquote>
<pre>
pdfwrite enhancement : More work towards DSC compliance

We now pass around the 'type' of an object much more when writing. This is so that
we can emit &quot;%%BeginResource/%%EndResource&quot; comment pairs around the resources we write.
It is also required so that we *don't* write these comments around pages.

The code now emits %%BeginProlog, then writes the opdfread.ps procedure. It then writes
all the various resources used in the document, each with a reasonable DSC comment. Then
it writes %%EndProlog. After this come the page descriptions, each is written with a
%%Page: comment and a %%PageTrailer. Finally we write the %%Trailer, %%Pages
comment (NB we write %%Pages: (atend) in the header comments as we don't know how many
pages there will be until the end) and %%EOF.

The resources are mostly defined as being of type 'file', as most of them are not normal
PostScript resources. The DSC specification says under the %%BeginResource definition 
(file note on p72) &quot;The enclosed segment is a fragment of PostScript language code or
some other item that does not fall within the other resource categories&quot; and so this
seems the best type to use for our purposes.

The output is now minimally DSC compliant, though there are a few other comments I'd
lie to add if possible. Given the way the file is created we are always going to have a
large prolog, and that will need to be copied to all the pages if they are split
individually, in order to make sure that all the required resources are present.

Technically we could follow the resource chain and write %%IncludeResource comments,
at the page level at least, but this is probably more effort than it is realistically
worth.

Still need to add some more comments, and run some extensive testing.

No differences expected currently. Minimal testing with GSView suggests that the output
so far is DSC-compliant as-is.

</pre>
<p>[base/gdevpdfk.c base/gdevpdfm.c base/gdevpdfx.h base/gdevpdfo.c base/gdevpdf.c base/gdevpdfb.c base/gdevpdtd.c base/gdevpdfc.c base/gdevpdfo.h base/gdevpdfe.c base/gdevpdfu.c base/gdevpdtw.c base/gdevpdfg.c base/gdevpdti.c]</p>
</blockquote>

<p><strong><a name="2010-12-07T141420.090005Z"></a>
2010-12-07T14:14:20.090005Z Ken Sharp</strong></p>
<blockquote>
<pre>
pdfwrite enhancement : more work towards DSC compliant ps2write output

This should now output pages in the correct order, with %%Page:/%%PageTrailer comments.
Still need to address Resource comments and definitions.

Committed so that a user can try out the code. No differences expected.
</pre>
<p>[base/gdevpdf.c base/gdevpdfu.c]</p>
</blockquote>

<p><strong><a name="2010-12-06T203042.463413Z"></a>
2010-12-06T20:30:42.463413Z Michael Vrhel</strong></p>
<blockquote>
<pre>
Fix for bug 691466.  Problem was caused by the DeviceN alternate color space being Lab and the color values not being properly decoded to enable use of the lab ICC profile.  A few progressions in the cluster data base with this commit.</pre>
<p>[base/gscdevn.c base/gdevp14.c base/gsicc.c]</p>
</blockquote>

<p><strong><a name="2010-12-06T163946.324844Z"></a>
2010-12-06T16:39:46.324844Z Alex Cherepanov</strong></p>
<blockquote>
<pre>
Bring JPX Luratech decoder up to the level of Jasper decoder.
1. Don't expand indexed colors when the PDF expects an indexed color space.
   Fix rendering of the sample file attached to the bug.
2. Recognize indexed CMYK color space and accept the palettes that are shorter
   than 256 colors. Fix comparefiles/Bug689362.pdf
3. Fix memory corruption that happened with 4-bit-per-pixel grayscale image
   and pack the nibbles by PS rules. Fix comparefiles/Bug690174.pdf

Luratech now renders every file in our test suite correctly. We don't have
tests for low values of bits per plane. Bug 691816, customer 532.
</pre>
<p>[base/sjpx_luratech.c base/sjpx_luratech.h]</p>
</blockquote>

<p><strong><a name="2010-12-06T160730.222320Z"></a>
2010-12-06T16:07:30.222320Z regression</strong></p>
<blockquote>
<pre>
Limit clusterpush.pl bmpcmp jobs to 10 megs of changes per file in addition to the 100 changes per file limit.
</pre>
<p>[toolbin/localcluster/checkSize.pl toolbin/localcluster/clustermonitor.pl toolbin/localcluster/clustermaster.pl toolbin/localcluster/build.pl toolbin/localcluster/run.pl]</p>
</blockquote>

<p><strong><a name="2010-12-04T211237.349224Z"></a>
2010-12-04T21:12:37.349224Z Michael Vrhel</strong></p>
<blockquote>
<pre>
Fix for bug 691724.  The issue was due to a bug in the code that creates equivalent ICC profiles from CIEABC types.  This has a pile of progressions in the cluster data base.  I stepped through them with bmpcmp and they appeared to be correct to me.  I also altered the DefaultRGB PS color space to by in-sync with the D50 ICC sRGB based default that we are currently using.   </pre>
<p>[base/gsicc_create.c Resource/ColorSpace/DefaultRGB]</p>
</blockquote>

<p><strong><a name="2010-12-04T120200.835522Z"></a>
2010-12-04T12:02:00.835522Z Ken Sharp</strong></p>
<blockquote>
<pre>
Remove some extraneous debugging code and variables left in accidentally with the commit
for revision 11932.
</pre>
<p>[base/gxfcopy.c]</p>
</blockquote>

<p><strong><a name="2010-12-04T115313.468703Z"></a>
2010-12-04T11:53:13.468703Z Ken Sharp</strong></p>
<blockquote>
<pre>
Fix (pdfwrite) : Hashing /Subrs didn't check all subrs.

Bug #691815 &quot;ps2pdf fails on attached ps file&quot;

The new code for hashing /Subrs, to improve font checking performance, stopped comparing
/Subrs between two fonts as soon as either font had an error getting a specific /Subr. 

However it transpires that some fonts can have a null object for a /Subr (used to skip
Subrs that do nothing), and this returns a typecheck error. This led to two fonts which
differed only in the fact that one has (and uses) more Subrs than the other being 
perceived as identical. This could lead to pdfwrite using the wrong font when 
converting type 1 into CFF fonts and cause errors.

The code now continues checking remainign /Subrs if a typecheck error occurs, and as an
additional measure also checks the number of /Subrs in each font before deciding if
they are compatible.

</pre>
<p>[base/gxfont1.h base/gxfcopy.c]</p>
</blockquote>

<p><strong><a name="2010-12-03T092028.129989Z"></a>
2010-12-03T09:20:28.129989Z Ken Sharp</strong></p>
<blockquote>
<pre>
Fix (pdfwrite) : Work around Acrobat bug with /Encoding

Bug #691809 &quot;Regression: some PDF files produced by GhostPCL r11913 cannot be read by
Acrobat 8.2.5&quot;

Acrobat 4 &amp; 8 have a peculiar bug, if a type 3 font (may affect other font types, but
it seems unlikely) has a WinAnsiEncoding, and no /Differences, then text set in that
font is not displayed by these versions of Acrobat. This may be limited to glyphs
which consist of a bitmap only.

Forcing the emission of a /Differences array for each glyph used results in these
versions of Acrobat displaying correctly (even though the 'differences' are in fact the
standard Encodings).

This does seem to be quite definitely an Acrobat bug which we are working around, no
other PDF consumer seems to have a problem with these files.

</pre>
<p>[base/gdevpdti.c]</p>
</blockquote>

<p><strong><a name="2010-12-02T181653.794801Z"></a>
2010-12-02T18:16:53.794801Z Michael Vrhel</strong></p>
<blockquote>
<pre>
Remove unused variable.</pre>
<p>[base/gxblend.c]</p>
</blockquote>

<p><strong><a name="2010-12-02T170945.886919Z"></a>
2010-12-02T17:09:45.886919Z Michael Vrhel</strong></p>
<blockquote>
<pre>
Fix for bug 691803.  This provides a fix for cases where we have soft masks embedded within other soft masks.  Such rare cases are detected and when they occur and the soft mask type is luminosity, the alpha channel of the soft mask buffer is pre-blended with the luminosity data to give the proper mask values.  There appears to a be change in fts_33xx.xps from this commit.  However, it appears to me that this file was not being rendered properly, compared to the windows xps viewer, prior to the commit either.  I will file a bug related to this issue.</pre>
<p>[base/gdevp14.c base/gdevp14.h base/gxblend.c base/gxblend.h]</p>
</blockquote>

<p><strong><a name="2010-12-02T095828.497029Z"></a>
2010-12-02T09:58:28.497029Z Ken Sharp</strong></p>
<blockquote>
<pre>
minor bug, warning message point to incorrect source directory.

Bug #691811 &quot;incorrect error message&quot;

Simply alter the source path in a warning.

No differences expected.
</pre>
<p>[psi/imain.c]</p>
</blockquote>

<p><strong><a name="2010-12-01T164120.443841Z"></a>
2010-12-01T16:41:20.443841Z Michael Vrhel</strong></p>
<blockquote>
<pre>
Additional debug code to help in soft mask problems.</pre>
<p>[base/gdevp14.c]</p>
</blockquote>

<p><strong><a name="2010-12-01T051655.267986Z"></a>
2010-12-01T05:16:55.267986Z Michael Vrhel</strong></p>
<blockquote>
<pre>
Fix so that the blend compositor actions are only removed from the clist compositor queue if they are completely over-ridden by a subsequent compositor action.  Previously no check was made to see that the same settings were being up-dated by the new action. 

This fixes two P1 customer bugs and has several progressions in the test suite but one file Bug691783.pdf has both regressions and progressions.  I will get the page 18 regressions into a bug.</pre>
<p>[base/gdevp14.c base/gxclimag.c base/gxcldev.h]</p>
</blockquote>

<p><strong><a name="2010-11-29T211232.441057Z"></a>
2010-11-29T21:12:32.441057Z regression</strong></p>
<blockquote>
<pre>
Additonal improvement in the cluster's ability to be able to recover from machines going down late in the run.  Machines are put into a standby state when there are no jobs left to send and they have processed all of their jobs until all machines are in the standby state, then all the machines are released from standby and can upload their logs
</pre>
<p>[toolbin/localcluster/clustermaster.pl toolbin/localcluster/run.pl]</p>
</blockquote>

<p><strong><a name="2010-11-29T185503.883221Z"></a>
2010-11-29T18:55:03.883221Z Michael Vrhel</strong></p>
<blockquote>
<pre>
Fix for issues with the default ICC directory.  The PS interpreter now checks if the default name is OK before setting to LIBPATH/iccprofiles .  Also, the current name is first tested before we prepend with the directory name, to avoid doing double applications of the profile directory.  Thanks to Ray for the fixes in gs_lev2.ps</pre>
<p>[base/gsicc_manage.c Resource/Init/gs_lev2.ps]</p>
</blockquote>

<p><strong><a name="2010-11-29T183038.060525Z"></a>
2010-11-29T18:30:38.060525Z Michael Vrhel</strong></p>
<blockquote>
<pre>
Fix for bug 691748.  The idle optimizations for the softmask are not really valid since we have since created the proper bounding box for the soft mask in a previous commit.  In the cluster push testing, some files came back as having problems with the psdcmyk device.  Checking, it appears that these issues are not related to this fix but are another bug.  I am working on this now and will submit a bug.</pre>
<p>[base/gdevp14.c]</p>
</blockquote>

<p><strong><a name="2010-11-29T144517.958276Z"></a>
2010-11-29T14:45:17.958276Z Chris Liddell</strong></p>
<blockquote>
<pre>
Due to &quot;lazy evaluation&quot; of softmask groups, the graphics state can change between
the creation of the softmask group form, and when it is executed.

We'll now save the gstate and (most of) the ExtGState when the softmask group is
defined, and then set both before evaluting the object. A few ExtGState entries
are not easily set directly, so those are missing.

This partially fixes Bug 691157, and fixes Bugs 690351, 691348 and 690535. It
also resolves the remaining issue with 690535.

Cluster differences as follows:
Bug690535.pdf (noted above)
Bug690022.pdf, Bug690115.pdf, Bug690208.pdf, fts_26_2601.pdf and
fts_26_2603.pdf are all improved when compared to Acrobat.

A few xps-&gt;pdf conversions thru pdfwrite render differently, but they were
wrong before, and slightly differently wrong now. I believe the PDFs are
&quot;incorrect&quot;.


</pre>
<p>[Resource/Init/pdf_draw.ps]</p>
</blockquote>

<p><strong><a name="2010-11-29T143525.792013Z"></a>
2010-11-29T14:35:25.792013Z Ken Sharp</strong></p>
<blockquote>
<pre>
Fix (pdfwrite) : Type 3 font capture and charpath operations

Bug #691033 &quot;Regression: 14-01.PS fails with pdfwrite&quot;

The first time a type 3 glyphis  encountered we start a charproc accumulatiopn and
exit to run the BuildChar/BuildGlyph. On return to the text processing, if the 
operation was a charpath, this would take precedence over closing the accumulator which
would lead to significant later problems.

Modified the code path to allow for the charproc accumulation to finish and if this is 
a charpath operation to rerun the operation using the newly captured glyph program.

Note this can only occur if the first operation on a given glyph in a type 3 font is 
for a charpath.

</pre>
<p>[base/gdevpdtt.c]</p>
</blockquote>

<p><strong><a name="2010-11-27T182343.131547Z"></a>
2010-11-27T18:23:43.131547Z Ken Sharp</strong></p>
<blockquote>
<pre>
Fix (pdfwrite) : pointers not marked for garbage collection

Bug #691779 &quot;SegFault with pdfwrite and more than one cid font&quot;

pdfwrite does lazy creation of Identity ToUnicode CMaps for inclusion in output PDF
files (2 CMaps, one for horizontal and one for vertical writing). These pointers were
not marked for the garabge collector, but were stored directly in the pdf device
structure.

The CMaps were assigned to a pdfont resource type, where the pointer to the CMap *was*
marked for the garbage collector. This meant that if the pdfont resource was moved as
a result of garbage collection, the CMap could be moved as well. This left a dangling
pointer in the device structure. 

If another font resource required an identity CMap then the now garbage pointer from
the device structure would be assigned. If the new font resource was moved as a result
of garbage collection, then the attempt to relocate the CMap would fail and cause a
crash.

Fixed by marking the pointers in the device structure for the garbage collector.

No differences expected.
</pre>
<p>[base/gdevpdfx.h]</p>
</blockquote>

<p><strong><a name="2010-11-26T105951.673656Z"></a>
2010-11-26T10:59:51.673656Z Chris Liddell</strong></p>
<blockquote>
<pre>
Update the FAPI/UFST interface to correctly scale the points when retrieving an outline.
Since FAPI now expects points in 32.32 fixed point form.
</pre>
<p>[psi/fapiufst.c]</p>
</blockquote>

<p><strong><a name="2010-11-25T210322.187304Z"></a>
2010-11-25T21:03:22.187304Z Robin Watts</strong></p>
<blockquote>
<pre>
Fix for bug 691785.

The bitmap mask clip device has a long standing bug when attempting to clip
a bitmap through a 1bpp bitmap (gxclipm.c, clip_runs_enumerate, line 283ish).

The code detects runs of 'on' pixels in the mask. It then keeps the last run
it found in a 1 place buffer (called 'previous'). This therefore represents
the previous run found. Whenever we find a new run, we check to see if we can
add it to the previous run to try to form a larger (vertical) rectangle. If
we can't, we should write the previous rectangle out and remember the current
one.

Unfortunately the code was writing the current rectangle out, rather than the
previous one. This has the effect of losing the first run on most lines out.

130 differences shown in cluster testing; confirmed in bmpcmp as
progressions.

</pre>
<p>[base/gxclipm.c]</p>
</blockquote>

<p><strong><a name="2010-11-25T091213.562173Z"></a>
2010-11-25T09:12:13.562173Z Ken Sharp</strong></p>
<blockquote>
<pre>
Remove a now-unused variable to silence a compiler warning.

No differences expected.</pre>
<p>[base/gdevpdfb.c]</p>
</blockquote>

<p><strong><a name="2010-11-24T221834.999818Z"></a>
2010-11-24T22:18:34.999818Z Michael Vrhel</strong></p>
<blockquote>
<pre>
Style clean up of gdevp14.c for white space, comments, long lines and dead code.</pre>
<p>[base/gdevp14.c]</p>
</blockquote>

<p><strong><a name="2010-11-24T174439.808162Z"></a>
2010-11-24T17:44:39.808162Z Michael Vrhel</strong></p>
<blockquote>
<pre>
Fix so that we handle the \B command properly when we have transparency.  The stroke should be drawn in a knock-out fashion rather than blended with the fill.  This was achieved by adding in the push of a knockout transparency group for the stroke operation.  The opacity for that group had to be 1 rather than what ever the current graphic state was (otherwise you end up with the opacity applied twice).  That change revealed an issue in the clist when a transparency group is pushed where the opacity for the pdf14 clist device was being altered without having the information passed into the clist.  Fixing that required a few changes to make sure that the blend parameter changes for the transparency group end up written in the same bands as the group push rather than all bands like the normal blend parameter change compositor action does.  A few changes were needed in the clist compositor writing code to make sure that this special blend parameter change did not push a new cropping item on the cropping stack.  This commit results in a lot of progressions.  However, the cluster push revealed a couple files fts_06_0608.pdf.pdf.ppmraw for example, which may have an issue.  These are being checked and if found to be an issue a new bug report will be filed.</pre>
<p>[Resource/Init/pdf_ops.ps base/gdevp14.c base/gxclimag.c base/gxblend.c base/gstrans.h base/gxblend.h]</p>
</blockquote>

<p><strong><a name="2010-11-24T162125.266704Z"></a>
2010-11-24T16:21:25.266704Z Ken Sharp</strong></p>
<blockquote>
<pre>
pdfwrite enhancement : attempt to make PCL bitmap fonts into searchable type 3

In general pdfwrite only resorts to making a bitmap from a font when it cannot handle
the original font type, which is rare for PostScript, PDF and XPS. However all PCL
bitmap fonts are handled this way.

When this happens, the bitmap is stored into a general type 3 font, a 'bucket' where all
such glyphs are stored. When this font is full, a new one is started and so on. The text
stored in the PDF page stream references the correct type 3 font, but usually the
character code will be unrelated to the original character code.

For PCL bitmap fonts pdfwrite actually starts by creating a type 3 font to hold the 
PCL bitmaps, but doesn't use it. This patch tries to store the bitmaps in the type
3 font where possible, using the character code from the original PCL document. 
Although this will not create searchable text in the general case, it does seem that
there are a good number of PCL documents which do use an ASCII encoding and so will
produce a searchable PDF file.

There are several caveats:

1) This only works at all with cached glyphs. Glyphs which are too big to fit in the
cache are instead rendered as images, not text at all. The cache has a compiled limit
of 2500 for the height of the bitmap, but this needs to take the resolution which is
being used for rendering into account. The default resolution for pdfwrite is 720 dpi
which means that bitmaps larger than ~125 rows will not be cached. (see below for more)

2) Certain kinds of text operations can't be handled at all; any case where a character
code does, or may, exceed 256 cannot be handled. These cases are handled as before by
placing in a special font with a unique character code and called from there.

3) If the font matrix is not the identity we cannot handle the glyphs, as the bitmaps
stored in the cache already include any transformations present in the Fontmatrix and
we can't undo those transformations to the bitmap. In practice this means that if the
canvas orientation (not the media) is not portrait, then this will cause the text to
be non-searchable.

4) The Acrobat searching algorithm does not work very well with this kind of text. In
our case each glyph is individually positioned on the page rather than being written
as a continuous stream of characters. Acrobat seems unable to find more than about
three glyphs in succession this way.


There is no further scope for improvement in pdfwrite as far as I can see. The only 
way to handle this better would be to make changes in the PCL interpreter so that the
bitmap PCL font is created as an actual font (probably a TrueType). This would mean that
the text would be stored in the PDF file as real text, the FontMatrix would not be a
problem, caching would not be an issue. This is probably a large project, but I suspect
less of a pain than this enhancement was.

Caching
========
In gsfont.c is a #define:
#define blimit_LARGE 2500	/* blimit/upper - max size of a single cached char */

Increasing this will allow larger glyphe to be cached. There is another limit in 
gxchar.c:
static const uint MAX_TEMP_BITMAP_BITS = 80000;

This should not be altered. Care should be exercised if increasing the maximum size 
of cached characters as these are emitted in the PDF file as inline images in a type
3 font. The PDF spec recommends that inline images should not exceed 4Kb and some 
consumers may not be able to cope with images which exceed this limit.

</pre>
<p>[base/gdevpdfb.c base/gdevpdti.c]</p>
</blockquote>

<p><strong><a name="2010-11-23T160144.675647Z"></a>
2010-11-23T16:01:44.675647Z Ray Johnston</strong></p>
<blockquote>
<pre>
Fix chunk_free_all_remaining typo so that mulitple object chunk list gets
traversed and freed first, then the single object chunk list. Thanks to
Norbert Janssen for spotting this. Bug 691791.
</pre>
<p>[base/gsmchunk.c]</p>
</blockquote>

<p><strong><a name="2010-11-23T153628.976110Z"></a>
2010-11-23T15:36:28.976110Z Robin Watts</strong></p>
<blockquote>
<pre>
Fix for Bug 691783. A tiny tweak to that submitted by Sebastian Rasmussen.
Many thanks!

When closing down render threads we check to see if the underlying
allocator had to be wrapped to make it thread safe. If it was, we free the
wrapped version too. Unfortunately the test to see &quot;did we have to wrap it&quot;
was accessing memory we'd just freed.

The fix is to move the code that finds the underlying allocator to before
we free the memory.

Cluster testing shows no differences.

</pre>
<p>[base/gxclthrd.c]</p>
</blockquote>

<p><strong><a name="2010-11-23T123356.433376Z"></a>
2010-11-23T12:33:56.433376Z Robin Watts</strong></p>
<blockquote>
<pre>
In an effort to understand the shading code I put together a 'map' of the
function calls as comments. This has been hanging around my harddisc for ages
and I'm now committing it to avoid it being lost.

Comment change only - no cluster changes expected.

</pre>
<p>[base/gxshade1.c]</p>
</blockquote>

<p><strong><a name="2010-11-23T084610.878077Z"></a>
2010-11-23T08:46:10.878077Z Ken Sharp</strong></p>
<blockquote>
<pre>
Revert revision 11901.

Because of the way that PCL draws bitmap fonts directly to the cache there is no 
possibility of making uncached glyphs work properly. Also the code for cached glyphs is
much too forgiving and attempts to add glyphs which cannot be handled. Finally there is 
no provision for type 3 fonts with non-identity matrices. Because the bitmaps in the
cache already have the scaling/rotation/shearing and clipping applied, we cannot have
a type 3 font with a non-identity matrix.

The code will be revised and recommitted.
</pre>
<p>[base/gdevpdti.h base/gdevpdfx.h base/gdevpdfb.c base/gdevpdt.h base/gdevpdti.c base/gdevpdfi.c]</p>
</blockquote>

<p><strong><a name="2010-11-20T225509.754787Z"></a>
2010-11-20T22:55:09.754787Z regression</strong></p>
<blockquote>
<pre>
Improved the cluster code's ability to be able to recover from machines going down late in the run.
</pre>
<p>[toolbin/localcluster/clustermaster.pl toolbin/localcluster/run.pl]</p>
</blockquote>

<p><strong><a name="2010-11-18T192131.928351Z"></a>
2010-11-18T19:21:31.928351Z Chris Liddell</strong></p>
<blockquote>
<pre>
Ensure we set SHARE_FT correctly when we end up using the system installed
freetype library.

Bug 691776.

No cluster differences expected.

</pre>
<p>[base/configure.ac]</p>
</blockquote>

<p><strong><a name="2010-11-18T005220.670104Z"></a>
2010-11-18T00:52:20.670104Z regression</strong></p>
<blockquote>
<pre>
Two changes to the local cluster system:

1.  A warnings check is now performed on the code under test (both commit
and user tests).

2.  In order to better recover from nodes going offline near the end
of a cluster run nodes are paused after all their jobs have been sent.
This way the jobs from an unresponsive node that isn't detected until
all jobs have been distributed can be reassigned.

Also some minor cleanup (dividing the clustermaster log into .log and
.dbg files, supressing some uneeded debugging messages, etc.)

</pre>
<p>[toolbin/localcluster/clustermaster.pl toolbin/localcluster/readlog.pl toolbin/localcluster/pngs2html.pl toolbin/localcluster/build.pl toolbin/localcluster/run.pl toolbin/localcluster/cachearchive.pl toolbin/localcluster/compare.pl]</p>
</blockquote>

<p><strong><a name="2010-11-16T224926.969992Z"></a>
2010-11-16T22:49:26.969992Z Ray Johnston</strong></p>
<blockquote>
<pre>
Fix for PCL that uses the chunk allocator (which is not inherently thread safe)
when NumRenderingThreads &gt; 1. Adds 'is_thread_safe' to the gs_memory_status so
that clist_setup_render_threads can wrap an unsafe allocator in a locking wrapper.

Also restore the optimizations to the chunk memory allocator to keep two lists
(one for multiple object chunks and another for single object chunks) and fixes
the chunk_free_object so that the correct list is chosen. Even if not found on
the selected list, the other list will be scanned and a diagnostic printed if
the wrong chunk list was selected (belt and suspenders). My testing with the
lj*.prn files did not show this problem.
</pre>
<p>[base/lib.mak base/gsmemlok.c base/gsmchunk.c base/gxclthrd.c base/gsmalloc.c base/gsmemret.c base/gsalloc.c base/gsmemory.h base/gsmemraw.h]</p>
</blockquote>

<p><strong><a name="2010-11-16T144831.620067Z"></a>
2010-11-16T14:48:31.620067Z Michael Vrhel</strong></p>
<blockquote>
<pre>
Fix so that the initial gray color spaces in the graphic state are properly color managed. Previously, if we immediately started drawing in the document with a gray color space, the initial un-managed color space in the graphic state was used and this was not associated with the specified gray source profile.  With this fix we initialize the stroking and filling color spaces to be ICC color spaces associated with the profile for default_gray in the icc manager.  Also a fix for an issue in littleCMS.  When merging profiles, littleCMS will often do an optimization where it approximates 1-D LUTs with an exponent operation for use during merging and interpolation of the profile structures.  If the curve is very steep, as in like a step function, it should not do this approximation.  This was an issue when we had profiles that provided thresholding operations with their 1-D LUTs.   I spoke with Marti about this issue a couple weeks ago.  This commit will create over 6000 differences in the regression test.   I reviewed many of these and they all are minor differences in gray colors as expected.  These are differences where we were drawing unmanaged colors.</pre>
<p>[base/gsicc_manage.c psi/zusparam.c base/gsicc_manage.h lcms/src/cmsgmt.c]</p>
</blockquote>

<p><strong><a name="2010-11-16T143357.040738Z"></a>
2010-11-16T14:33:57.040738Z Ken Sharp</strong></p>
<blockquote>
<pre>
pdfwrite enhancement : attempt to make PCL bitmap fonts into searchable type 3

In general pdfwrite only resorts to making a bitmap from a font when it cannot handle
the original font type, which is rare for PostScript, PDF and XPS. However all PCL
bitmap fonts are handled this way.

When this happens, the bitmap is stored into a general type 3 font, a 'bucket' where all
such glyphs are stored. When this font is full, a new one is started and so on. The text
stored in the PDF page stream references the correct type 3 font, but usually the
character code will be unrelated to the original character code.

For PCL bitmap fonts pdfwrite actually starts by creating a type 3 font to hold the 
PCL bitmaps, but doesn't use it. This patch tries to store the bitmaps in the type
3 font where possible, using the character code from the original PCL document. 
Although this will not create searchable text in the general case, it does seem that
there are a good number of PCL documents which do use an ASCII encoding and so will
produce a searchable PDF file.

There are 3 parts to this enhancement:

1) Cached glyphs. When the current font is a type 3 font, and the text operation is
one which might result in an ASCII character code, and we can manufacture a glyph name
for the resulting character code, store the glyph in the type 3 font (rather than the
general 'bucket' font), using the character code and glyph name. Glyphs which can't
be handled this way for any reason are still stored in the general recipient 'bucket'
font.

2) Uncached glyphs. Glyphs which are too large for the cache are rendered as images. The
image handling code has been extensively reworked to try and detect this situation and,
if the criteria for cached glyphs above also holds true, to store the image as a glyph
in a type 3 font and draw text in the PDF content stream instead of an image. Images
which do not fulfil these criteria are still handled as images.

3) Recached glyphs. If the glyph cache fills up, glyphs will be flushed to make space.
If a glyph is then reused we go through the caching case again (for large glyphs which 
are uncached we end up repeating the code every time the glyph is used). We now attempt
to spot this by determining that the glyph in the font has already been used, and rather
than storing a new copy of the glyph, as the old code did, we simply emit text into
the page content stream.

Note that there is a recommendation that inline images in PDF should not exceed 4KB. 
Since CharProcs must use inline images, bitmaps which exceed this size will be rendered
as images, not text (they will also exceed the cache size and so are always rendered
uncached).

</pre>
<p>[base/gdevpdti.h base/gdevpdfx.h base/gdevpdfb.c base/gdevpdt.h base/gdevpdti.c base/gdevpdfi.c]</p>
</blockquote>

<p><strong><a name="2010-11-16T135836.196330Z"></a>
2010-11-16T13:58:36.196330Z Alex Cherepanov</strong></p>
<blockquote>
<pre>
Prefer character codes &lt; 256 during construction of /CharStrings and
/Encoding attributes of a symbolic Type 42 font. Bug 691753.
</pre>
<p>[Resource/Init/gs_ttf.ps]</p>
</blockquote>

<p><strong><a name="2010-11-15T183050.012584Z"></a>
2010-11-15T18:30:50.012584Z Henry Stiles</strong></p>
<blockquote>
<pre>
reverts 11877 which needs a bit more work</pre>
<p>[base/gsmchunk.c]</p>
</blockquote>

<p><strong><a name="2010-11-15T091150.168011Z"></a>
2010-11-15T09:11:50.168011Z Chris Liddell</strong></p>
<blockquote>
<pre>
Fix a memory leak when interpolating image data. We were allocating a colour
management buffer for every interpolated scan line from the currently
buffered image data, but only releasing the last one.

We'll now allocate the buffer (and initialise the buffer desc structure)
only once, and free the buffer once when we're done.

No cluster differences expected.

Bug 691772

(NOTE: the test file for this still appears to go into an infinite loop
during interpolation).

</pre>
<p>[base/gxiscale.c]</p>
</blockquote>

<p><strong><a name="2010-11-14T211615.954493Z"></a>
2010-11-14T21:16:15.954493Z Michael Vrhel</strong></p>
<blockquote>
<pre>
Make a macro for the default ICC profile name and set it in the proper locations.</pre>
<p>[base/gsicc_manage.c psi/zusparam.c base/gsicc_manage.h]</p>
</blockquote>

<p><strong><a name="2010-11-06T153618.568592Z"></a>
2010-11-06T15:36:18.568592Z Michael Vrhel</strong></p>
<blockquote>
<pre>
Fix for a string handling bug that occurred when the device ICC profile name was smaller than the default device profile name.  Also, additional code to ensure that the ICC path and the device profile name are properly combined when needed.  Finally, if the device profile name is given as an absolute name the icc directory is not added to it.</pre>
<p>[base/lib.mak base/gsdparam.c base/gsicc_manage.c]</p>
</blockquote>

<p><strong><a name="2010-11-05T221205.617541Z"></a>
2010-11-05T22:12:05.617541Z Michael Vrhel</strong></p>
<blockquote>
<pre>
Fix so that when compositing with tags, the tos tag data has no effect on the nos tag data if the pixel alpha value is 0.  Fixes Bug 691752.</pre>
<p>[base/gxblend1.c]</p>
</blockquote>

<p><strong><a name="2010-11-05T155335.817121Z"></a>
2010-11-05T15:53:35.817121Z Chris Liddell</strong></p>
<blockquote>
<pre>
In the event that we've decided not to cache a glyph generated by FAPI, we
need to make sure that zsetcachedevice2() doesn't opt to try to cache said
glyph. To do that we were setting in_cachedevice to CACHE_DEVICE_NOT_CACHING
before calling zchar_set_cache(), and setting it back to its previous value
on return. Unfortunately, a font with a CDevProc causes the call to
zsetcachedevice2() to be delayed until after execution of the CDevProc, so
in_cachedevice was (probably) no longer set to CACHE_DEVICE_NOT_CACHING.

Amongst other effects, this caused some anti-aliased glyphs to be render
with incorrect, scaling as well as the potential for marking glyphs to have
empty (but valid) cached bitmaps.

Expected cluster differences: fts_23_2306.pdf at 72dpi shows some (benign)
pixel differences on the pattern filled glyphs - this is actually a behaviour
progression, as it is caused by cache being properly bypassed for an uncached
glyph, rather than the glyph being rendered uncached but the cache receiving
an emtpy glyph.

Bug 691750.

</pre>
<p>[psi/zfapi.c]</p>
</blockquote>

<p><strong><a name="2010-11-04T191308.201769Z"></a>
2010-11-04T19:13:08.201769Z Michael Vrhel</strong></p>
<blockquote>
<pre>
Increase in curve size to enable sharper cut offs (i.e. no interpolation of curve points) for thresholding profiles.  </pre>
<p>[toolbin/color/icc_creator/ICC_Creator/icc_create.cpp]</p>
</blockquote>

<p><strong><a name="2010-11-03T204407.993086Z"></a>
2010-11-03T20:44:07.993086Z Michael Vrhel</strong></p>
<blockquote>
<pre>
Fix to avoid potential crash instead of error if an improper file name is given for the device ICC profile.</pre>
<p>[base/gsicc_manage.c]</p>
</blockquote>

<p><strong><a name="2010-11-02T171624.985382Z"></a>
2010-11-02T17:16:24.985382Z Chris Liddell</strong></p>
<blockquote>
<pre>
Remove some unnecessary, and detrimental endian related code
in the GS/lcms interface.

Bug 691696
	
No cluster differences expected.

</pre>
<p>[base/gsicc_cache.c base/gsicc_littlecms.c]</p>
</blockquote>

<p><strong><a name="2010-11-01T235927.933765Z"></a>
2010-11-01T23:59:27.933765Z Michael Vrhel</strong></p>
<blockquote>
<pre>
Performance fix so that the md5 code is not used to hash the rendering conditions for the icc link.  </pre>
<p>[base/gsicc_cache.c base/gscms.h]</p>
</blockquote>

<p><strong><a name="2010-10-31T032619.022477Z"></a>
2010-10-31T03:26:19.022477Z Ray Johnston</strong></p>
<blockquote>
<pre>
Optimize large allocations in the chunk memory manager maintaining separate lists
for chunks with only a single block (that will never have any free space) from
the multiple object chunks which are searched for free space when the requests
are for small objects. Testing with a 28 files benchmark suite shows improvements
against rev 11876 by over 9% (real time), to get within 2% of version 8.71.
(testing 600 dpi ppmraw to /dev/null on peeves).
</pre>
<p>[base/gsmchunk.c]</p>
</blockquote>

<p><strong><a name="2010-10-30T034036.798714Z"></a>
2010-10-30T03:40:36.798714Z Alex Cherepanov</strong></p>
<blockquote>
<pre>
Check for negative object nunbers and consider such objects as null.
Bug 691740, customer 384.
</pre>
<p>[Resource/Init/pdf_base.ps]</p>
</blockquote>

<p><strong><a name="2010-10-29T234030.279741Z"></a>
2010-10-29T23:40:30.279741Z Michael Vrhel</strong></p>
<blockquote>
<pre>
Fix so that the image clues array is dynamically allocate only when needed as opposed to being a static array in gx_image_enum.  clues is used only in the case of monochrome or indexed with bps &lt;= 8 and masked images.  Another optimization to do is to make it allocate only 2 entries for the masked case rather than all 256.</pre>
<p>[base/gxipixel.c base/gxidata.c base/gximage.h]</p>
</blockquote>

<p><strong><a name="2010-10-29T193548.071618Z"></a>
2010-10-29T19:35:48.071618Z Henry Stiles</strong></p>
<blockquote>
<pre>
Revision 10823 removed an optimization to strength reduce the logical
operation when rendering an image - the optimization in fact was
incorrect (see the bug referenced in the commit entry #691147) however
the optimization is correct and gives us a good speedup if the current
color is black.  This is due to the peculiarities of the pcl
transparency model which only effects the opacity/transparency of
white.
</pre>
<p>[base/gxipixel.c]</p>
</blockquote>

<p><strong><a name="2010-10-29T163741.020300Z"></a>
2010-10-29T16:37:41.020300Z Michael Vrhel</strong></p>
<blockquote>
<pre>
Added features and fixed bugs to enable creation of thresholding ICC profiles.</pre>
<p>[toolbin/color/icc_creator/ICC_Creator/icc_create.h toolbin/color/icc_creator/ICC_Creator/ICC_CreatorDlg.h toolbin/color/icc_creator/ICC_Creator/resource.h toolbin/color/icc_creator/ICC_Creator/ICC_Creator.rc toolbin/color/icc_creator/ICC_Creator/icc_create.cpp toolbin/color/icc_creator/ICC_Creator/ICC_CreatorDlg.cpp]</p>
</blockquote>

<p><strong><a name="2010-10-29T090542.895454Z"></a>
2010-10-29T09:05:42.895454Z Ken Sharp</strong></p>
<blockquote>
<pre>
Fix : DeviceN not permitting multiple identical inks

Bug #691740

The DeviceN checking code did not permit multiple inks to have the same name. The
comment in the code says this is not permitted, but I am unable to find any
documentation in any of the specifications in support of this, and other interpreters
(including CPSI) do not make this restriction.

Restriction removed, and also the 'continuation' procedures used for much of the colour
space parsing/validation have been given names so that future error messages use these
instead of printing the function address.

No differences expected.
</pre>
<p>[base/gscdevn.c psi/zcolor.c]</p>
</blockquote>

<p><strong><a name="2010-10-28T204114.761110Z"></a>
2010-10-28T20:41:14.761110Z Michael Vrhel</strong></p>
<blockquote>
<pre>
Addition in profile creation tool to create Gray ICC profiles with abrupt thresholds.   Needed for solution to bug 691737</pre>
<p>[toolbin/color/icc_creator/ICC_Creator/icc_create.h toolbin/color/icc_creator/ICC_Creator/ICC_CreatorDlg.h toolbin/color/icc_creator/ICC_Creator/resource.h toolbin/color/icc_creator/ICC_Creator/ICC_Creator.rc toolbin/color/icc_creator/ICC_Creator/icc_create.cpp toolbin/color/icc_creator/ICC_Creator/ICC_CreatorDlg.cpp]</p>
</blockquote>

<p><strong><a name="2010-10-28T195751.569853Z"></a>
2010-10-28T19:57:51.569853Z Michael Vrhel</strong></p>
<blockquote>
<pre>
Fix for issues that arise when the embedded icc profile is the same as one of the default icc profiles and we are using pdfwrite.  This should fix 691731.</pre>
<p>[base/gsicc_create.c base/gsicc_manage.c base/gscms.h base/gsciemap.c]</p>
</blockquote>

<p><strong><a name="2010-10-28T190245.723574Z"></a>
2010-10-28T19:02:45.723574Z Robin Watts</strong></p>
<blockquote>
<pre>
Marcos points out that tiffscaled with -rR -dDownScaleFactor=D can produce
different sized images than just using -r(R*D) and a normal tiff device.
(Bug 691730). I'll concede he's probably right that this isn't ideal.

The difference was caused by me rounding the size up on a downscale so that
no information is lost.

This patch removes the rounding up. We can always add it again later if
we actually find a file where it makes a difference.

No expected cluster differences.

</pre>
<p>[base/gdevtifs.c]</p>
</blockquote>

<p><strong><a name="2010-10-28T150037.200667Z"></a>
2010-10-28T15:00:37.200667Z Chris Liddell</strong></p>
<blockquote>
<pre>
Work around the &quot;no rule to make target&quot; with tif_config.h (actually it
affects tiffconf.h, too). This involves the rather unpleasant requirement
of calling a configure script (for libtiff) from a makefile (the top level
makefile for the ghostpdl builds). It must be done there, before the PDL
specific makefiles start setting CFLAGS, which confuses the configure.

Also, update the GS dist-clean and GhostPDL clean targets to remove
the two tiff header files generated during the tiff configure.

THIS IS NOT A FIX! It really is a &quot;workaround&quot;.

Bug 691700.


</pre>
<p>[/trunk/ghostpdl/Makefile base/Makefile.in]</p>
</blockquote>

<p><strong><a name="2010-10-28T061253.429268Z"></a>
2010-10-28T06:12:53.429268Z Michael Vrhel</strong></p>
<blockquote>
<pre>
Code to speed up cases where a file contains a lot of small images that are embedded in the clist as high level images.  Previously, for every high level image, the serialized ICC source data was read out of the clist at a different clist file location, which required a fseek, a fread and then another fseek.  This occurred even if all the images shared the same profile.  The cost of file i/o for this can become significant if we have a lot of images.  With this commit, the reading of the profile data is delayed and will only occur if a link using that profile does not already exist in the link cache.  </pre>
<p>[base/gxclpath.c base/gxclimag.c base/gxclist.h base/gxclrast.c]</p>
</blockquote>

<p><strong><a name="2010-10-28T041255.507828Z"></a>
2010-10-28T04:12:55.507828Z Marcos H. Woehrmann</strong></p>
<blockquote>
<pre>
Added dependencies to devs.mak to allow minftrsz.c to compile with concurrent make.

</pre>
<p>[base/devs.mak]</p>
</blockquote>

<p><strong><a name="2010-10-27T233042.045125Z"></a>
2010-10-27T23:30:42.045125Z Robin Watts</strong></p>
<blockquote>
<pre>
Fix compiler warning.

No expected differences.

</pre>
<p>[base/gdevtifs.c]</p>
</blockquote>

<p><strong><a name="2010-10-27T194801.087645Z"></a>
2010-10-27T19:48:01.087645Z Robin Watts</strong></p>
<blockquote>
<pre>
Add new version of tiffscaled device, that supports -dMinFeatureSize=2.
(Solves bug 691718).

Also add support for AdjustWidth in tiffscaled device.

Also update documentation.

No expected differences.

</pre>
<p>[base/gdevfax.h base/gdevtifs.c base/minftrsz.c base/gdevtifs.h base/gdevtsep.c base/minftrsz.h doc/Devices.htm base/gdevfax.c base/gdevtfnx.c base/gdevtfax.c]</p>
</blockquote>

<p><strong><a name="2010-10-27T124549.361211Z"></a>
2010-10-27T12:45:49.361211Z Robin Watts</strong></p>
<blockquote>
<pre>
Fix Bug 691727.

Black and White Tiff based devices were not respecting the AdjustWidth
parameter. Fax based devices were applying it regardless, non faxed based
devices were not applying it at all. The documentation says they should
all default to applying it, but be controlled by the option.

In this commit, we change so that all black and white tiff based devices
(except tiffscaled) respect this parameter. We default to applying it in
fax devices, and not applying it in non-fax devices, so default behaviour
does not change. We also update the docs.

No expected differences.

</pre>
<p>[doc/Devices.htm base/gdevtfax.c]</p>
</blockquote>

<p><strong><a name="2010-10-27T111838.076346Z"></a>
2010-10-27T11:18:38.076346Z Robin Watts</strong></p>
<blockquote>
<pre>
Fix Bug 691726, memory corruption in tiffscaled device when
(resolution % DownScaleFactor) != 0.

The problem specifically occurred when the page had 'stray' lines at the end.
The code I had written to cope with this was calling the Tiff writing code
with the wrong row number, causing the tiff lib to try to extend the buffer.
This, it seems, is a bad thing.

The miscalculation is fixed here, and the bug goes away.

No expected cluster differences.

</pre>
<p>[base/gdevtifs.c]</p>
</blockquote>

<p><strong><a name="2010-10-26T235413.691521Z"></a>
2010-10-26T23:54:13.691521Z Robin Watts</strong></p>
<blockquote>
<pre>
Fix bug reported by Norbert Janssen. Inaccuracies in the floating point maths
can cause 'no-scales' to look like 'downscales', and so high level images are
skipped.

This shouldn't actually matter in most cases as the two rendering paths should
give the same results, but when people hook the clist for their own purposes
this can cause problems. The workaround is to introduce a fudge factor and to
accept very slight downscales.

Thanks to Norbert for the first version of this patch.

Minimal differences in cluster testing due to bug 691697.


</pre>
<p>[base/gxclimag.c]</p>
</blockquote>

<p><strong><a name="2010-10-26T203032.970049Z"></a>
2010-10-26T20:30:32.970049Z Michael Vrhel</strong></p>
<blockquote>
<pre>
Fix for RGB byte order expected by new CMM compared to imdi libray.</pre>
<p>[base/gdevwts.c]</p>
</blockquote>

<p><strong><a name="2010-10-26T202245.373077Z"></a>
2010-10-26T20:22:45.373077Z Robin Watts</strong></p>
<blockquote>
<pre>
Silence gcc warning.

</pre>
<p>[base/gdevfax.c]</p>
</blockquote>

<p><strong><a name="2010-10-26T194135.752819Z"></a>
2010-10-26T19:41:35.752819Z Michael Vrhel</strong></p>
<blockquote>
<pre>
Removal of accidental commit of my own path for the wts halftone planes.

</pre>
<p>[base/gdevwts.c]</p>
</blockquote>

<p><strong><a name="2010-10-26T185049.267717Z"></a>
2010-10-26T18:50:49.267717Z Michael Vrhel</strong></p>
<blockquote>
<pre>
Fix so that wtsimidi device works again.   I had the device using the wrong structure for maintaining its device link that maps the contone RGB data to CMYK.</pre>
<p>[base/gdevwts.c]</p>
</blockquote>

<p><strong><a name="2010-10-26T181015.277289Z"></a>
2010-10-26T18:10:15.277289Z Robin Watts</strong></p>
<blockquote>
<pre>
Add Rays MinFeatureSize magic. Ray had originally integrated this into the
fax devices, which had the effect of working for the tiff based fax
devices too. Unfortunately the reworking of the tiff based devices to
use libtiff meant that the output function changed, causing the patch to
stop working with those devices.

Here we split the new code out into a separate .c/.h pair, so it can be
used by both tiff and fax devices, and hook it up to all the black and
white tiff devices (except tiffscaled) and to the fax based ones.

We also document the device (including it's current limitations).

No expected changes.

</pre>
<p>[base/gdevfax.h base/gdevtifs.c base/minftrsz.c base/gdevtifs.h ghostscript.vcproj base/minftrsz.h base/gdevtsep.c doc/Devices.htm base/gdevfax.c base/gdevtfnx.c base/devs.mak base/gdevtfax.c]</p>
</blockquote>

<p><strong><a name="2010-10-26T141424.874268Z"></a>
2010-10-26T14:14:24.874268Z Alex Cherepanov</strong></p>
<blockquote>
<pre>
Generate fully opaque mask when /SMaskInData attribute is specified in PDF
but JPX stream has no opacity channel. Fix the case of missing images on
Luratech decoder in fts_17_1717.pdf and fts_17_1718.pdf.
</pre>
<p>[base/sjpx_luratech.c]</p>
</blockquote>

<p><strong><a name="2010-10-25T165126.885213Z"></a>
2010-10-25T16:51:26.885213Z Alex Cherepanov</strong></p>
<blockquote>
<pre>
Change the interface to Luratech JPX library to extract image data or
opacity depending on the alpha parameter.
</pre>
<p>[base/sjpx_luratech.c]</p>
</blockquote>

<p><strong><a name="2010-10-25T155910.973330Z"></a>
2010-10-25T15:59:10.973330Z Ken Sharp</strong></p>
<blockquote>
<pre>
Fix pdfwrite : Do not emit DeviceRGB/CMYK as an Alternate when disallowed by PDF/A or X

If a /Separation colour space had an /Alternate of /DeviceRGB or DeviceCMYK it was not 
checked to see if it was valid for PDF/A or PDF/X production, if these were set.

As a result invalid PDF/A or PDF/X files could be written.

The code now tests these flags and if the base space is not valid, converts to an 
appropriate base space by; sampling the tint transform function at 0 and 1, converting
the resulting colours to the appropriate base space (using the Red Book methods for
DeviceRGB/DeviceCMYK conversion), creating a new linear interpolation function for
the new base space, using the converted sampled values for /Co and C1.

The new base space is then written to the PDF file.

No differences expected as we don't test PDF/A and PDF/X on the cluster.</pre>
<p>[base/gdevpdfc.c]</p>
</blockquote>

<p><strong><a name="2010-10-25T062322.846885Z"></a>
2010-10-25T06:23:22.846885Z Alex Cherepanov</strong></p>
<blockquote>
<pre>
Move initialization of state-&gt;alpha flag to the place where it has effect.
</pre>
<p>[base/sjpx_luratech.c]</p>
</blockquote>

<p><strong><a name="2010-10-25T043951.229054Z"></a>
2010-10-25T04:39:51.229054Z Alex Cherepanov</strong></p>
<blockquote>
<pre>
Merge rev. 11790, 11795, 11802, 11805, 11809, 11810, 11812, 11813, 11818
into the trunk. JPX files without SMaskInData are now rendered correctly.
Other JPX files are rendered incorrectly. Trunk PostScript code and Jasper
use separate access to opacity and data. Luratech is still using pixel-
interleaved format.
</pre>
<p>[base/sjpx_luratech.c base/sjpx_luratech.h psi/msvc32.mak]</p>
</blockquote>

<p><strong><a name="2010-10-25T041646.177854Z"></a>
2010-10-25T04:16:46.177854Z Alex Cherepanov</strong></p>
<blockquote>
<pre>
Rev. 11785 have introduced double decrement of the reference counter in
gx_pattern_cache_free_entry() that caused warnings with -Z? option and
SEGV on Windows, esp. with Luratech JPX library. This patch resolves
all warnings and crashes. Bug 691714.
</pre>
<p>[base/gxpcmap.c]</p>
</blockquote>

<p><strong><a name="2010-10-24T222355.448411Z"></a>
2010-10-24T22:23:55.448411Z Alex Cherepanov</strong></p>
<blockquote>
<pre>
Implement /SMaskInData using images with /SMask and separate streams for the
mask and image data. Our /ImageType 103 seems to have issues and cannot be
used directly. /JPXDecode filter now takes /Alpha parameter, which controls
whether opacity or image data stream is extracted.

This commit introduces a PS error on pdfwrite device in fts_18_1805.pdf 
and a few other files with the same image. However, this image has never
been combined with SMask before and the actual bug may predate the commit.
Bug 691489, customer 532.
</pre>
<p>[base/sjpx.c Resource/Init/pdf_draw.ps]</p>
</blockquote>

<p><strong><a name="2010-10-23T223817.069244Z"></a>
2010-10-23T22:38:17.069244Z Alex Cherepanov</strong></p>
<blockquote>
<pre>
Move checking for /JPXDecode filter in front of checking for missing color
spaces to handle /SMaskInData attribute in all cases. Fix handling of filter
arrays and a wrong name /DecodeParms.
</pre>
<p>[Resource/Init/pdf_draw.ps]</p>
</blockquote>

<p><strong><a name="2010-10-22T092910.157074Z"></a>
2010-10-22T09:29:10.157074Z Chris Liddell</strong></p>
<blockquote>
<pre>
Add a debug-clean target (which in turn calls the existing debugclean target)
to be more consistent with the ghostpdl langauge builds.

No cluster differences expected.

</pre>
<p>[base/Makefile.in]</p>
</blockquote>

<p><strong><a name="2010-10-22T075212.054756Z"></a>
2010-10-22T07:52:12.054756Z Ken Sharp</strong></p>
<blockquote>
<pre>
Remove a spurious space that was causing a compiler warning, and remove an unused
function, also causing a compiler warning.
</pre>
<p>[base/gdevpdfu.c]</p>
</blockquote>

<p><strong><a name="2010-10-22T063849.083740Z"></a>
2010-10-22T06:38:49.083740Z Alex Cherepanov</strong></p>
<blockquote>
<pre>
Make oforce_recursive more robust in preparation to SMaskInData commit.
Don't execute tint transform functions and similar executable arrays
that may be added by our PDF interpreter to PDF objects.
</pre>
<p>[Resource/Init/pdf_base.ps]</p>
</blockquote>

<p><strong><a name="2010-10-22T041930.192593Z"></a>
2010-10-22T04:19:30.192593Z Alex Cherepanov</strong></p>
<blockquote>
<pre>
Recognize /SMaskInData attribute as an indicator that the page has
transparency features. Establish a base level for a future regression
testing.
</pre>
<p>[Resource/Init/pdf_main.ps]</p>
</blockquote>

<p><strong><a name="2010-10-21T155737.250433Z"></a>
2010-10-21T15:57:37.250433Z Ken Sharp</strong></p>
<blockquote>
<pre>
More DSC work. Altered Procset emission to strip comments (but not line endings), as
some of the ProcSets included %%BeginPrologue and %%EndPrologue comments which isn't
(I don't think) allowed. Also makes the output file smaller.

When producing DSC output, don't set the FitPages/RoatePages/CenterPages/SetPageSize
operations. 

Don't permit the entire file to be compressed when emitting DSC PostScript
(clearly won't be DSC compliant that way)

Produce some very basic DSC Comments; the correct header, %%Pages, %%Beginprologue.
%%EndPrologue, %%EndComments.

Don't emit %PDF header when producing DSC PostScript.

Count the number of pages and emit a %%Pages: comment at the end of the file. Don't
write the Info dict when producing DSC PostScript. Emit %%Trailer and $$EOF.
</pre>
<p>[base/gdevpdf.c base/gdevpdfu.c]</p>
</blockquote>

<p><strong><a name="2010-10-21T140927.225155Z"></a>
2010-10-21T14:09:27.225155Z Marcos H. Woehrmann</strong></p>
<blockquote>
<pre>
Updated the cluster new node instructions to test the cups device
when verifying the installation is complete.

</pre>
<p>[toolbin/localcluster/readme]</p>
</blockquote>

<p><strong><a name="2010-10-21T133900.821724Z"></a>
2010-10-21T13:39:00.821724Z Marcos H. Woehrmann</strong></p>
<blockquote>
<pre>
Added the cups dev repositories to the cluster node sertup read.me

</pre>
<p>[toolbin/localcluster/readme]</p>
</blockquote>

<p><strong><a name="2010-10-21T111731.420556Z"></a>
2010-10-21T11:17:31.420556Z Ken Sharp</strong></p>
<blockquote>
<pre>
When producing DSC compliant PostScript from ps2write, do not emit the following;
Pages tree, outlines, articles, named destinations, PageLabels array, document metadata,
document Catalog, threads, encrypt dictionary, xref, trailer.

These objects are not required by PostScript, and cannot be easily
placed in a DSC-conforming file. This does mean that, unlike the general output from
ps2write, the output file is *not* a valid PDF file and cannot be opened as such by a
PDF consumer.

No differences expected.
</pre>
<p>[base/gdevpdf.c]</p>
</blockquote>

<p><strong><a name="2010-10-21T110740.293085Z"></a>
2010-10-21T11:07:40.293085Z Ken Sharp</strong></p>
<blockquote>
<pre>
Correct a bug in revision 11828 which tried to copy too many bytes from the source
buffer, if fewer bytes were read then were requested, when copying a ProcSet.
</pre>
<p>[base/gdevpdfu.c]</p>
</blockquote>

<p><strong><a name="2010-10-21T082247.321512Z"></a>
2010-10-21T08:22:47.321512Z Ken Sharp</strong></p>
<blockquote>
<pre>
Remove some unused variables to silence compiler warnings.
</pre>
<p>[base/gdevpdfu.c]</p>
</blockquote>

<p><strong><a name="2010-10-21T024848.797956Z"></a>
2010-10-21T02:48:48.797956Z Alex Cherepanov</strong></p>
<blockquote>
<pre>
Don't search for a font named / on disk, because operator findlibfile
throws an error in this case. Just fail the request when such font is
not defined in VM. Bug 691698, customer 384.
</pre>
<p>[Resource/Init/gs_res.ps]</p>
</blockquote>

<p><strong><a name="2010-10-20T170027.929678Z"></a>
2010-10-20T17:00:27.929678Z Robin Watts</strong></p>
<blockquote>
<pre>
Add a helpful valgrind header, and call it from gsmdebug.h.

The valgrind header here serves 2 purposes.

Firstly, it insulates us from platforms on which Valgrind does not exist -
if we build without defining ENABLE_VALGRIND then no dependency on any
valgrind headers exists. The standard Valgrind macros are all defined in
this header to do nothing, so they can safely be called in our code
without needing ugly #ifdef ENABLE_VALGRIND wrapping.

Secondly, it insulates us from changes in the valgrind/memcheck.h file -
if ENABLE_VALGRIND is defined we will use whatever version is defined by
the system. If new macros are defined by new versions of valgrind/memcheck.h
we simply need to add new 'empty' definitions to valgrind.h.

To start with, the only use of this code is to mark the contents of newly
allocated blocks as being undefined. Thanks to AlexCher for spotting a
cunning place to do this.

</pre>
<p>[base/valgrind.h base/gsmdebug.h]</p>
</blockquote>

<p><strong><a name="2010-10-20T165951.575415Z"></a>
2010-10-20T16:59:51.575415Z Alex Cherepanov</strong></p>
<blockquote>
<pre>
Add /ZapfDingbats to the list of known symbolic fonts, which ignore bogus
/Encoding attribute. Fix fts_23_2300.pdf rendering.
</pre>
<p>[Resource/Init/pdf_font.ps]</p>
</blockquote>

<p><strong><a name="2010-10-20T160528.326890Z"></a>
2010-10-20T16:05:28.326890Z Ken Sharp</strong></p>
<blockquote>
<pre>
Initial work on DSC compliant PostScript. When ProduceDSC is true, do not strip the 
ProcSet, this is because DSC-compliant files have a line limit of 256. Later we will
want to wrap the ProcSet emissions with %%BeginResource/%%EndResource as well.

No effect if ProduceDSC is not true, so no differences expected.
</pre>
<p>[base/gdevpdfu.c]</p>
</blockquote>

<p><strong><a name="2010-10-20T144548.119859Z"></a>
2010-10-20T14:45:48.119859Z Ken Sharp</strong></p>
<blockquote>
<pre>
Add a new switch to ps2write, working title 'ProduceDSC'. This will be used to control
whether the output of ps2write is DSC-compliant or not.

No differences expected.
</pre>
<p>[base/gdevpdfx.h base/gdevpdfp.c base/gdevpdfb.h]</p>
</blockquote>

<p><strong><a name="2010-10-20T105923.603495Z"></a>
2010-10-20T10:59:23.603495Z Robin Watts</strong></p>
<blockquote>
<pre>
Disable the use of high level images in the clist if we are downscaling;
this serves 2 purposes.

Firstly, it fixes the potential problems with banded/unbanded mismatch
of rendering due to the 'support' calculations done in the high level image
code. These calculations are no longer correct for downscales since the
change to use a simpler interpolated image scaler.

Secondly, when downscaling we will probably end up copying more data than
we would if we just kept the original, so high level images are a bad idea
anyway.

This *should* produce no differences, but actually produces lots.

Most of these might be ignorable (slight rendering differences that appear to
result in the new images being a little lighter, but a significant number
appear to be noticable progressions, which hints that the high level image
clist code is broken. Specifically high level images fail to  render the
same as the non high level code does. In particular halftoning seems to
be enabled for some examples when high level images are used, for no good
reason. This has been opened as bug 691697.


</pre>
<p>[base/gxclimag.c]</p>
</blockquote>

<p><strong><a name="2010-10-20T102150.512085Z"></a>
2010-10-20T10:21:50.512085Z Robin Watts</strong></p>
<blockquote>
<pre>
Unpack a hideously complex if statement into a series of if statements.
Any reasonable compiler (if such a thing can be said to exist) should
compile to the same code, but this is a lot easier to use under a debugger/
read.

No changes expected in testing (and clusterpush agrees).


</pre>
<p>[base/gxclimag.c]</p>
</blockquote>

<p><strong><a name="2010-10-19T080432.778817Z"></a>
2010-10-19T08:04:32.778817Z Ken Sharp</strong></p>
<blockquote>
<pre>
Fix (pdfwrite) : Update CFF interpreter to handle gsubr while searching for SEAC

Bug #691680 &quot;PDF Writer drops many accented characters&quot;

pdfwrite makes use of a routine 'gs_type1_piece_codes' while copying fonts to determine
if a glyph is a SEAC, and therefore includes two subsidiary glyphs. This code was
updated previously (rev 10076) but on encountering a callgsubr in a CFF font, assumed
that the glyph was not a SEAC&gt;

This patch adds support for callgsubr and continues searching glyphs which use a gsubr
to see if the gsubr is actually a SEAC type endchar.

No differences expected.
</pre>
<p>[base/gxtype1.c]</p>
</blockquote>

<p><strong><a name="2010-10-18T154420.143696Z"></a>
2010-10-18T15:44:20.143696Z Chris Liddell</strong></p>
<blockquote>
<pre>
Silence a compiler warning from my previous commit.

</pre>
<p>[psi/zchar42.c]</p>
</blockquote>

<p><strong><a name="2010-10-18T141144.566085Z"></a>
2010-10-18T14:11:44.566085Z Chris Liddell</strong></p>
<blockquote>
<pre>
In a CIDType2 font with a gsub table, when/if we substitute the glyph index
with an index for a vertical glyph, make sure we change the value of the
Truetype glyph index, and *not* the value of the Postscript CID.

Bug 691692

No cluster differences expected.

</pre>
<p>[psi/zchar42.c]</p>
</blockquote>

<p><strong><a name="2010-10-16T155253.774342Z"></a>
2010-10-16T15:52:53.774342Z Ken Sharp</strong></p>
<blockquote>
<pre>
Fix pdfwrite: Don't use CFF font format if CompatibilityLevel &lt; 1.2

We permit CompatibilityLevel down to 1.1, but PDF 1.1. doesn't support CFF (Type 1C)
fonts, so don't use this format if CompatibilityLevel &lt; 1.2.

No differences expected.
</pre>
<p>[base/gdevpdfp.c]</p>
</blockquote>

<p><strong><a name="2010-10-15T151236.033471Z"></a>
2010-10-15T15:12:36.033471Z Ken Sharp</strong></p>
<blockquote>
<pre>
Fix (pdfwrite) : Scale up type 3 font outlines to give more accuracy

Bug #691383, #691287, #691595 various type 3 font problems.

Although this is being fixed for the FreeType implementation, the Artifex font
interpreter had similar problems. 

The issue is caused by using an identity scale at 72 dpi to capture font outlines.
Quark often uses a type 3 font which runs a type 1 font, in order to achieve text
special effects, such as stroke+fill. The stroke was achieved by a 'charpath/fill'
combination, because pdfwrite doesn't have a charpath, this meant that the path was
captured and emitted. Because the scale was so low, the interpreter could run out of
arithmetic precision, resulting in poorly formed outlines.

We can't simply use the CTM in force at the time, as that includes the font scale, but
we need to use something other than the identity. A scale facto of 1000 proved too 
likely to cause arithmetic overflow, or clipping, and also meant writing large values
to the PDF file, which is inefficient. A factor of 10 turned out to be insufficient, so
a factor of 100 has been used.

Because the CharProc is effectively interpreted at the page level, this can result in
large values being used for paths, so we need to scale the device width and height by
100 as well, to prevent clipping (and undo it afterwards!)

</pre>
<p>[base/gdevpdtt.c base/gdevpdti.c]</p>
</blockquote>

<p><strong><a name="2010-10-15T150705.687999Z"></a>
2010-10-15T15:07:05.687999Z Chris Liddell</strong></p>
<blockquote>
<pre>
With the latest release of Freetype, reinstate the &quot;sensible&quot; method of
limiting the size of the bitmap that we let Freetype create. It is
limited to 1.5x the current maximum cacheable glyph bitmap, as it is *vital*
that we avoid creating an outline when the cache expects a bitmap,
but not a problem if we create a bitmap for a non-cached glyph.

Bug 691569.

No cluster differences expected.

</pre>
<p>[psi/fapi_ft.c]</p>
</blockquote>

<p><strong><a name="2010-10-15T142151.952651Z"></a>
2010-10-15T14:21:51.952651Z Ken Sharp</strong></p>
<blockquote>
<pre>
Fix (pdfwrite) : Properly scale co-ordinates into Acrobat's range

When emitting various co-ordinates pdfwrite is careful to stay within +/- 32,767 in
order to ensure all versions of Acrobat can properly deal with them. To achieve this it
emits a matrix which scales values up, and then writes the co-ordinates scaled down
by this factor. Thus ensuring that they stay within permitted values, but are still
correct.

However, when emitting a rectangular fill, the scale was applied backwards, the 
co-ordinates were scaled *up* instead of down by the scale factor. This led to wildly
incorrect values being written for rectangular paths.

No differences expected with this in the test suite, however it forms part of the fix
for type 3 fonts which will follow and does rely on this change.
</pre>
<p>[base/gdevpdfd.c]</p>
</blockquote>

<p><strong><a name="2010-10-14T202315.984226Z"></a>
2010-10-14T20:23:15.984226Z Henry Stiles</strong></p>
<blockquote>
<pre>
The image_set_gray function needed to take the address of the pointer
to the device color, the parameter should have been passed by
reference, as it must be set to &amp;penum-&gt;clues[sample_value].dev_color
and returned.  We'd like to get rid of the macro entirely and use the
image_set_gray as an inline function but have not tested performance.
The function might be too complex for inlining on some compilers.
</pre>
<p>[base/gximono.c]</p>
</blockquote>

<p><strong><a name="2010-10-14T150601.276381Z"></a>
2010-10-14T15:06:01.276381Z Chris Liddell</strong></p>
<blockquote>
<pre>
In gx_alloc_char_bits() the &quot;target&quot; device can be NULL, in which case
avoid trying to decrement the ICC profile object for the target device.

patch credit to William Bader.

Bug 691651.

No cluster differences expected.

</pre>
<p>[base/gxccman.c]</p>
</blockquote>

<p><strong><a name="2010-10-14T150156.645831Z"></a>
2010-10-14T15:01:56.645831Z Chris Liddell</strong></p>
<blockquote>
<pre>
If we're passed an unexpected object instead of a glyph name object
fall back to rendering the notdef.

This is not identical, but is closer to the behaviour of the AFS code
under these conditions.

Highlighted by Bug 691656.

No cluster differences expected.

</pre>
<p>[psi/zfapi.c]</p>
</blockquote>

<p><strong><a name="2010-10-14T145736.364971Z"></a>
2010-10-14T14:57:36.364971Z Chris Liddell</strong></p>
<blockquote>
<pre>
Rename libpng.mak to png.mak to make it consistent with the other
third part libraries.

Bug 691681

No cluster differences expected.

</pre>
<p>[base/openvms.mmk base/ugcclib.mak base/libpng.mak base/Makefile.in base/unix-gcc.mak base/macos-mcp.mak base/winlib.mak base/png.mak psi/os2.mak base/openvms.mak base/macosx.mak base/configure.ac /trunk/ghostpdl/common/ugcc_top.mak psi/msvc32.mak base/unixansi.mak base/msvclib.mak base/devs.mak]</p>
</blockquote>

<p><strong><a name="2010-10-14T142322.009615Z"></a>
2010-10-14T14:23:22.009615Z Till Kamppeter</strong></p>
<blockquote>
<pre>
CUPS Raster output device: Fixed access to uninitialized variable, the margins array is only set when size_set is true (bug #691683).
</pre>
<p>[cups/gdevcups.c]</p>
</blockquote>

<p><strong><a name="2010-10-14T115731.187468Z"></a>
2010-10-14T11:57:31.187468Z Chris Liddell</strong></p>
<blockquote>
<pre>
Rename libtiff.mak to tiff.mak to be more consistent with the other third party libs.

Bug 691681

No cluster differences expected.

</pre>
<p>[base/winlib.mak base/tiff.mak base/Makefile.in /trunk/ghostpdl/common/ugcc_top.mak base/unix-gcc.mak base/unixansi.mak base/libtiff.mak]</p>
</blockquote>

<p><strong><a name="2010-10-13T171459.959208Z"></a>
2010-10-13T17:14:59.959208Z Robin Watts</strong></p>
<blockquote>
<pre>
Fix 2 build warnings in gdevtifs.c

No expected differences.

</pre>
<p>[base/gdevtifs.c]</p>
</blockquote>

<p><strong><a name="2010-10-13T160151.166726Z"></a>
2010-10-13T16:01:51.166726Z Robin Watts</strong></p>
<blockquote>
<pre>
Add new tiffscaled device. This renders internally as tiffgray, but then
downsamples by an integer scale factor (specified by -dDownScaleFactor=n)
and error diffuses to 1bpp output.

This device is also included in pcl builds (windows ones at least), enabling
a solution for dropouts caused by rendering pcl at 200dpi. (Render at 600dpi
and scale down by a factor of 3). This should hopefully solve bug 690085.

Future work to consider: work on bringing libtiff based devices into unix PCL
builds, consider stochastic thresholding rather than FS error diffusion.

</pre>
<p>[base/gdevtifs.c base/openvms.mak base/gdevtifs.h base/gdevtsep.c base/configure.ac base/unix-gcc.mak doc/Devices.htm base/unixansi.mak psi/msvc32.mak base/gdevtfnx.c base/macos-mcp.mak base/devs.mak base/gdevtfax.c]</p>
</blockquote>

<p><strong><a name="2010-10-13T104804.352147Z"></a>
2010-10-13T10:48:04.352147Z Chris Liddell</strong></p>
<blockquote>
<pre>
We have far fewer font Decodings than there are &quot;well known&quot; Encodings, so
assuming that for such an Encoding we always have a predefined Decoding
is problematic.

We'll now try to find a predefined Decoding, and if one isn't found
we'll derive one from the Encoding (as we previously did only for
non-well known Encodings).

Bug 691677

No cluster differences expected.

</pre>
<p>[Resource/Init/gs_fntem.ps]</p>
</blockquote>

<p><strong><a name="2010-10-12T232736.478231Z"></a>
2010-10-12T23:27:36.478231Z Robin Watts</strong></p>
<blockquote>
<pre>
Remove unused variable in siscale.c that was causing warnings.

No expected differences.

</pre>
<p>[base/siscale.c]</p>
</blockquote>

<p><strong><a name="2010-10-12T162632.204667Z"></a>
2010-10-12T16:26:32.204667Z Robin Watts</strong></p>
<blockquote>
<pre>
Update interpolation filter. When we are downscaling an image on either axis
we now use a simpler (less computationally complex) linear interpolation
filter rather than the existing mitchell filter.

For downscaling the difference in quality between mitchell and simple
linear interpolation is not that noticable. (But the CPU/memory usage is a
quarter what it would be for proper mitchell downscaling).

What is noticable is that the existing downscaling code is 'bent' to avoid
having to hold more than 8 temporary scaled scanlines of the image. The effect
of this is to incorrectly limit the pixels that actually go into contributing
to an output pixel, producing dropouts.

We update the code here to remove this limit. This means that downscales
may potentially take more memory and more computation to perform, but the
overall quality is better.

Regression tests show both noticable and unnoticable differences in files that
enable interpolation (270 or so). The noticable differences are all that the
new output looks smoother, at the expense of losing some contrast and solving
some 'jaggy' looking edges.

Testing with my custom dropout test file shows a huge improvement with the
new code. I'll add this to the test repo shortly.

</pre>
<p>[base/siscale.c]</p>
</blockquote>

<p><strong><a name="2010-10-12T055216.851470Z"></a>
2010-10-12T05:52:16.851470Z Michael Vrhel</strong></p>
<blockquote>
<pre>
Fix for a large memory leak that can occur when a pattern cache entry is freed and a transparency buffer exists in the entry.  A problem was that the pdf14 device, which contains pointers to the buffer, had its close device procedure set to forward due to the device being set in a disabled state during pattern_paint_finish.  The close device proc for the pdf14 device contains the calls to actually free the buffers so this was not occurring (instead we were forwarding to another device).  In addition, the pdf14 device itself was not being destroyed.  With this commit, when the pattern entry is freed, the  pdf14 device is now closed, which frees the buffers, and the pdf14 device is properly reference count decremented to result in the device itself getting freed.  Regression run revealed no problems.</pre>
<p>[psi/zpcolor.c base/gxpcmap.c]</p>
</blockquote>

<p><strong><a name="2010-10-11T075326.581165Z"></a>
2010-10-11T07:53:26.581165Z Chris Liddell</strong></p>
<blockquote>
<pre>
Update Freetype to 2.4.3

Revise fapi_ft.c to take into account new font(s) being added to Freetype's
&quot;tricky&quot; font list. &quot;Tricky&quot; fonts need the bytecode interpreter to produce
&quot;correct&quot; output. But for GS, in the case of (even &quot;tricky&quot;) fonts which
produce an error in the bytecode interpreter, we want to try to produce
some output, even just a notdef glyph. So in the non-hinted, and notdef
fallback cases, remove the &quot;tricky&quot; flag from the Freetype face.

No cluster differences expected.


</pre>
<p>[freetype/src/pshinter/pshalgo.c psi/fapi_ft.c freetype/builds/unix/config.sub freetype/src/type42/t42parse.c freetype/builds/win32/visualce/freetype.dsp freetype/docs/reference/ft2-toc.html freetype/docs/reference/ft2-computations.html freetype/builds/unix/configure.ac freetype/builds/wince/vc2008-ce/index.html freetype/builds/unix/ftconfig.in freetype/src/sfnt/ttload.c freetype/ChangeLog.23 freetype/docs/reference/ft2-sizes_management.html freetype/src/cache/ftccache.c freetype/docs/reference/ft2-quick_advance.html freetype/include/freetype/freetype.h freetype/configure freetype/docs/reference/ft2-pfr_fonts.html freetype/docs/reference/ft2-gasp_table.html freetype/docs/reference/ft2-system_interface.html freetype/builds/unix/configure freetype/docs/reference/ft2-mac_specific.html freetype/docs/reference/ft2-basic_types.html freetype/docs/reference/ft2-lcd_filtering.html freetype/src/truetype/ttgload.c freetype/docs/reference/ft2-cid_fonts.html freetype/include/freetype/internal/ftobjs.h freetype/docs/reference/ft2-winfnt_fonts.html freetype/docs/reference/ft2-bitmap_handling.html freetype/docs/reference/ft2-cache_subsystem.html freetype/Jamfile freetype/include/freetype/ftimage.h freetype/src/base/ftobjs.c freetype/builds/win32/visualce/index.html freetype/docs/reference/ft2-glyph_variants.html freetype/docs/reference/ft2-glyph_stroker.html freetype/builds/win32/visualc/freetype.vcproj freetype/docs/reference/ft2-sfnt_names.html freetype/docs/reference/ft2-raster.html freetype/include/freetype/ftlcdfil.h freetype/builds/win32/visualce/freetype.vcproj freetype/docs/reference/ft2-bdf_fonts.html freetype/docs/reference/ft2-truetype_tables.html freetype/src/truetype/ttobjs.c freetype/builds/unix/config.guess freetype/include/freetype/config/ftconfig.h freetype/docs/reference/ft2-glyph_management.html freetype/src/autofit/aflatin.c freetype/src/raster/ftraster.c freetype/builds/win32/visualc/index.html freetype/builds/wince/vc2005-ce/index.html freetype/docs/reference/ft2-version.html freetype/docs/reference/ft2-gx_validation.html freetype/docs/reference/ft2-multiple_masters.html freetype/src/cff/cffgload.c freetype/docs/reference/ft2-base_interface.html freetype/docs/reference/ft2-header_file_macros.html freetype/builds/win32/vc2005/index.html freetype/src/cid/cidgload.c freetype/docs/reference/ft2-ot_validation.html freetype/builds/unix/unix-cc.in freetype/builds/wince/vc2005-ce/freetype.vcproj freetype/src/base/ftsynth.c freetype/src/winfonts/winfnt.c freetype/devel/ftoption.h freetype/builds/win32/vc2005/freetype.vcproj freetype/docs/reference/ft2-index.html freetype/builds/win32/vc2008/freetype.vcproj freetype/src/cache/ftcsbits.c freetype/docs/reference/ft2-outline_processing.html freetype/docs/reference/ft2-lzw.html freetype/src/truetype/ttpload.c freetype/src/smooth/ftgrays.c freetype/builds/win32/visualc/freetype.dsp freetype/src/truetype/ttinterp.c freetype/docs/reference/ft2-module_management.html freetype/src/cff/cffload.c freetype/docs/reference/ft2-user_allocation.html freetype/src/base/ftstream.c freetype/src/truetype/ttinterp.h freetype/builds/unix/configure.raw freetype/docs/reference/ft2-type1_tables.html freetype/src/sfnt/ttpost.c freetype/builds/win32/vc2008/index.html freetype/src/cff/cffobjs.c freetype/docs/reference/ft2-font_formats.html freetype/builds/wince/vc2008-ce/freetype.vcproj freetype/docs/reference/ft2-incremental.html freetype/src/smooth/ftsmooth.c freetype/ChangeLog freetype/docs/VERSION.DLL freetype/docs/reference/ft2-truetype_engine.html freetype/include/freetype/ftcache.h freetype/docs/reference/ft2-list_processing.html freetype/docs/reference/ft2-gzip.html freetype/README freetype/include/freetype/ftmodapi.h freetype/docs/CHANGES]</p>
</blockquote>

<p><strong><a name="2010-10-10T055109.780940Z"></a>
2010-10-10T05:51:09.780940Z regression</strong></p>
<blockquote>
<pre>
Various minor fixed to the local cluster code:

  clustermonitor.pl now deals with terminal windows being resize
  clustermaster.pl logs messages to clustermaster.log
  build.pl now adds -dcupsColorSpace=0 to command line
  run.pl now longer runs fuzzy after bmpcmp

</pre>
<p>[toolbin/localcluster/clustermonitor.pl toolbin/localcluster/clustermaster.pl toolbin/localcluster/build.pl toolbin/localcluster/run.pl toolbin/localcluster/compare.pl]</p>
</blockquote>

<p><strong><a name="2010-10-08T144218.915016Z"></a>
2010-10-08T14:42:18.915016Z Ken Sharp</strong></p>
<blockquote>
<pre>
Fix (pdfwrite) : Process text in Tr 3 even if the Widths are non-standard

Bug #691605 &quot;Invisible text not preserved by pdfwrite&quot;

The problem was that if text in text rendering mode 4 (neither stroke nor fill) used a
font where the entries in the FontDescriptor /Widths array did not match the actual 
widths in the font, the code took a path where the glyphs were not added to the 'used'
list, and so were never emitted.

Text in regular fonts where the /Widths array was missing, or matched the widths in the
font (as the spec says they must) worked correctly.

Fixed by processing text whose operation properties include TEXT_RENDER_MORE_3 the
same as text with the TEXT_DO_DRAW property.</pre>
<p>[base/gdevpdte.c]</p>
</blockquote>

<p><strong><a name="2010-10-08T134241.451688Z"></a>
2010-10-08T13:42:41.451688Z Ken Sharp</strong></p>
<blockquote>
<pre>
Remove an unused variable (flagged by static analysis).
</pre>
<p>[base/gdevpsdi.c]</p>
</blockquote>

<p><strong><a name="2010-10-08T133705.002251Z"></a>
2010-10-08T13:37:05.002251Z Ken Sharp</strong></p>
<blockquote>
<pre>
Prevent a possible attempt to memset a NULL pointer. This was probably safe since the
size of the memset would be 0 bytes, but its best to be safe.
</pre>
<p>[base/gdevpdtt.c]</p>
</blockquote>

<p><strong><a name="2010-10-08T133400.715868Z"></a>
2010-10-08T13:34:00.715868Z Ken Sharp</strong></p>
<blockquote>
<pre>
Remove an unused variable (flagged by static analysis)</pre>
<p>[base/gdevpdfi.c]</p>
</blockquote>

<p><strong><a name="2010-10-08T133111.163393Z"></a>
2010-10-08T13:31:11.163393Z Chris Liddell</strong></p>
<blockquote>
<pre>
A stringwidth operation does not always result in a call to fapi_finish_render()
which can cause Freetype glyph objects to not be freed.

Add a firewall so we don't simply overwrite the pointer to the Freetype glyph
object, but correctly dispose of the object.

Bug 691668

No cluster differences expected.

</pre>
<p>[psi/fapi_ft.c]</p>
</blockquote>

<p><strong><a name="2010-10-08T120124.908534Z"></a>
2010-10-08T12:01:24.908534Z Ken Sharp</strong></p>
<blockquote>
<pre>
Fix (pdfwrite) : Check encoding compatibility when finding base fonts

Bug #691656 &quot;crash in Chinese font: /typecheck in --.FAPIBuildGlyph--&quot;

A typecheck error is not a crash of course, but when using the built in font interpreter
this did not produce an error, silently discarded the text instead. This was still
incorrect.

The problem is caused when dealing with type 0 fonts and producing multiple type 1 fonts
to handle the large number of glyphs. The code for finding an existing font (in order
to minimise the number of new fonts) or create a new font, did not consider the 
encoding of an existing font when trying to match it (this did work for regular fonts).

This could lead to a font with an incompatible encoding being used, which caused an
error later in text processing where a routine is supposed to be guaranteed no font
encoding problems. That led to an attempted fallback to the 'bitmapped type 3 font'
solution, but the text processing was passing ridiculous values to the font interpreter.

In the old font code this caused a silent discard of the text, with the FreeType code 
it produces an error.

Fixed by checking the base font we find to see if its encoding is compatible with the 
current text encoding, and manufacturing a new font if it is not.

No differences expected.
</pre>
<p>[base/gdevpdtt.c]</p>
</blockquote>

<p><strong><a name="2010-10-08T050927.837431Z"></a>
2010-10-08T05:09:27.837431Z Ray Johnston</strong></p>
<blockquote>
<pre>
Fix for miscalculation of clist_color_info.depth when tags are part of
the PDF14 device color. While 8 * num_components is usually enough, when
we have tags, we need the extra byte. Seen with fts_16_1601.pdf in clist
mode on HEAD and with customer 532 code when PDF14_transparency + tags is
included.
</pre>
<p>[base/gdevp14.c]</p>
</blockquote>

<p><strong><a name="2010-10-07T135949.890609Z"></a>
2010-10-07T13:59:49.890609Z Ken Sharp</strong></p>
<blockquote>
<pre>
Put back some statements. It turns out that we can either have gcc be warning free or
the static analysis warning free. The problem is gs_note_error which uses
gs_log_error, on a release build gs_log_error is defined as the error value. 

If we don't do something with that value then gcc complains that the 'statement has no
effect'. So the code was set like this:

ecode = gs_note_error(error code);

But if we want to actually ignore the error and just note the problem, then we don't use
ecode and the static analysis complains that the variable is unused....

I'd rather have no warnings from gcc so I've restored that.
</pre>
<p>[base/gdevpdfj.c base/gdevpdfp.c base/gdevpdfu.c]</p>
</blockquote>

<p><strong><a name="2010-10-07T124954.318945Z"></a>
2010-10-07T12:49:54.318945Z Ken Sharp</strong></p>
<blockquote>
<pre>
More changes to silence static analysis warnings. Mostly removing unused variables or
assignments.
</pre>
<p>[base/gdevpdfj.c base/gdevpdfm.c base/gdevpdfp.c base/gdevpdtb.c base/gdevpdtc.c base/gdevpdtd.c base/gdevpdtt.c base/gdevpdtf.c base/gdevpdfu.c base/gdevpdti.c base/gdevpdfi.c]</p>
</blockquote>

<p><strong><a name="2010-10-07T083558.544234Z"></a>
2010-10-07T08:35:58.544234Z Ken Sharp</strong></p>
<blockquote>
<pre>
Silence (hopefully) some compiler warnings.
</pre>
<p>[base/gdevpdf.c]</p>
</blockquote>

<p><strong><a name="2010-10-07T080415.270260Z"></a>
2010-10-07T08:04:15.270260Z Ken Sharp</strong></p>
<blockquote>
<pre>
Remove some unused variables and assignments flagged by static analysis.</pre>
<p>[base/gdevpdfg.c]</p>
</blockquote>

<p><strong><a name="2010-10-07T075743.664608Z"></a>
2010-10-07T07:57:43.664608Z Ken Sharp</strong></p>
<blockquote>
<pre>
Fix a potential NULL pointer dereference flagged by static analysis. 

Other potential occurrences flagged by the analyser in this module are deemed not to be
possible, as these are picked up at a higher level.

For instance, dereferencing a pointer to a path structure in a path handling method. We
can assume the path pointer is not NULL as we would not be called if the path was empty.
</pre>
<p>[base/gdevpdfd.c]</p>
</blockquote>

<p><strong><a name="2010-10-07T075009.274081Z"></a>
2010-10-07T07:50:09.274081Z Ken Sharp</strong></p>
<blockquote>
<pre>
Static analysis discovered two variables being altered that are not subsequently used.
Although this is safe, removed the code anyway.
</pre>
<p>[base/gdevpdfb.c]</p>
</blockquote>

<p><strong><a name="2010-10-07T074913.279339Z"></a>
2010-10-07T07:49:13.279339Z Ken Sharp</strong></p>
<blockquote>
<pre>
static analysis found that the result of fread was not being used. Add code to test the
result and flag a warning if expected data not read.</pre>
<p>[base/gdevpdf.c]</p>
</blockquote>

<p><strong><a name="2010-10-06T140332.653153Z"></a>
2010-10-06T14:03:32.653153Z Robin Watts</strong></p>
<blockquote>
<pre>
Fix for part 2 of Bug 691484, valgrind warnings about uninitialised values
in clist code.

The problem is that we are writing out a cmd_block without initialising it all.
The fix is simply to initialise it (using a memset, so accounting for all
padding bytes too) before starting to use it.

This stops the valgrind warnings. No changes in localcluster testing.


</pre>
<p>[base/gxclist.c]</p>
</blockquote>

<p><strong><a name="2010-10-06T134815.425458Z"></a>
2010-10-06T13:48:15.425458Z Ken Sharp</strong></p>
<blockquote>
<pre>
Add some body parentheses to 'if' statements in order to silence some clang warnings.
</pre>
<p>[base/gdevpdfp.c base/gdevpdtf.c]</p>
</blockquote>

<p><strong><a name="2010-10-06T120646.017717Z"></a>
2010-10-06T12:06:46.017717Z Robin Watts</strong></p>
<blockquote>
<pre>
Whitespace tweaks to gxiscale.c. The complexity in the file is more than
enough for my tiny brain without expecting it to cope with inconsistent
indentation too :)

</pre>
<p>[base/gxiscale.c]</p>
</blockquote>

<p><strong><a name="2010-10-05T213811.272406Z"></a>
2010-10-05T21:38:11.272406Z Robin Watts</strong></p>
<blockquote>
<pre>
Fix for part 1 of bug 691484 - uninitialised memory usage in clist code.

The FAPI code copies bitmaps and pads them out so that each raster line
is appropriately aligned. Previously the padding bytes were left
uninitialised. Unfortunately the clist code reads the padding when
compressing the bitmaps, which a) upsets valgrind and b) means that the
exact size of the clist will vary from run to run.

Here we tweak the copying code to ensure that the padding bytes are always
set to zero.

No differences shown in local cluster. This solves part 1 of the bug.


</pre>
<p>[psi/zfapi.c]</p>
</blockquote>

<p><strong><a name="2010-10-05T202754.714250Z"></a>
2010-10-05T20:27:54.714250Z Michael Vrhel</strong></p>
<blockquote>
<pre>
Clean up of a few comments about device profiles</pre>
<p>[base/gsicc_manage.c]</p>
</blockquote>

<p><strong><a name="2010-10-05T201810.046358Z"></a>
2010-10-05T20:18:10.046358Z Michael Vrhel</strong></p>
<blockquote>
<pre>
Fix for error in detecting the presence of a device profile set in the command line.  Unfortunately, the device was not being reset from the default profile based upon the setting.</pre>
<p>[base/gsicc_manage.c]</p>
</blockquote>

<p><strong><a name="2010-10-05T135722.688207Z"></a>
2010-10-05T13:57:22.688207Z Alex Cherepanov</strong></p>
<blockquote>
<pre>
Add missing decoding of #nn escape to encrypted PDF reader. Besides fixing the
bug sample file, this patch also corrects a colorant name in IA3Z0440.pdf on
psdcmyk device. Bug 691636.
</pre>
<p>[Resource/Init/pdf_sec.ps]</p>
</blockquote>

<p><strong><a name="2010-10-05T124816.473671Z"></a>
2010-10-05T12:48:16.473671Z Ken Sharp</strong></p>
<blockquote>
<pre>
Fix (pdfwrite) : ConvertCMYKImagesToRGB not working

Bug #691647 &quot;-dConvertCMYKImagesToRGB no longer works&quot;

Originally caused by the conversion to the ICC workflow, which meant that all images
appear to be in a ICC space, and only images originally natively CMYK are converted.

Probing the ICC space using the provided utility to return the original colour space 
allows the code to work, but reveals a more serious error. The code in
psdf_setup_image_filteres() alters the image colour space and decrements the reference
count of the original colour space.

This seems logically correct, and in one of the three calling paths it is correct, but
under one of the other two conditions it causes a crash. The routine 
pdf_begin_typed_image_impl() makes two copies of the original image parameters, and
when it does so it does *not* increment the reference counts of any counted objects.
This copied data is presented to the image filter setup several times, and if CMUK
to RGB conversion is going on the original colour space is decremented each time. This
leads to obvious problems.

The simplest solution would be to increment the reference counts when the copy is made, 
but that would mean checking all the error condition break outs, and decrementing the
reference count in each case.

Since the colour space is only decremented in the filter setup, this patch increments
the count before the call, and if the colour space is the same afterwards (whether
an error occurred or not) decrements it back again. If the colour space changes we do
not decrement the space of course, as the filter setup routine has done that.

In addition, extended the test for whether CMYK images should be converted to include
the original test of the native space, in case we get here after an image has been
converted to a base space and no longer has an ICC space.

No expected differences, this configuration is not tested by the regression suite.
</pre>
<p>[base/gdevpsdi.c base/gdevpdfi.c]</p>
</blockquote>

<p><strong><a name="2010-10-05T121046.672154Z"></a>
2010-10-05T12:10:46.672154Z Robin Watts</strong></p>
<blockquote>
<pre>
Fix for part 1 of Bug 691635, supplied by Norbert Janssen. Many thanks.

In the recent work to remove global variables where possible, I had failed to
change an instance of iodev_default to be iodev_default(mem).

No expected changes.

</pre>
<p>[base/gsiodisk.c]</p>
</blockquote>

<p><strong><a name="2010-10-03T161300.326561Z"></a>
2010-10-03T16:13:00.326561Z Alex Cherepanov</strong></p>
<blockquote>
<pre>
Change the order of operands in a logical expression to avoid dereferencing
an uninitialized variable. Bug 690214.
</pre>
<p>[psi/zfont2.c]</p>
</blockquote>

<p><strong><a name="2010-10-01T193606.952768Z"></a>
2010-10-01T19:36:06.952768Z Ray Johnston</strong></p>
<blockquote>
<pre>
Drop support for these less popular compilers. This will be the first step to
changing to project files for Windows.
</pre>
<p>[base/wctail.mak base/watclib.mak base/bcwin32.mak base/gp_iwatc.c base/watcw32.mak base/wccommon.mak]</p>
</blockquote>

<p><strong><a name="2010-10-01T025815.408387Z"></a>
2010-10-01T02:58:15.408387Z Alex Cherepanov</strong></p>
<blockquote>
<pre>
Replace sequential CFF parser coded in PostScript with a parser that uses
direct access to the data and coded in C. Solve numerous problems caused by
the old parser. New -dOLDCFF option can revert to the old parser. Differences
in 16-01.PS.pdf and 16-01.PS.pdf are progressions. 
	</pre>
<p>[doc/Use.htm psi/int.mak psi/zfont1.c psi/zfont2.c Resource/Init/gs_cff.ps]</p>
</blockquote>

<p><strong><a name="2010-09-29T155022.840688Z"></a>
2010-09-29T15:50:22.840688Z Ray Johnston</strong></p>
<blockquote>
<pre>
Fix calculation of offset to tag plane in pdf14_mark_fill_rectangle to cure
writing past the end of an allocated buffer. Detected with customer 532 on
fts_08_0808.pdf. Only affects devices with object tagging (bitrgbtags).
</pre>
<p>[base/gdevp14.c]</p>
</blockquote>

<p><strong><a name="2010-09-28T123641.051799Z"></a>
2010-09-28T12:36:41.051799Z Ken Sharp</strong></p>
<blockquote>
<pre>
Fix (pdfwrite) : Don't unreasonably limit the PDF output level

Bug #691318 &quot; -dCompatibilityLevel=1.6 produces PDF 1.5&quot;

Although the highest output level for pdfwrite features is 1.5, it is possible to use
pdfmarks to create a PDF file which uses higher level features. In this case its 
reasonable to have pdfwrite produce a higher level PDF file. 

This patch allows pdfwrite to produce output up to PDF 1.7, the highest currently
specified.

No differences expected.
</pre>
<p>[base/gdevpdfp.c]</p>
</blockquote>

<p><strong><a name="2010-09-28T122613.182021Z"></a>
2010-09-28T12:26:13.182021Z Ken Sharp</strong></p>
<blockquote>
<pre>
Fix (pdfwrite) : allow for UserPasword and OwnerPassword in page device

Bug #691256 &quot;OwnerPassword and UserPassword don't work as device parameters&quot;

pdfwrite sets up encryption filters when the device is opened, and the device is not
(currently) closed until Ghostscript shuts down. This means that changes to the page 
device dictionary which require a restart (eg the encryption parameters) do not affect
the current setup, though they may be (incorrectly) written when the device is closed.

This patch addresses the specific issue of OwnerPassword by closing the device if the
password is changed *and* we have not yet written any pages. If we have already begun
the output when a password change occurs then we ignore it and flag a warning.

This is also a first step in the direction of making pdfwrite open and close properly
so that we don't need to restart Ghostscript to use it.

No expected differences.
</pre>
<p>[base/gdevpdfp.c]</p>
</blockquote>

<p><strong><a name="2010-09-27T120517.449032Z"></a>
2010-09-27T12:05:17.449032Z Ken Sharp</strong></p>
<blockquote>
<pre>
Fix (Fonts): Prevent xfont being used in composefont

On platforms supporting X-Windows xfonts can be used with Ghostscript, however we don't
want to find an xfont (eg Courier) when using composefont to create a CID-Keyed instance
as this will not work.

Test to see if the top level font is a type 0, and if it is, don't search for a matching
xfont, but instead go through the usual PostScript machinery.

No differences expected.
</pre>
<p>[base/gxchar.c]</p>
</blockquote>

<p><strong><a name="2010-09-27T093355.410495Z"></a>
2010-09-27T09:33:55.410495Z Ken Sharp</strong></p>
<blockquote>
<pre>
Fix (pdfwrite/ps2write) : Don't dereference mask colour spaces

Bug #691106 &quot;-sDEVICE=pdfwrite -dConvertCMYKImagesToRGB=true&quot;

When checking to see if an image needs to be converted to RGB, the image space is
checked to see if it is CMYK. However an image mask does not have a colour space (it
is NULL), firstly so that we can tell its an image mask, and secondly because masks
genuinely do not have a colour space, they take on the current colour.

Attempting to dereference the NULL colour space causes a crash. Since a mask never
needs converting to RGB, we short circuit the test by detecting a NULL colour space.

</pre>
<p>[base/gdevpsdi.c]</p>
</blockquote>

<p><strong><a name="2010-09-25T020822.451780Z"></a>
2010-09-25T02:08:22.451780Z Alex Cherepanov</strong></p>
<blockquote>
<pre>
For long time ps2pdf*.bat files failed when they were used with some
options and a single argument. findstr is now used to identify
options by the leading '-' and handle this case. Bug 691622.
</pre>
<p>[lib/ps2pdf.bat lib/ps2pdf12.bat lib/ps2pdf13.bat lib/ps2pdf14.bat]</p>
</blockquote>

<p><strong><a name="2010-09-24T132507.243032Z"></a>
2010-09-24T13:25:07.243032Z Chris Liddell</strong></p>
<blockquote>
<pre>
For disk based TTFs, only lookup the character code in the TTF cmap if the font is
not using an Identity ordering.

No cluster differences expected.

Bug 691623.

</pre>
<p>[psi/zfapi.c]</p>
</blockquote>

<p><strong><a name="2010-09-24T090334.206583Z"></a>
2010-09-24T09:03:34.206583Z Ken Sharp</strong></p>
<blockquote>
<pre>
Fix (TrueType fonts) : memory leak

Bug #691088 This does not affect the PostScript/PDF interpreters which now use FreeType
but is relevant still for XPS and PCL.

A buffer was allocated to contain the GSUB table from the TT font, but was never freed
leading to memory leaks. I've adopted the same approach as that taken for the 'glyph
length' array and added a notification procedure which is called when the font is 
released, and that procedure frees the GSUB buffer.

At the same time, removed the functions:
add_quadratic_curve
append_simple
check_component

These were only called by each other, or by append_component which had already been
removed as unused.

No expected differences.
</pre>
<p>[base/gstype42.c]</p>
</blockquote>

<p><strong><a name="2010-09-24T032745.689228Z"></a>
2010-09-24T03:27:45.689228Z Michael Vrhel</strong></p>
<blockquote>
<pre>
Removal of debug code that was accidentally committed.</pre>
<p>[base/gdevp14.c]</p>
</blockquote>

<p><strong><a name="2010-09-23T194527.249371Z"></a>
2010-09-23T19:45:27.249371Z Michael Vrhel</strong></p>
<blockquote>
<pre>
Fix so that objects tag information makes it through transparency rendering AND the clist.  An issue was that the pdf14 encode and decode procedures are used as opposed to the target device encode and decode procedures and it is through a value in the color index that we currently communicate the object type through the clist.  When we are in page rendering mode, it is easy to get the current object from mem-&gt;gs_lib_ctx-&gt;BITTAG, but this is not set correctly in clist rendering if for example a glyph is stored in the clist as a mask fill.  Instead the information about the object is extracted from the color index.  So, to make this work, we had to introduce an encode method for the pdf14 device that incorporates the tag information and also make sure that the bit depth for the pdf14 color info value is incremented appropriately so that the extra byte is stored and extracted from the clist.  The object type is then recovered during the pdf14 mark fill rect procedure.  This was tested with the updated bitrgbtags device using a custom file that has overlapping text, image and path objects with varying transparency amounts.   </pre>
<p>[base/gdevp14.c base/gsimage.c base/gsutil.h base/gstext.c base/gsdps1.c base/gdevbit.c base/gdevmem.c base/gxblend1.c base/gspaint.c base/gdevddrw.c base/gsutil.c base/gxclrast.c base/gxblend.h]</p>
</blockquote>

<p><strong><a name="2010-09-23T144650.766627Z"></a>
2010-09-23T14:46:50.766627Z Robin Watts</strong></p>
<blockquote>
<pre>
Final part of the fix for bug 691612.

Currently the code blindly sets the &quot;lop_pdf14&quot; whenever the pdf14 device is
in use. This forces the 'lop_is_idempotent' test to fail, which in turn forces
slower cases to be taken through the code.

This patch alters that logic, so that the pdf14 device can leave that bit
unset if the parameters are set up in such a way that the lop really can
be idempotent (i.e. normal blending, solid alphas etc).

This vastly improves the speed of rendering non-alpha content, so we are no
longer penalised for having just a small amount of transparent content on a
page.

Testing shows 398 files that change, but bmpcmp reveals these all to be very
small changes to do with whether individual pixels are filled or not. This
is consistent with the typical mismatches between special case and normal
renderings, so can safely be ignored for now.


</pre>
<p>[base/gdevp14.c]</p>
</blockquote>

<p><strong><a name="2010-09-23T121757.296649Z"></a>
2010-09-23T12:17:57.296649Z Robin Watts</strong></p>
<blockquote>
<pre>
As part of the investigation into bug 691612, we noticed that the clist
band playback code doesn't call the device stroke_path method, but instead
calls the default implementation directly.

In order the fix the bug, we'd like it to call through the device version
(pdf14_stroke_path). Consensus is that it's an oversight that it's not calling
the device version already, and tests indicate no differences (*) so this
patch changes it to call via the vector.

(* Actually regression testing shows 2 pdfwrite differences, but they are
in unbanded tests, so can't be executing this code, so are probably just
indeterminisms).

</pre>
<p>[base/gxclrast.c]</p>
</blockquote>

<p><strong><a name="2010-09-23T104633.821569Z"></a>
2010-09-23T10:46:33.821569Z Robin Watts</strong></p>
<blockquote>
<pre>
As part of the investigation into bug 691612, a problem was found with the
rop3_is_idempotent (and hence lop_is_idempotent) macros. This patch fixes
this definition and adds some more comments explaining the rop operations.

Thanks to lpd for confirming this change.

This produces 78 differences in the regression tests, bmpcmp reveals these to
all be neutral or progressions (in some cases, significant progressions).


</pre>
<p>[base/gsropt.h]</p>
</blockquote>

<p><strong><a name="2010-09-23T081636.207911Z"></a>
2010-09-23T08:16:36.207911Z Ken Sharp</strong></p>
<blockquote>
<pre>
Fix (pdfwrite) : Do not write Encodings with Symbolic TrueType fonts

Bug #690744, #691036, #691319. The PDF specification makes it clear that Symbolic
TrueType fonts should not have a FontDescriptor which contains an Encoding entry.
pdfwrite has specifically been doing this, the reason being (code comments) :

	 * We write True Types with Symbolic flag set.
	 * PDF spec says that &quot;symbolic font should not specify Encoding entry&quot;
	 * (see section 5.5, the article &quot;Encodings for True Type fonts&quot;, paragraph 3).
	 * However Acrobat Reader 4,5,6 fail when TT font with no Encoding
	 * appears in a document together with a CID font with a non-standard CMap
	 * (AR 4 and 5 claim &quot;The encoding (CMap) specified by a font is corrupted.&quot;
	 * (we read it as &quot;The encoding or CMap specified by a font is corrupted.&quot;,
	 * and apply the 1st alternative)). We believe that AR is buggy, 
	 * and therefore we write an Encoding with non-CID True Type fonts.
	 * Hopely other viewers can ignore Encoding in such case. Actually in this case 
	 * an Encoding doesn't add an useful information.

Since this is working around a bug in old versions of Acrobat, and the presence of an
Encoding causes preflight errors and is specifically forbidden in PDF/A, this work
around has been removed. I would like to check recent versions of Acrobat to see if 
this issue persists, but am unable to find an example file. The change predates the
adoption of Subversion, the first logged change is October 2003.

</pre>
<p>[base/gdevpdtt.c]</p>
</blockquote>

<p><strong><a name="2010-09-22T151320.906048Z"></a>
2010-09-22T15:13:20.906048Z Marcos H. Woehrmann</strong></p>
<blockquote>
<pre>
Removed unused label from base/gxicolor.c that caused compiler warning.

Fixes Bug #691633 reported by Norbert Janssen.

</pre>
<p>[base/gxicolor.c]</p>
</blockquote>

<p><strong><a name="2010-09-21T120352.655546Z"></a>
2010-09-21T12:03:52.655546Z Chris Liddell</strong></p>
<blockquote>
<pre>
Add the new entries for produce outlines and maximum bitmap size
to the FAPI server declarations in the UFST and Bitstream code.

No cluster differences expected.

Bug 691634

</pre>
<p>[psi/fapiufst.c psi/fapibstm.c]</p>
</blockquote>

<p><strong><a name="2010-09-20T012614.070109Z"></a>
2010-09-20T01:26:14.070109Z Alex Cherepanov</strong></p>
<blockquote>
<pre>
Fix end-of-file detection in reusable streams. Don't try to read non-existing
blocks after the last one. Just return EOF flag and the data that are already
in the buffer. Bug 691625.
</pre>
<p>[psi/zfrsd.c]</p>
</blockquote>

<p><strong><a name="2010-09-17T102936.728794Z"></a>
2010-09-17T10:29:36.728794Z Robin Watts</strong></p>
<blockquote>
<pre>
In revision 11723 I'd copied a prototype, but forgotten to edit the name.
(bytes_copy_rectangle to bytes_copy_rectangle_zero_padding).
This was resulting in a couple of warnings about 'no previous prototype'.

No expected differences.

</pre>
<p>[base/gsbitops.h]</p>
</blockquote>

<p><strong><a name="2010-09-17T064427.206613Z"></a>
2010-09-17T06:44:27.206613Z Michael Vrhel</strong></p>
<blockquote>
<pre>
Removal of unused variable introduced in last commit.</pre>
<p>[base/gdevp14.c]</p>
</blockquote>

<p><strong><a name="2010-09-17T054048.428712Z"></a>
2010-09-17T05:40:48.428712Z Michael Vrhel</strong></p>
<blockquote>
<pre>
Addition of support to enable persistence of objects tag information through transparency rendering.    In the current code base, transparency blending erases all knowledge about the objects that were drawn and blended, setting the entire object to image type.   With this commit, the tag information is retained through blending by doing a bit-wise or of the tag values.  When a device supports tags, the pdf14 device will create an additional plane to maintain the tag data information.  Blending of the tag information occurs in pdf14_mark_fill_rectangle, pdf14_mark_fill_rectangle_ko_simple and pdf14_compose_group.   A new device procedure called put_image is added.  This is called by the pdf14_put_image operation, which enables the communication of the tag information to the target device.  pdf14_put_image will first attempt to pass the alpha channel and the image data not scaled by the alpha channel and the tag data to the target device.  The planar offset location of the alpha and tag data is communicated in the put_image procedure interface.  If the target device cannot handle this form of the data, it should return 0.  The pdf14_put_image operation will then blend the alpha data and attempt the put_image again but this time with an alpha offset of 0 to indicate that there is no alpha data.  Note that the alpha data remains valid for those devices that still want the alpha but also want to have the graphics library do a premultiplcation of the alpha with the data.  Details of this interface will be added to the documentation.  In addition, the bitrgbtags device is being updated to demonstrate the use of the put_image procedure.</pre>
<p>[base/gdevp14.c base/gxdevcli.h base/gxclist.c base/gdevp14.h base/gdevbbox.c cups/gdevcups.c base/gsovrc.c base/gxblend.c base/gxblend1.c base/gdevprn.c base/gsutil.c base/gxblend.h]</p>
</blockquote>

<p><strong><a name="2010-09-16T145706.777148Z"></a>
2010-09-16T14:57:06.777148Z Alex Cherepanov</strong></p>
<blockquote>
<pre>
Fix a problem introduced by the rev. 11497 that broke ps2pdf*.bat scripts
when they receive optional arguments. The bug results from interaction between
&quot;shift&quot; and %~dp0 that is used after the &quot;shift&quot;. 
</pre>
<p>[lib/ps2pdf.bat lib/ps2pdf12.bat lib/ps2pdf13.bat lib/ps2pdf14.bat]</p>
</blockquote>

<p><strong><a name="2010-09-16T110931.082242Z"></a>
2010-09-16T11:09:31.082242Z Robin Watts</strong></p>
<blockquote>
<pre>
Another partial fix for Bug 690993. The sole remaining Valgrind warning
is that memcpy is called on overlapping src/dst blocks in cmd_read_data.

Investigation supports this, and suggests that we should be using memmove
instead. This does stop the error, and leaves us valgrind warning free.

This also appears to resolve the indeterminism, in that repeated runs
of the command line given in the bug return identical results.

The bug remains open though, as there is still a mismatch between banded and
non-banded mode.

No expected differences.

</pre>
<p>[base/gxclrast.c]</p>
</blockquote>

<p><strong><a name="2010-09-16T110547.689000Z"></a>
2010-09-16T11:05:47.689000Z Robin Watts</strong></p>
<blockquote>
<pre>
Partial 'fix' for Bug 690993. When encoding a bitmap into a clist, we
copy it into a block with potentially larger padding requirements. These
extra padding bytes were left undefined, causing subsequent attempts to
compress the bitmap to cause valgrind to give warnings.

The fix is simply to introduce and use a new function that copies a bitmap
and zeros the padding. This should eliminate the warnings, produce better
compression, and (more importantly) mean that every run uses the same amount
of memory, hence eliminating potential odd effects where clists may be of
different lengths on different runs.

This still leaves bug 690993 open.

No expected differences.

</pre>
<p>[base/gsbitops.c base/gsbitops.h base/gxclbits.c]</p>
</blockquote>

<p><strong><a name="2010-09-15T081552.075230Z"></a>
2010-09-15T08:15:52.075230Z Ken Sharp</strong></p>
<blockquote>
<pre>
Fix (ps2write) : Bug #689419 &quot;Text missing if nested BT with opdfread.ps&quot;

Type 3 fonts which select another font and then draw text from it (a common feature of
Quark Xpress) can result in nested 'BT' operators when processed by ps2write.

The opdfread prologue does not cater for this, specifically the TextMatrix is not saved
and restored around a BT/ET pair. If the text matrix is altered by the font
selection, then the 'ET' will not restore the old matrix leading to incorrectly sized or
disappearing text.

The patch (supplied by SaGS) saves the TextMatrix in a stack (stored in an array) and
restores the matrix after an ET, in case it is nested. Currently this allows for 
nesting up to 20 deep, which should be more than adequate. Note that if we were to 
encounter a nested BT with no ET this would still fail, but in this case the file 
produced by ps2write would be invalid, and the missing ET should be fixed.

No differences expected, the regression suite doesn't test ps2write.
</pre>
<p>[Resource/Init/opdfread.ps]</p>
</blockquote>

<p><strong><a name="2010-09-14T125809.089527Z"></a>
2010-09-14T12:58:09.089527Z Ken Sharp</strong></p>
<blockquote>
<pre>
Fix (pdfwrite) : Don't colour convert SMask images

Bug #690612 &quot;PDF sRGB conversion loses images&quot;

The handling of SMask images in pdfwrite is a bit convoluted. These are handled by 
converting initially to a DevicePixel colour space, then detecting that later and
replacing with a DeviceGray space. However, after doing so, if ColorConversionStrategy
was set, the space (and image samples) would be converted to another colour space. This
is not legal for SMask images.

This code simply checks to see if the image is an SMask before setting colour conversion
and doesn't convert the colour space/samples if it is and SMask.

No expected differences.
</pre>
<p>[base/gdevpdfi.c]</p>
</blockquote>

<p><strong><a name="2010-09-14T090706.998296Z"></a>
2010-09-14T09:07:06.998296Z Ken Sharp</strong></p>
<blockquote>
<pre>
Fix a compiler warning.</pre>
<p>[base/gdevpdfo.c]</p>
</blockquote>

<p><strong><a name="2010-09-14T080603.949247Z"></a>
2010-09-14T08:06:03.949247Z Ken Sharp</strong></p>
<blockquote>
<pre>
pdfwrite enhancement : performance improvement with type 3 fonts

Bug #690575 &quot;PS to PDF Conversion extremely slow (possibly endless)&quot;

The type 3 font code assembles CharProcs for type 3 fonts by writing them individually 
into a 'cos_stream'. Each time a new one is completed it is compared to all the existing
CharProcs to see if it is a duplicate. This was done by fseek/fread/memcmp operations.

As the number of CharProcs increases, the time spent seeking, reading and comparing
the data increases dramatically and performance becomes very poor. Not only that, but
the test is actually done twice for each new CharProc.

This patch tackles the problem by creating an md5 hash of the data written to a 
cos_write_stream (a subclassed cos_stream) as it is written. The cos_stream 'equal'
routine checks to see if the md5 hash is valid and if it is then compares the hashes.
If the md5 hash is not valid (ie not a cos_write_stream) then it uses the old 
seek/read/compare mechanism. This will improve the performance of any stored data
if it is stored using a cos_write_stream and compared against other data of the same 
type. (I don't believe we do this anywhere else currently, but I'm not suer)

This does improve the performance significantly, and the code no longer spends most of
its time waiting for I/O operations to complete. It is still slow, but this is the 
result of using lots of type 3 fonts. Because of the way these must be processed in 
order to capture the outlines they are never going to be fast.

In my test this runs 2-3 times faster than before. There should be no differences in
output from the old code.
</pre>
<p>[base/gdevpdfo.c base/gdevpdfo.h]</p>
</blockquote>

<p><strong><a name="2010-09-14T074911.816447Z"></a>
2010-09-14T07:49:11.816447Z Chris Liddell</strong></p>
<blockquote>
<pre>
Bump version number to 9.01 and associated changes.

</pre>
<p>[base/gscdef.c base/version.mak Resource/Init/gs_init.ps]</p>
</blockquote>



<h2><a name="Version9.00"></a>Version 9.00 (2010-09-14)</h2>

<p>This is the first release in the stable 9.x series.

<p>This release includes a move to an ICC-based color rendering workflow. The
design allows easy integration of 3rd party color management modules (CMMs)
and management of DeviceN and spot source colors with ICC profiles as well
as with non-ICC proprietary methods. The default CMM is the well known littleCMS.
Postscript color objects and non-ICC CIE-based PDF color spaces are converted to
equivalent ICC profiles enabling complete color management for all color spaces by
an ICC-based CMM. New command line options enable the specification of gray, rgb
and cmyk default ICC profiles as well as output device ICC profiles. The new
work flow provides performance improvements in the rendering of images, shadings
and transparencies. In addition, the color conversions are designed to work
efficiently in multithreaded display list (c-list) rendering through the use of a
shared link cache. Finally, proper ICC based rendering now occurs for ALL XPS
objects including Named colors, N-Channel colors and images with internally embedded
ICC profiles.
 
<p>The second major change in this release is that glyph rendering for all font types
except Type 3 is now handled by Freetype (via a much improved and enhanced Font API).
The most obvious benefit of this is a complete, and proven implementation of the 
TrueType byte code interpreter (now unencumbered by patents).

<p> Another major change is that the Postscript interpreter's graphics state now
stores two separate colour space settings for stroking and filling, to better
support the stroke and fill colours required by the PDF interpreter.

<p>Finally, support for optional content has been added to the PDF interpreter.

<p> This release also includes a number of improvements to the pdfwrite device
to improve reliability and quality with PCL and XPS input. Many improvements to
the support of JPX images in PDF files, PDF annotation rendering and the usual
number of general bug and robustness fixes. 

<p>For security reasons, Ghostscript no longer searches the current directory
by default. Use -P option to revert to old behavior.

<p>For a list of open issues, or to report problems,
please visit <a href="http://bugs.ghostscript.com/">bugs.ghostscript.com</a>.



<h3><a name="9.00_Incompatible_changes"></a>Incompatible changes</h3>

<p>
No recorded incompatible changes.

<h3><a name="9.00_changelog"></a>Changelog</h3>

<p><strong><a name="2010-09-13T150940.310889Z"></a>
2010-09-13T15:09:40.310889Z Chris Liddell</strong></p>
<blockquote>
<pre>
Commit the missing header changes from the previous checkin.
</pre>
<p>[psi/ifapi.h]</p>
</blockquote>

<p><strong><a name="2010-09-13T145346.788657Z"></a>
2010-09-13T14:53:46.788657Z Chris Liddell</strong></p>
<blockquote>
<pre>
Another revision of the FAPI code. Due to a problem in Freetype which needs
further investigation, we cannot produce an outline, then decide to produce
a bitmap if it is small enough. We work around this by producing a bitmap,
and if it is too large, dispose of it, and retry with an outline, thus although
we still risk larger than ideal memory use, it is very short lived. A glyph
too large to be cached (for which we will now usually use an outline) does
not suffer from the Freetype issue mentioned above.

The maximum allowable bit for Freetype to produce is now 1.5 x the maximum
cache bitmap as set in the Postscript state - it is set larger than the
cache bitmap since it is *vital* that if GS expects a bitmap to be cache
we supply a bitmap. Given that the bounding boxes arrived at the GS cache
device and the Freetype rendering code arrived at slightly differently, there
would be the chance of edge cases where FAPI would produce an outline, when
the cache expects a bitmap. Allowing FAPI plenty of leeway avoids that.

The calculation to convert a quadratic to a cubic spline in the
Freetype interface code was slightly wrong.

Also, FAPI now sets the fill adjust to 0 for filling outline glyph, instead
of inhereting the value from the originating graphics state, which gives
*much* more consistent output between the bitmap and outline cases, and
addresses the slightly excessive boldness observed for outline glyphs since
the adoption of Freetype/FAPI as the default font scaler/renderer.

Finally, support for the existing Ghostscrit text anti-aliasing
capability is improved.

Bug 691604 

</pre>
<p>[psi/fapi_ft.c psi/zfapi.c psi/fapiufst.c psi/fapibstm.c]</p>
</blockquote>

<p><strong><a name="2010-09-13T102534.372202Z"></a>
2010-09-13T10:25:34.372202Z Chris Liddell</strong></p>
<blockquote>
<pre>
Revert revisions 11690 and later from the FAPI code (and revert version no. to 9.00)
to get a &quot;good&quot; base version, in preparation for a corrected version of the changes
in 11690 (and subsequent changes in the FAPI code).

</pre>
<p>[psi/fapi_ft.c psi/zfapi.c base/version.mak Resource/Init/gs_init.ps psi/ifapi.h psi/fapiufst.c psi/fapibstm.c]</p>
</blockquote>

<p><strong><a name="2010-09-09T135148.502020Z"></a>
2010-09-09T13:51:48.502020Z Alex Cherepanov</strong></p>
<blockquote>
<pre>
Fix a case where /Width attribute was not checked for null.
Bug 691602, customer 700.
</pre>
<p>[Resource/Init/pdf_font.ps]</p>
</blockquote>

<p><strong><a name="2010-09-09T072652.042155Z"></a>
2010-09-09T07:26:52.042155Z Chris Liddell</strong></p>
<blockquote>
<pre>
Fix broken version number in gs_init.ps in trunk
</pre>
<p>[Resource/Init/gs_init.ps]</p>
</blockquote>


<p><strong><a name="2010-09-09T062654.427296Z"></a>
2010-09-09T06:26:54.427296Z Chris Liddell</strong></p>
<blockquote>
<pre>
Add a couple of &quot;.0&quot;s to ensure we get floating point division
to arrive at intermediate values for the conic to cubic
spline conversion.

</pre>
<p>[psi/fapi_ft.c]</p>
</blockquote>

<p><strong><a name="2010-09-09T034512.738999Z"></a>
2010-09-09T03:45:12.738999Z Michael Vrhel</strong></p>
<blockquote>
<pre>
Fix for compiler complaint from commit of rev 11700</pre>
<p>[base/gdevpdfb.c base/devs.mak]</p>
</blockquote>

<p><strong><a name="2010-09-08T232036.969829Z"></a>
2010-09-08T23:20:36.969829Z Michael Vrhel</strong></p>
<blockquote>
<pre>
Fix to enable proper mask filling with patterns that have transparency.  Major change is in gdevp14.c where begin_type_image and mask_fill procedures now will (if we are filling with a pattern that has transparency) push a transparency group.  When we are finished processing the image, the group is popped which enables proper blending.  There remains an issue with a special file that Ken created when it is run in c-list mode.  A new bug will be opened for this issue.  Thanks to Ray for helping with this project and finding a bounding box issue in the creation of the transparency group during c-list reading.</pre>
<p>[base/gdevp14.c base/gxclimag.c base/gsptype1.c base/lib.mak base/gxpcmap.c base/gdevpdfb.c base/gsptype1.h base/gstrans.c base/gxpcolor.h base/gxblend1.c base/gxp1fill.c base/gxp1impl.h base/gdevpdfi.c]</p>
</blockquote>

<p><strong><a name="2010-09-08T162242.112334Z"></a>
2010-09-08T16:22:42.112334Z Ken Sharp</strong></p>
<blockquote>
<pre>
Fix (pdfwrite) : incorrect pattern matrix calculation

Bug #690504 &quot;ps2write does not work with asymmetric resolutions, like 600x1200dpi &quot;

The problem was caused by frankly totally incorrect calculations when generating the 
/Matrix for a pattern. Because we always see the CTM including the resolution scaling
but need to output a matrix with this removed, we scale the CTM by the inverse of the
resolution scaling.

But the calculation simply divided the CTM through by the scale factors, which is
totally incorrect and fails badly if the matrix involves rotation. The code now
correctly creates and multiplies a scale matrix. Note, the order of multiplication is
important here.

No differences expected.
</pre>
<p>[base/gdevpdfv.c]</p>
</blockquote>

<p><strong><a name="2010-09-08T083015.885002Z"></a>
2010-09-08T08:30:15.885002Z Chris Liddell</strong></p>
<blockquote>
<pre>
Slight refinement in the how the FAPI character generation detects we are
producing anti-aliased glyphs.

Also, it seems that when assigning variable value to a second, larger data
type, whilst gcc promotes the data type before the assignment, MSVC promotes
the variable later, so shifting a 32 bit integer up during an assignment to
a 64 bit integer variable works find on gcc, but MSVC loses the most
significant bits. So we need to force the promotion to happen with a cast.

Bug 691588

</pre>
<p>[psi/fapi_ft.c psi/zfapi.c]</p>
</blockquote>

<p><strong><a name="2010-09-07T165136.404533Z"></a>
2010-09-07T16:51:36.404533Z Chris Liddell</strong></p>
<blockquote>
<pre>
Add a further header to ifapi.h required for Unix/Linux builds, and
add the two additional headers to ifapi.h's dependencies.

</pre>
<p>[psi/ifapi.h psi/int.mak]</p>
</blockquote>

<p><strong><a name="2010-09-07T162646.989782Z"></a>
2010-09-07T16:26:46.989782Z Chris Liddell</strong></p>
<blockquote>
<pre>
Pull in gp.h in ifapi.h for the int64_t type - it seems to be required on Windows.</pre>
<p>[psi/ifapi.h]</p>
</blockquote>

<p><strong><a name="2010-09-07T153217.143998Z"></a>
2010-09-07T15:32:17.143998Z Chris Liddell</strong></p>
<blockquote>
<pre>
Some fairly substantial changes to the FAPI code to get very high resolutions and
anti-aliased text working reliably.

For AA text, we now make *sure* to produce outlines for non-cached glyphs, thus
the GS path code can anti-alias correctly (for cached glyphs, the &quot;show&quot; machinery
does the anti-aliasing from the cache bitmap).

The high res problems were highlighted by the bbox device (which runs at 4000 dpi).
To resolve these the width and height parameters for Freetype had to have value
overflow compensation added, to match the existing underflow compensation.

FAPI/Freetype also now will only create a glyph bitmap if the bitmap size is smaller
than the allowable glyph cache bitmap. It may still produce a bitmap for a non-cached
glyph, if the cache is full, but the individual glyph bitmap is not larger than the
allowable glyph item - this is allow for better consistency when we're near the limit
of the total cache size.

Finally, the FAPI outline retrieval code now requires 32.32 fixed point variables (rather
than the previous 16.16), which prevents overflow, and improves accuracy. If also provides
us with the opportunity to check for overflow/underflow of the GS internal fixed point
variables, before calling the GS path code.

There are quite a few cluster changes. I have checked them all, and one is a progression
(missing glyphs now render) and the rest are the pixel level differences expected by
having GS render a path, rather than Freetype - most are due to Freetype grid fitting to
the glyph bitmap, and GS grid fitting to the page raster.

Bug 691592 - bbox issue
Bug 691588 - anti-aliasing
	



</pre>
<p>[psi/fapi_ft.c psi/zfapi.c psi/ifapi.h psi/fapiufst.c psi/fapibstm.c]</p>
</blockquote>

<p><strong><a name="2010-09-06T101425.582663Z"></a>
2010-09-06T10:14:25.582663Z Ken Sharp</strong></p>
<blockquote>
<pre>
Fix (pdfwrite) : string not being re-encoded

Bug #690441 &quot; Files render properly with gs, but are misformatted by ps2pdf&quot;

A Coverity fix in revision 9072 prevented a crash, but also circumvented code that was
essential to run under some conditions. (This is described by comments in the code as a
'trick'). The routine created a text string with the encoded text for a font with a
custom encoding derived from a CIDFont with an unusual CMap.

In order to avoid the potential crash, but still re-encode the string, which is
essential, the relevant portion of the code has been copied and is exercised instead of
executing 'pdf_reserve_char_code_in_pdfont()'. This produces the reencoded string we
need, but if the encoding fails, where we would have caused a crash by dereferencing a
NULL pointer, we instead return an error.

No differences expected, we obviously don't have a test case in the regression suite.
</pre>
<p>[base/gdevpdtt.c]</p>
</blockquote>

<p><strong><a name="2010-09-03T154954.010009Z"></a>
2010-09-03T15:49:54.010009Z Ray Johnston</strong></p>
<blockquote>
<pre>
Fix for hang condition in the stream logic for the luratech JPXDecode.
We need to return EOFC with the final bit of data. Found with PDF 1.7 FTS.
</pre>
<p>[base/sjpx_luratech.c]</p>
</blockquote>

<p><strong><a name="2010-09-03T083132.767708Z"></a>
2010-09-03T08:31:32.767708Z Chris Liddell</strong></p>
<blockquote>
<pre>
A Type 0 font dictionary in a PDF which contained a spurious FontDescriptor
object confused the interpreter, which resulted in creating a Font resource
directly, rather than instantiating the DescendantFonts for the Type 0.

We'll now remove the spurious entry from the Type 0 dictionary, to prevent
any on-going confusion.

No cluster differences expected.

Bug 691589

</pre>
<p>[Resource/Init/pdf_font.ps]</p>
</blockquote>

<p><strong><a name="2010-09-03T072106.059509Z"></a>
2010-09-03T07:21:06.059509Z Ken Sharp</strong></p>
<blockquote>
<pre>
typo, misplaced quote in revision 11684
</pre>
<p>[lib/lpgs.bat]</p>
</blockquote>

<p><strong><a name="2010-09-03T071933.619992Z"></a>
2010-09-03T07:19:33.619992Z Ken Sharp</strong></p>
<blockquote>
<pre>
Typo, misplaced quote in revision 11684
</pre>
<p>[lib/pdfopt.bat]</p>
</blockquote>

<p><strong><a name="2010-09-03T065244.087509Z"></a>
2010-09-03T06:52:44.087509Z Ken Sharp</strong></p>
<blockquote>
<pre>
More Windows batch file madness. 

Guard all path expansion with quotes, since the Windows command shell processor is too
stupid to do so, even when expanding variables/arguments itself.

Add a trailing separator to the %TEMP% variable before specifying the filename, as
apparently some setups don't get a trailing separator by default. A paired separator
(ie \\) doesn't seem to cause a problem so this ought to be safe even if the setup
does have a trailing separator.

</pre>
<p>[lib/pf2afm.bat lib/gsdj500.bat lib/ps2ascii.bat lib/ps2pdfxx.bat lib/lpr2.bat lib/gsndt.bat lib/gstt.bat lib/eps2eps.bat lib/pdf2dsc.bat lib/gsbj.bat lib/ps2epsi.bat lib/gsdj.bat lib/dumphint.bat lib/ps2ps2.bat lib/gsnd.bat lib/font2c.bat lib/pdfopt.bat lib/gst.bat lib/pdf2ps.bat lib/ps2pdf.bat lib/gslj.bat lib/bdftops.bat lib/pfbtopfa.bat lib/ps2pdf12.bat lib/ps2pdf13.bat lib/ps2pdf14.bat lib/lpgs.bat lib/gslp.bat lib/ps2ps.bat lib/pftogsf.bat]</p>
</blockquote>

<p><strong><a name="2010-09-02T155750.419060Z"></a>
2010-09-02T15:57:50.419060Z Ken Sharp</strong></p>
<blockquote>
<pre>
Remove a couple of duplicated font names form the embedding white list, and reduce the
list length #define appropriately.</pre>
<p>[base/whitelst.c]</p>
</blockquote>

<p><strong><a name="2010-09-02T141539.116953Z"></a>
2010-09-02T14:15:39.116953Z Ken Sharp</strong></p>
<blockquote>
<pre>
Include the header file purely to get the prototype for the function, otherwise gcc
complains.
</pre>
<p>[base/whitelst.c]</p>
</blockquote>

<p><strong><a name="2010-09-02T135013.043694Z"></a>
2010-09-02T13:50:13.043694Z Ken Sharp</strong></p>
<blockquote>
<pre>
pdfwrite enhancement

The addition of code to test and honour the 'embedding flags' in TrueType fonts has
led to problems because PostScript producers are embedding type 42 fonts in the
PostScript which are non-embeddable and worse use a custom non-reversible encoding,
so that the  resulting PDF file has garbage text when a normally encoded font is used
as a replacement.

It seems that Adobe has published a 'white list' of fonts which have been granted
at least some embeddable rights. It isn't obvious if these are fonts which were type
1 (and therefore could be converted to TrueType and get incorrect embedding rights) or
if the fonts were originally released as TrueType with the wrong embedding rights.

In any event, this list has now been added to pdfwrite; if a font is encountered which
has restricted embedding, then its name will be checked against this list, if it is
found in the list then it will be considered as embeddable. We have already 
encountered one font on this list which has a slightly different name to the original
(a space was removed) so spaces in the font names are ignored. 

This list will have to change over time, and we may find other examples of characters
which we want to handle specially (eg oumlaut treated as o and e)

No differences expected as this is not tested in the current regression suite.
</pre>
<p>[base/whitelst.c base/gdevpdtf.c base/devs.mak base/whitelst.h]</p>
</blockquote>

<p><strong><a name="2010-09-01T184752.658366Z"></a>
2010-09-01T18:47:52.658366Z Chris Liddell</strong></p>
<blockquote>
<pre>
Update the release notes, dates etc for a second 9.00 release candidate
</pre>
<p>[doc/History7.htm doc/Projects.htm doc/History8.htm doc/History9.htm man/dvipdf.1 man/ps2ascii.1 doc/Use.htm doc/Readme.htm doc/Source.htm doc/Deprecated.htm man/ps2epsi.1 doc/Install.htm doc/API.htm doc/Issues.htm doc/DLL.htm doc/Drivers.htm man/pfbtopfa.1 doc/Release.htm doc/Commprod.htm doc/Xfonts.htm doc/Devices.htm doc/Language.htm man/gs.1 man/pf2afm.1 doc/Ps2ps2.htm doc/Fonts.htm man/printafm.1 doc/Ps2pdf.htm doc/Develop.htm doc/Helpers.htm man/pdf2dsc.1 doc/Psfiles.htm doc/Lib.htm doc/gs-vms.hlp man/font2c.1 man/gsnd.1 base/version.mak man/pdfopt.1 man/pdf2ps.1 man/ps2pdf.1 doc/Make.htm doc/Details8.htm doc/Details9.htm doc/Unix-lpr.htm doc/C-style.htm doc/Ps-style.htm doc/History1.htm doc/History2.htm man/gslp.1 man/wftopfa.1 doc/History3.htm man/ps2ps.1 doc/Ps2epsi.htm doc/History4.htm man/ps2pdfwr.1 doc/History5.htm doc/History6.htm]</p>
</blockquote>

<p><strong><a name="2010-09-01T174918.515475Z"></a>
2010-09-01T17:49:18.515475Z Chris Liddell</strong></p>
<blockquote>
<pre>
Update the release notes for the second 9.00 release candidate.
</pre>
<p>[doc/History9.htm doc/News.htm doc/Details9.htm doc/Details.htm]</p>
</blockquote>

<p><strong><a name="2010-09-01T135934.488373Z"></a>
2010-09-01T13:59:34.488373Z Ken Sharp</strong></p>
<blockquote>
<pre>
Silence some compiler warnings. 

Altered a static function to 'void' from 'int' as it returns no values and the callers
don't test any putative return value.

#ifdef a boolean declaration, as the code which uses it has been #ifdef'ed

Add some parameters to two functions, so that they match the prototypes, the 
parameters are not used in these functions.

</pre>
<p>[base/gdevpdfk.c base/gdevpdfc.c]</p>
</blockquote>

<p><strong><a name="2010-09-01T060851.456140Z"></a>
2010-09-01T06:08:51.456140Z Michael Vrhel</strong></p>
<blockquote>
<pre>
Fix to avoid issues with subtractive monochrome devices when we have transparency.  The gray device pdf14 prototype is used in this case.  VERY limited testing indicates that this fixes a crash with the cups device with its default settings and gives proper rendering.  More complete testing is required to ensure that proper blending is being performed and to investigate the other process color models that the cups device supports (e.g. cmy).  </pre>
<p>[base/gdevp14.c]</p>
</blockquote>

<p><strong><a name="2010-08-31T232115.562664Z"></a>
2010-08-31T23:21:15.562664Z Michael Vrhel</strong></p>
<blockquote>
<pre>
Revert back to having pdfwrite handle what to do with PS color spaces instead of using the V4 profile that gsicc_create generates.  Also, fix a few issues that existed with pdfwrites handling of those spaces, in particular adjustments are made for non D50 white points.  D50 is the required white point for the ICC profile.  About 189 pdfwrite test files will report differences.  I went through them with bmpcmp.    Since the profiles that were generated differ between gsicc_create and pdfwrite minor color differences exist.  In addition, there were some regressions that existed, which this revision will fix.  </pre>
<p>[psi/zcolor.c base/gdevpdfk.c psi/zimage.c base/gdevpdfc.c base/gsciemap.c]</p>
</blockquote>

<p><strong><a name="2010-08-31T153427.935572Z"></a>
2010-08-31T15:34:27.935572Z Ken Sharp</strong></p>
<blockquote>
<pre>
Fix (pdfwrite) : linewidth corruption when Tr is 1

Bug #690436 &quot; (regression) re-distilling pdf causes R graphics to go block-single-color.&quot;

The problem was cause din the pdfwrite-specific text rendering routines. When the text
render mode is 1 (stroke), the linewidth is adjusted by the current text matrix. However
the routine to do this is called each time any element of the text 'graphics state'
changes. So if multiple calls to (eg) Td were made, the linewidth would be altered
even though there had been no change in 'w'.

Fixed by getting the current linewidth before the text rendering routine, and setting
it back to this value after the text rendering routine.

No expected differences. However z400454b01d4-1.pdf seems to exhibit some minor
differences which I am unable to reproduce locally. They are so minor that bmpcmp
ignores them, and on my tests the PDF files are identical bar the date/time stamps
and other metadata. I don't believe this is a real difference.
</pre>
<p>[Resource/Init/pdf_ops.ps]</p>
</blockquote>

<p><strong><a name="2010-08-28T220455.196791Z"></a>
2010-08-28T22:04:55.196791Z Alex Cherepanov</strong></p>
<blockquote>
<pre>
Implement rendering of /Highlight annotation. Acrobat always uses transparency
and ignores appearance streams. Bug 691572, customer 532.

Progressions or minor differences (when the annotation has an appearance
stream) are observed in annots.pdf, CATX1385.pdf, CATX6166.pdf, CATX6508.pdf,
CATX7659.pdf, CATX8255.pdf, IA3Z4030.pdf, fts_32_3225.pdf
</pre>
<p>[Resource/Init/pdf_main.ps Resource/Init/pdf_draw.ps]</p>
</blockquote>

<p><strong><a name="2010-08-27T135414.847396Z"></a>
2010-08-27T13:54:14.847396Z Ken Sharp</strong></p>
<blockquote>
<pre>
Fix (pdfwrite) : faulty matrix transformations for Pattern dictionaries

Bug #690398 &quot;Geometric issue with pattern&quot;
The problem is the definition of the default co-ordinate space. When a Pattern is at the
page level or drawn inside a form, we need to remove our 0.1 scaling in order to return
to the 'default co-ordinate space'. However, when painted on a form nested inside a
form, the default co-ordinate space is the parent form, so we don't need to undo
the scaling. 

This is the same problem addressed for shading dictionaries in revision 11347.

</pre>
<p>[base/gdevpdfv.c]</p>
</blockquote>

<p><strong><a name="2010-08-27T121054.938774Z"></a>
2010-08-27T12:10:54.938774Z Ken Sharp</strong></p>
<blockquote>
<pre>
Fix (pdfwrite) : FormDepth not tracked properly.

Part of the fix for Bug#690398. In order to know whether a pattern matrix should be
converted to the top level CTM, or to an enclosing Form CTM, we track the Form Depth
by noting when transparency groups begin and end (currently this is the only way to get
a form output by pdfwrite).

There was a problem with mask groups, because although pdf_begin_transparency_mask calls
pdf_begin_transparency_group, pdf_end_transparency_mask doe snot call
pdf_end_transparency_group. This resulted in the depth being incremented at the start
of the mask, but not decremented at the end, so patterns could be emitted at the page
level but with the CTM for a Form level, leading to missing content.

Fixed by decrementing the FormDepth appropriately.
 
</pre>
<p>[base/gdevpdft.c]</p>
</blockquote>

<p><strong><a name="2010-08-27T120246.764612Z"></a>
2010-08-27T12:02:46.764612Z regression</strong></p>
<blockquote>
<pre>
Added the ability to specify which regression test files will only be
run during nightly regression testing (i.e. not for commit regression
tests).  To skip files add them, one per line, to the nightly_only.lst
file in the corresponding directory (creating this file if none exists).
See tests_private/customer_tests/nightly_only.lst for an example.

</pre>
<p>[toolbin/localcluster/clustermaster.pl toolbin/localcluster/readlog.pl toolbin/localcluster/build.pl toolbin/localcluster/run.pl toolbin/localcluster/compare.pl]</p>
</blockquote>

<p><strong><a name="2010-08-26T233428.641761Z"></a>
2010-08-26T23:34:28.641761Z Alex Cherepanov</strong></p>
<blockquote>
<pre>
Implement rendering of /Squiggly annotation without an appearance stream.
Bug 691572, customer 532.
</pre>
<p>[Resource/Init/pdf_draw.ps]</p>
</blockquote>

<p><strong><a name="2010-08-26T154951.752958Z"></a>
2010-08-26T15:49:51.752958Z Ken Sharp</strong></p>
<blockquote>
<pre>
Remove an unused local variable (gcc compiler warning)

No differences expected
</pre>
<p>[base/gdevpdf.c]</p>
</blockquote>

<p><strong><a name="2010-08-24T213729.611143Z"></a>
2010-08-24T21:37:29.611143Z Chris Liddell</strong></p>
<blockquote>
<pre>
Merge a couple of corrections from the 9.00 tag.
</pre>
<p>[doc doc/History9.htm doc/News.htm doc/Details9.htm]</p>
</blockquote>

<p><strong><a name="2010-08-24T203140.602213Z"></a>
2010-08-24T20:31:40.602213Z Chris Liddell</strong></p>
<blockquote>
<pre>
Merge doc changes from 9.00 and bump version number to 9.01
</pre>
<p>[doc/Projects.htm man/dvipdf.1 man/ps2ascii.1 doc/Use.htm man/ps2epsi.1 doc/DLL.htm doc/Drivers.htm doc/Release.htm man/gs.1 doc/Ps2pdf.htm man/printafm.1 psi/psromfs.mak psi/dxmain.c toolbin/tests/check_dirs.py doc/Helpers.htm psi/dxmainc.c man/gsnd.1 man/pdfopt.1 base/version.mak Resource/Init/gs_init.ps man/ps2pdf.1 man/pdf2ps.1 doc/News.htm doc/Details8.htm doc/Make.htm doc/Unix-lpr.htm doc/Details9.htm doc/History1.htm doc/History2.htm man/wftopfa.1 doc/History3.htm doc/History4.htm doc/Details.htm man/ps2ps.1 doc/History5.htm doc/History6.htm doc/History7.htm doc/History8.htm doc/History9.htm doc/Readme.htm doc/Source.htm doc/Deprecated.htm /trunk/gs doc/Install.htm doc/Changes.htm doc/API.htm doc/Issues.htm man/pfbtopfa.1 doc/Commprod.htm doc/Xfonts.htm doc/Devices.htm doc/Language.htm psi/dmmain.c doc/Fonts.htm doc/Ps2ps2.htm man/pf2afm.1 doc/Develop.htm man/pdf2dsc.1 psi/dmmain.r doc/Psfiles.htm doc/Lib.htm doc/gs-vms.hlp man/font2c.1 doc/C-style.htm doc/Ps-style.htm man/gslp.1 doc/Ps2epsi.htm man/ps2pdfwr.1]</p>
</blockquote>

<p><strong><a name="2010-08-24T134629.931715Z"></a>
2010-08-24T13:46:29.931715Z Ken Sharp</strong></p>
<blockquote>
<pre>
Enhancement - Font copying (pdfwrite)

Bug #691573 &quot; invalidfont in xshow&quot;. The file does in fact contain an invalidfont, the
type 42 embedded fonts are defined by adding /.notdef to the CharStrings dictionary as 
if it were the Encoding array. The key /.notdef is added 256 times with values ranging
from 0 to 255. Of course only the last one is actually defined.

This means that when we come to copy the /.notdef glyph for our font copy, the type 42
GID is 255. However the font does not contain a glyph with GID 255, so the copy of the
font fails.

Although this is an illegal font, Adobe Acrobat Distiller does produce a PDF file from
it. In order to duplicate this, code has been added when copying a font. If we fail to
copy a glyph, and the glyph is /.notdef and the GID is non-zero, we try to copy a glyph
with GID 0 instead. If that fails we error out, otherwise we use the glyph with GID 0.
(TrueType font /.notdef glyph has GID 0)

This works for the supplied file but is not, of course, a guaranteed solution since 
another badly formed font may not contain a glyph with GID 0.

No Expected Differences
</pre>
<p>[base/gxfcopy.c]</p>
</blockquote>

<p><strong><a name="2010-08-24T122959.958275Z"></a>
2010-08-24T12:29:59.958275Z Chris Liddell</strong></p>
<blockquote>
<pre>
In preparation for the release, add my username to real name mapping
in AUTHORS, add an initially empty History9.htm, and update News.htm
to point to it.

</pre>
<p>[doc/History9.htm doc/News.htm doc/AUTHORS]</p>
</blockquote>

<p><strong><a name="2010-08-23T164947.032287Z"></a>
2010-08-23T16:49:47.032287Z Ken Sharp</strong></p>
<blockquote>
<pre>
Fix (pdfwrite) : errors in XMP metadata parsing

Bug #691562 &quot;ERROR -15 closing pdfwrite device&quot;.

This use of a DOCINFO pdfmark exposed 3 separate bugs in pdfwrite's handling of XMP
metadata.

1) Decoding an escaped PostScript string. Unescaped characters and octal escapes worked
correctly, but non-octal escapes moved the index into the string one place too many.

2) The escape '\b' (backspace) wasn't handled and returned incorrect data. Although not
tested by this issue, the form feed (\f) also wasn't handled.

3) When converting UTF16 data to UTF-8, the end of the destination (UTF-8) buffer was
calculated incorrectly, causing a spurious buffer overrun error.

The code now handles the missing escapes, does not advance the character position after
decoding a non-octal escape and correctly defines the end of buffer. After this the
Title string displays the same in Acrobat as the same pdfmark sent through Adobe
Distiller.

No expected differences as this only affects the document metadata.
</pre>
<p>[base/gdevpdfe.c]</p>
</blockquote>

<p><strong><a name="2010-08-21T080346.086781Z"></a>
2010-08-21T08:03:46.086781Z Lars Uebernickel</strong></p>
<blockquote>
<pre>
Remove unnecessary version checks for libtiff in configure.ac.

Since the local copy is preferred over the system's (see r11635), comparing the
version of the two libraries is unnecessary.

</pre>
<p>[base/configure.ac]</p>
</blockquote>

<p><strong><a name="2010-08-20T160722.239869Z"></a>
2010-08-20T16:07:22.239869Z Chris Liddell</strong></p>
<blockquote>
<pre>
When we produce a glyph uncached, and it's to be filled with a
pattern colour space *and* there is PDF transparency involved
force FAPI to (try to) produce an outline (for lower level
code to use as a clip) instead of a bitmap (to use as a
mask).

This does produce some pixel level differences in a few
cluster files, but improves a load of PDF 1.7 FTS jobs.

Bug 691550

</pre>
<p>[psi/zfapi.c]</p>
</blockquote>

<p><strong><a name="2010-08-19T040105.188148Z"></a>
2010-08-19T04:01:05.188148Z henrys</strong></p>
<blockquote>
<pre>
Fix bug #691564.  The assignment of the target device did not use the
proper reference counting assignment procedure resulting in a lost
reference to the target device.
</pre>
<p>[base/gxpcmap.c]</p>
</blockquote>


<p><strong><a name="2010-08-17T143158.354019Z"></a>
2010-08-17T14:31:58.354019Z Alex Cherepanov</strong></p>
<blockquote>
<pre>
Skip opacity and unknown components during reading of JPX image data. This
improves image quality (compared to the previous state that interpreted an
opacity channel as yet another data sample) and serves as a transition to full
support of opacity in JPX images. Bug 691489, customer 532.
</pre>
<p>[base/sjpx.h psi/zfjpx.c base/sjpx.c]</p>
</blockquote>

<p><strong><a name="2010-08-17T012218.729560Z"></a>
2010-08-17T01:22:18.729560Z Alex Cherepanov</strong></p>
<blockquote>
<pre>
Don't include opacity channels in the number-of-components count.
Recognize general ICC profile (type 3) and construct a corresponding
ICC-based color space. Bug 691470, customer 532.
</pre>
<p>[Resource/Init/pdf_draw.ps]</p>
</blockquote>

<p><strong><a name="2010-08-15T094903.044306Z"></a>
2010-08-15T09:49:03.044306Z Chris Liddell</strong></p>
<blockquote>
<pre>
Ensure we only check the compatibility of the system libtiff
if we're actually going to use it.

No cluster differences expected.

Bug 691548
</pre>
<p>[base/configure.ac]</p>
</blockquote>

<p><strong><a name="2010-08-15T094221.565047Z"></a>
2010-08-15T09:42:21.565047Z Chris Liddell</strong></p>
<blockquote>
<pre>
The &quot;shortcut&quot; for rendering masks use by the FAPI code for uncached
glyph bitmaps (gx_image_fill_masked) is only safe, in the general case
when drawing &quot;plain&quot; colours to the output. For complex colour spaces
(like patterns) we must use the &quot;long hand&quot; version.

This causes minor pixel level differences in some cluster tests (due
to rounding differences), and some (very small) progressions: there
are differences in about 20 cluster jobs.

Bug 691549.

</pre>
<p>[psi/zfapi.c]</p>
</blockquote>

<p><strong><a name="2010-08-14T211029.198491Z"></a>
2010-08-14T21:10:29.198491Z Alex Cherepanov</strong></p>
<blockquote>
<pre>
Fix a memory corruption problem introduced by the rev. 11588 on some systems.
Free the string returned by systempapername() but don't free the static string
returned by defaultpapername() . Bug 691557.
</pre>
<p>[base/gp_upapr.c]</p>
</blockquote>

<p><strong><a name="2010-08-13T194628.340691Z"></a>
2010-08-13T19:46:28.340691Z Ken Sharp</strong></p>
<blockquote>
<pre>
Fix (pdfwrite( : Invalid compression filter emitted.

Bug #691556 &quot;Images compressed with the RunLengthDecode filter are invalid&quot; A typo in
gdevpdfx.h caused the /Filter entry of an image dictionary to be written with a 
trailing comma if the filter was RunLength.

No differences expected
</pre>
<p>[base/gdevpdfx.h]</p>
</blockquote>

<p><strong><a name="2010-08-12T181430.164084Z"></a>
2010-08-12T18:14:30.164084Z Till Kamppeter</strong></p>
<blockquote>
<pre>
pstoraster: Removed unneeded &quot;-dDEBUG&quot; from Ghostscript command line.
</pre>
<p>[cups/pstoraster.in]</p>
</blockquote>

<p><strong><a name="2010-08-12T181047.335830Z"></a>
2010-08-12T18:10:47.335830Z Till Kamppeter</strong></p>
<blockquote>
<pre>
CUPS Raster output device: Do verbose degug logging only if compiled in debug mode. Bug 690581.

</pre>
<p>[cups/gdevcups.c]</p>
</blockquote>

<p><strong><a name="2010-08-12T063908.575092Z"></a>
2010-08-12T06:39:08.575092Z regression</strong></p>
<blockquote>
<pre>
Added support for regression testing of the cups device.
</pre>
<p>[toolbin/localcluster/clustermaster.pl toolbin/localcluster/build.pl toolbin/localcluster/run.pl]</p>
</blockquote>

<p><strong><a name="2010-08-12T025540.283339Z"></a>
2010-08-12T02:55:40.283339Z Michael Vrhel</strong></p>
<blockquote>
<pre>
Fix to handle case where the profiledir is NOT set AND there is a change in the process color model for the device AFTER a profile had already been set.  </pre>
<p>[base/gsicc_manage.c]</p>
</blockquote>

<p><strong><a name="2010-08-12T014217.270497Z"></a>
2010-08-12T01:42:17.270497Z Alex Cherepanov</strong></p>
<blockquote>
<pre>
Implement variable text rendering for widget annotations.
Bug 691536, customer 532.
</pre>
<p>[Resource/Init/pdf_main.ps Resource/Init/pdf_draw.ps]</p>
</blockquote>

<p><strong><a name="2010-08-11T233148.385487Z"></a>
2010-08-11T23:31:48.385487Z Michael Vrhel</strong></p>
<blockquote>
<pre>
Fix for indeterminism issue that was introduced with changes in 16bit image handling.  Last subpixel element was not getting unpacked properly.  </pre>
<p>[base/gxi16bit.c]</p>
</blockquote>

<p><strong><a name="2010-08-11T230548.288399Z"></a>
2010-08-11T23:05:48.288399Z Michael Vrhel</strong></p>
<blockquote>
<pre>
Another compiler complaint fix.  Proper cast of device.</pre>
<p>[base/gdevpsdi.c]</p>
</blockquote>

<p><strong><a name="2010-08-11T213103.877037Z"></a>
2010-08-11T21:31:03.877037Z Michael Vrhel</strong></p>
<blockquote>
<pre>
Fix for compiler error due to implicit declaration</pre>
<p>[base/gdevpsdi.c base/devs.mak]</p>
</blockquote>

<p><strong><a name="2010-08-11T185451.837319Z"></a>
2010-08-11T18:54:51.837319Z Michael Vrhel</strong></p>
<blockquote>
<pre>
Fix so that if the device process color model changes the profile is updated accordingly.</pre>
<p>[base/gsicc_manage.c]</p>
</blockquote>

<p><strong><a name="2010-08-11T161745.421152Z"></a>
2010-08-11T16:17:45.421152Z Henry Stiles</strong></p>
<blockquote>
<pre>
Fix bug # 691532.  Do not attempt to clone an image that does not exist, each completed page should have an associated image.  We'd like to handle this corrupt file with a better fix, for example the absence of an end page segement is clearly a problem with respect to the specification, but Adobe and Artifex have chosen to support other &quot;off spec&quot; streams so more subtle and less obvious error checking is needed.  Thanks to Tim Waugh for analysis on this problem.
</pre>
<p>[jbig2dec/jbig2_page.c]</p>
</blockquote>

<p><strong><a name="2010-08-11T152222.427529Z"></a>
2010-08-11T15:22:22.427529Z Ken Sharp</strong></p>
<blockquote>
<pre>
Add some words about the ps2write device to the devices documentation.
</pre>
<p>[doc/Devices.htm]</p>
</blockquote>

<p><strong><a name="2010-08-10T164420.491267Z"></a>
2010-08-10T16:44:20.491267Z regression</strong></p>
<blockquote>
<pre>

Several minor changes to the cluster regression system, the most
signifcant of which are:

seg. faults are now reported for every case (previously they were only
reported if they were new)

skip.lst files are now checked for errors

changes to gs/psi now test the pcl/pxl/xps products since changes to
Ghostscript can affect the pdfwrite path

the tests_private/pdf/PDF_1.7_FTS repository was added


</pre>
<p>[toolbin/localcluster/clustermonitor.pl toolbin/localcluster/clustermaster.pl toolbin/localcluster/readlog.pl toolbin/localcluster/build.pl toolbin/localcluster/run.pl toolbin/localcluster/compare.pl]</p>
</blockquote>

<p><strong><a name="2010-08-10T162019.775613Z"></a>
2010-08-10T16:20:19.775613Z Michael Vrhel</strong></p>
<blockquote>
<pre>
Commit to move the ICC profile for the device within the device structure.  This will make it easier to handle dynamic changes that may occur to the process color model for the device.  Also a move of device profiles into non gc memory and removal of any references to profiles to the GC.    A few progressions occur with this commit including Bug689918.pdf testpage.pdf. </pre>
<p>[base/gxi12bit.c base/gsdevice.c base/gdevpdfk.c base/gxpcmap.c base/gxdevice.h /trunk/ghostpdl/xps/xpsgradient.c base/gdevprn.c base/gdevpsdi.c base/gscsepr.c base/gscpixel.c base/gxcmap.c base/gdevbit.c base/gxclip.c base/gxicolor.c base/gximag3x.c base/gscspace.c base/gsicc.c base/gscdevn.c base/gscolor2.c base/lib.mak base/gxiscale.c base/gsicc_manage.c base/gxcspace.h base/gscicach.c base/gdevnfwd.c base/gxdevcli.h base/gdevp14.c psi/zdevice.c base/gsicc_create.c base/gsicc_cache.c base/gdevp14.h base/gsicc_cache.h base/gxccman.c base/gscms.h base/gxclist.h psi/zusparam.c base/gxshade.c base/gxblend.c base/gsequivc.c base/gsciemap.c]</p>
</blockquote>

<p><strong><a name="2010-08-10T091550.312005Z"></a>
2010-08-10T09:15:50.312005Z Ken Sharp</strong></p>
<blockquote>
<pre>
Enhancement : pdfwrite

performance enhancement for pdfwrite when handling files with large amounts of text.

Bug #689859 &quot;Performance comparison versions 7.07 and 8.62 on HP-UX ia64&quot; Alex's
analysis shows that pdfwrite was spending a lot of time trying to to see if two type 1
fonts were the same before deciding whether a glyph could be added to a font, or was 
already present in a font copy.

Most of the time was spent extracting and comparing /Subrs. The new code creates a hash
(MD5) of both the local and global Subrs (if present) and stores that in the type 1
'data' field in the font (16 bytes). The hashes are created by pdfwrite only as they 
are required, so there is no performance penalty for rendering. The hash comparison is
considerably quicker than the long winded Subrs comparison.

For many files the performance difference is minimal but for file containing lots of
pages, mostly composed of text, there is a considerable saving. The text files run in
about 60% of the time they did before this change.

</pre>
<p>[base/gxfont1.h base/gxfcopy.c psi/zfont1.c]</p>
</blockquote>

<p><strong><a name="2010-08-10T081335.250205Z"></a>
2010-08-10T08:13:35.250205Z Chris Liddell</strong></p>
<blockquote>
<pre>
A small revision to the fix for Bug 691326: the glyphs array must have
at least one entry.

No cluster differences expected.

Bug 691343
</pre>
<p>[Resource/Init/gs_ttf.ps]</p>
</blockquote>

<p><strong><a name="2010-08-09T004131.173587Z"></a>
2010-08-09T00:41:31.173587Z Ray Johnston</strong></p>
<blockquote>
<pre>
Free the pattern-clist devices that are created (and left for the GC to
free) when pattern-clist patterns are used with a device that is using the
clist for the page. Those that were allocated during the print_page clist
playback would be those that leaked. Since the devices were closed, this
could lead to GC referencing objects that were invalid. Related to, but
not the final fix to Bug 691527.
</pre>
<p>[base/gxpcmap.c]</p>
</blockquote>

<p><strong><a name="2010-08-09T000727.505245Z"></a>
2010-08-09T00:07:27.505245Z Alex Cherepanov</strong></p>
<blockquote>
<pre>
Remove spurious &quot;cvx&quot; operators after .pushextendedgstate and
.popextendedgstate . Do .popextendedgstate after checking that &quot;Q&quot;
has a correspondingh &quot;q&quot;. Bug 691538.
</pre>
<p>[Resource/Init/pdf_ops.ps]</p>
</blockquote>

<p><strong><a name="2010-08-07T155808.066501Z"></a>
2010-08-07T15:58:08.066501Z Alex Cherepanov</strong></p>
<blockquote>
<pre>
Implement rendering of Widget annotation border background specified by
/BC and /BG entries of the appearance characteristics dictionary /MK.
Bug 691524, customer 532.
</pre>
<p>[Resource/Init/pdf_draw.ps]</p>
</blockquote>

<p><strong><a name="2010-08-06T202111.891509Z"></a>
2010-08-06T20:21:11.891509Z Ray Johnston</strong></p>
<blockquote>
<pre>
Fix segfault seen with fts_17_1704.pdf when the clist playback of patterns
that had been stored as clists were attempted to be read from the clist
as bitmaps. This happened when -dMaxPatternBitmap=1000000 was used which
is smaller than the default, confusing a HACK that attempted to force
the use of the pattern-clist mode. Also remove some #if 0 idle code.
</pre>
<p>[base/gsptype1.c base/gxpcmap.c base/gxcolor2.h]</p>
</blockquote>

<p><strong><a name="2010-08-06T172216.521958Z"></a>
2010-08-06T17:22:16.521958Z Chris Liddell</strong></p>
<blockquote>
<pre>
I missed a couple of now unused variables in the previous commit.
</pre>
<p>[psi/iname.c]</p>
</blockquote>

<p><strong><a name="2010-08-06T154921.355481Z"></a>
2010-08-06T15:49:21.355481Z Ray Johnston</strong></p>
<blockquote>
<pre>
Add documentation on -dMaxPatternBitmap=# parameter in the 'Improving
Performance' section of the Use.htm file. The actual parameter was
added in rev 11605.
</pre>
<p>[doc/Use.htm]</p>
</blockquote>

<p><strong><a name="2010-08-06T150300.994141Z"></a>
2010-08-06T15:03:00.994141Z Chris Liddell</strong></p>
<blockquote>
<pre>
Prevent doing a gc &quot;unmark&quot; on memory already (potentially)
freed.

Relates to Bug 691380. I could not reproduce the seg fault
as reported, but valgrind reported the write to freed memory
in the same place as the reported seg fault.

</pre>
<p>[psi/iname.c]</p>
</blockquote>

<p><strong><a name="2010-08-06T111522.616992Z"></a>
2010-08-06T11:15:22.616992Z Ken Sharp</strong></p>
<blockquote>
<pre>
Fix pdfwrite
There is a hack in type 3 font creation in pdfwrite which increases the FontMatrix if
all the elements are very small, apparently Acrobat is unable to cope with very small 
FontMatrix entries.

However, if all the entries are 0, it ends up running round a loop multiplying by 10
indefinitely. This change simply avoids the loop if all the matrix elements are 0.
Naturally this isn't a useful font, its a Quality Logic test file.

</pre>
<p>[base/gdevpdtt.c]</p>
</blockquote>

<p><strong><a name="2010-08-06T111140.511965Z"></a>
2010-08-06T11:11:40.511965Z Ken Sharp</strong></p>
<blockquote>
<pre>
Revision 11600 introduced a sever regression with text in XPS files. This revision
addresses that by only applying the fix to preserve glyph data when the text operation
is TEXT_FROM_SINGLE_GLYPH as this is the only case where the affected union is a glyph
not a pointer to a series of glyphs, and is therefore the only case which is affected.

Expected Differences: All XPS files with text should again work correctly.
</pre>
<p>[base/gdevpdte.c]</p>
</blockquote>

<p><strong><a name="2010-08-06T082720.529691Z"></a>
2010-08-06T08:27:20.529691Z Chris Liddell</strong></p>
<blockquote>
<pre>
Revise some of the FAPI related information.

</pre>
<p>[doc/Use.htm doc/Make.htm doc/Develop.htm doc/Psfiles.htm]</p>
</blockquote>

<p><strong><a name="2010-08-06T055342.503244Z"></a>
2010-08-06T05:53:42.503244Z Alex Cherepanov</strong></p>
<blockquote>
<pre>
Implement rendering of standard Stamp and Text annotations. Ghostscript uses
different font than Acrobat in Stamp icons and uses the same icon for the Text
annotation regardless of the /Name attribute. Bug 691525, customer 532.
</pre>
<p>[Resource/Init/pdf_draw.ps]</p>
</blockquote>

<p><strong><a name="2010-08-06T042459.663647Z"></a>
2010-08-06T04:24:59.663647Z Ray Johnston</strong></p>
<blockquote>
<pre>
Add a new paramter MaxPatternBitmap with a default value of 8Mb. Formerly
the pattern_clist mode would be used when the bitmap size exceeded 1Mb
and prior to rev 11___ this calculation was flawed and could allow pattern
bitmaps as large as 64Mb to avoid the pattern_clist mode. While the clist
based pattern tiling is slow, setting the threshold to 8Mb should be rare
enough to minimize performance impact. Bug 691512.
</pre>
<p>[base/gsdevice.c base/gdevp14.c base/gxdevcli.h base/gsdparam.c base/gxpcmap.c base/gxdevice.h base/gdevbit.c]</p>
</blockquote>

<p><strong><a name="2010-08-05T232612.261846Z"></a>
2010-08-05T23:26:12.261846Z Till Kamppeter</strong></p>
<blockquote>
<pre>
CUPS Raster output device: Segmentation fault on mid-job changes of the color depth.

This patch prevents the crash by forcing a memory reallocation on
color depth changes. The approach principally works but we did not
decide yet whether it is the final solution, as Michael Vrhel is still
doing major changes in the color handling. Bug 690435.

</pre>
<p>[cups/gdevcups.c]</p>
</blockquote>

<p><strong><a name="2010-08-05T191611.698734Z"></a>
2010-08-05T19:16:11.698734Z Ray Johnston</strong></p>
<blockquote>
<pre>
Fix comment about no support for BITS=4
</pre>
<p>[lib/viewrgb.ps]</p>
</blockquote>

<p><strong><a name="2010-08-05T191400.403158Z"></a>
2010-08-05T19:14:00.403158Z Ray Johnston</strong></p>
<blockquote>
<pre>
Minor correction to usage string left over from when this was split out
from setupgs.
</pre>
<p>[psi/mkfilelt.cpp]</p>
</blockquote>

<p><strong><a name="2010-08-05T174036.908437Z"></a>
2010-08-05T17:40:36.908437Z Chris Liddell</strong></p>
<blockquote>
<pre>
The &quot;show&quot; machinery expected that even non-marking text operations
(such as stringwidth) would result in a glyph bitmap which
could be cached (assuming the glyph would be a candidate for the
cache with a normal marking operation, like show).

FAPI, however, did not create a glyph bitmap for non-marking
operations, thus the cache would receive a valid, but
&quot;empty&quot; glyph. This caused Postscript that used stringwidth
before a show to sometimes &quot;lose&quot; glyphs, by using the empty
cached glyph.

FAPI's behaviour now matches the expectations of the show/cache
management code.

Causes cluster differences in Bug688372.ps, fts_31_3111.pdf, and
14-08.PS, these are all progressions.

Bug 691517

</pre>
<p>[psi/fapi_ft.c psi/zfapi.c]</p>
</blockquote>

<p><strong><a name="2010-08-05T154939.430735Z"></a>
2010-08-05T15:49:39.430735Z Ken Sharp</strong></p>
<blockquote>
<pre>
Fix (pdfwrite) 
A piece of data (pointer to glyph data) was stored and passed into a routine
'process_text_modify_width' which expected the glyph data to remain unchanged but
modified the text enumerator data. This doesn't work if the glyph data is a pointer
to the text enumerator data. NB the text enumerator is saved and restored around the
call.

Modified so that the calling routine makes a copy of the glyph data before calling 
'process_text_modify_width'.

This should prevent 13-10.ps from entering an infinite loop.
</pre>
<p>[base/gdevpdte.c]</p>
</blockquote>

<p><strong><a name="2010-08-04T231524.779084Z"></a>
2010-08-04T23:15:24.779084Z Robin Watts</strong></p>
<blockquote>
<pre>
Fix for Bug 691504 (gs taking a long time to render a file).

Revision 8694 changes code from using a simple cast to an int to using
a call to (int)floor. This fixes problems, but costs a factor of 3 in
processing time for heavily tiled files.

Here we change to using a macro version of floor instead. This removes
the function call and NaN handling overheads and returns us to the
same kind of performance as we had before.

We apply the same change throughout the file (i.e. all the calls to (int)floor,
not just the two changed in r8694.

There is still scope for optimising this code further, but this closes the
regression.

No differences seen in local cluster testing.

</pre>
<p>[base/gxp1fill.c]</p>
</blockquote>

<p><strong><a name="2010-08-04T225904.842835Z"></a>
2010-08-04T22:59:04.842835Z Alex Cherepanov</strong></p>
<blockquote>
<pre>
Implement rendering of Underline and StrikeOut annotations without
appearance streams. Bug 691526, customer 532.
</pre>
<p>[Resource/Init/pdf_draw.ps]</p>
</blockquote>

<p><strong><a name="2010-08-03T120247.197684Z"></a>
2010-08-03T12:02:47.197684Z Ken Sharp</strong></p>
<blockquote>
<pre>
Fix : FAPI (no bug number, discovered working on a different problem)

Another place where the FAPI code assumes that a text enumerator is a show_enum and 
casts it as such. While this is true for rendering, it is not the case when capturing
glyphs for pdfwrite.

Altered the code to test if the enumerator is a show_enum and if not, to get the
graphics state from the enumerator 'pis' pointer instead if possible. Signal an error
if this is not possible.

No differences expected.
</pre>
<p>[psi/zfapi.c]</p>
</blockquote>

<p><strong><a name="2010-08-03T080213.862491Z"></a>
2010-08-03T08:02:13.862491Z Ken Sharp</strong></p>
<blockquote>
<pre>
Enhancement : PDF interpreter. Bug #691503

When creating an outline (/OUT pdfmark), especially for the pdfwrite device, check the 
destination page to see that it lies between FirstPage and LastPage; if it does not, then
don't emit it. This is an extension to the existing control which checked that the 
destination page wasn't greater than the number of pages in the PDF file.</pre>
<p>[Resource/Init/pdf_main.ps]</p>
</blockquote>

<p><strong><a name="2010-08-03T075650.987568Z"></a>
2010-08-03T07:56:50.987568Z Ken Sharp</strong></p>
<blockquote>
<pre>
In the section 'Using Unicode True Type fonts', replace the example CSI array with one
whose values are strings, not names. These must be string values.
</pre>
<p>[doc/Use.htm]</p>
</blockquote>

<p><strong><a name="2010-08-02T213029.939498Z"></a>
2010-08-02T21:30:29.939498Z Alex Cherepanov</strong></p>
<blockquote>
<pre>
Partly revert rev. 11392 that over-simplified the check for a valid obj line
in the PDF file. Use --search-- to reject impossible cases but revert to the
old logic to verify the results. Bug 691502.
</pre>
<p>[Resource/Init/pdf_rbld.ps]</p>
</blockquote>

<p><strong><a name="2010-08-02T164500.756282Z"></a>
2010-08-02T16:45:00.756282Z Alex Cherepanov</strong></p>
<blockquote>
<pre>
Fix a compiler warning about a missing prototype for free()
caused by my previous commit.
</pre>
<p>[base/lib.mak base/gp_upapr.c]</p>
</blockquote>

<p><strong><a name="2010-08-02T134903.975996Z"></a>
2010-08-02T13:49:03.975996Z Alex Cherepanov</strong></p>
<blockquote>
<pre>
Fix a memory leak. Free the paper name string allocated amd 
returned by libpaper.
</pre>
<p>[base/gp_upapr.c]</p>
</blockquote>

<p><strong><a name="2010-08-02T092004.666066Z"></a>
2010-08-02T09:20:04.666066Z Ken Sharp</strong></p>
<blockquote>
<pre>
Missing ';' in r11586 replaced. Should build now.</pre>
<p>[base/gdevpdfx.h]</p>
</blockquote>

<p><strong><a name="2010-08-02T090647.523074Z"></a>
2010-08-02T09:06:47.523074Z Ken Sharp</strong></p>
<blockquote>
<pre>
Fix a few minor compiler warnings from gcc. No differences expected.
</pre>
<p>[base/gdevpdfx.h base/gdevpdf.c]</p>
</blockquote>

<p><strong><a name="2010-08-02T063925.229115Z"></a>
2010-08-02T06:39:25.229115Z Till Kamppeter</strong></p>
<blockquote>
<pre>
Applied patch to fix &quot;imagen&quot; output device (bug 690561).
</pre>
<p>[base/gdevimgn.c]</p>
</blockquote>

<p><strong><a name="2010-08-01T085915.942136Z"></a>
2010-08-01T08:59:15.942136Z Chris Liddell</strong></p>
<blockquote>
<pre>
Remove the now redundant --disable-cairo directives.

</pre>
<p>[toolbin/localcluster/readme toolbin/localcluster/run.pl]</p>
</blockquote>

<p><strong><a name="2010-07-31T160737.431496Z"></a>
2010-07-31T16:07:37.431496Z Chris Liddell</strong></p>
<blockquote>
<pre>
Remove the &quot;dead&quot; devcairo device.

No cluster differences expected.

Bug 690009

</pre>
<p>[ghostscript.vcproj base/configure.ac base/gdevcairo.c base/devs.mak]</p>
</blockquote>

<p><strong><a name="2010-07-31T154539.194094Z"></a>
2010-07-31T15:45:39.194094Z Chris Liddell</strong></p>
<blockquote>
<pre>
Reapply r11570

Copying converted samples to the output raster used the byte
length of the input raster, rather than the byte length of 
the converted data. Change to use the correct length.

Bug 691494 - credit to SaGS for the patch.

</pre>
<p>[base/gdevdbit.c]</p>
</blockquote>

<p><strong><a name="2010-07-31T150424.124204Z"></a>
2010-07-31T15:04:24.124204Z Till Kamppeter</strong></p>
<blockquote>
<pre>
No need to install Resources and iccprofiles if COMPILE_INITS=1

When COMPILE_INITS=1, the mentioned directories are not used and just waste
disk space and also confusing. Bug 689253.

</pre>
<p>[base/unixinst.mak]</p>
</blockquote>

<p><strong><a name="2010-07-31T003707.940018Z"></a>
2010-07-31T00:37:07.940018Z Ray Johnston</strong></p>
<blockquote>
<pre>
Fix the calculation of the size of the pattern bitmap by correcting the
calculation of the effective depth (bits per pixel). PaintType 2 is the
uncolored (mask == 1 bit per pixel) mode, PaintType 1 is colored, thus
needs the full target device color_info.depth bits per pixel. Bug 691514
detected running the PDF 1.7 FTS for customer 532.
</pre>
<p>[base/gxpcmap.c]</p>
</blockquote>

<p><strong><a name="2010-07-30T231352.534878Z"></a>
2010-07-30T23:13:52.534878Z Till Kamppeter</strong></p>
<blockquote>
<pre>
Distinguish the two uses of cdev - one from icc merge, one the from very old lpd code (bug 691463).

This causes a warning when building with gcc, msvc, and also DEC CC.

</pre>
<p>[base/gdevbbox.c]</p>
</blockquote>

<p><strong><a name="2010-07-30T213419.596701Z"></a>
2010-07-30T21:34:19.596701Z Till Kamppeter</strong></p>
<blockquote>
<pre>
Removed unneeded &quot;;&quot; characters from C code to silence warnings of DEC CC (bug 691463)

</pre>
<p>[contrib/gdevbjc_.h base/gxpcolor.h base/strmio.h base/gdevrinkj.c base/gdevbit.c base/gdevpdtf.h base/gsovrc.h]</p>
</blockquote>

<p><strong><a name="2010-07-30T203848.303275Z"></a>
2010-07-30T20:38:48.303275Z Till Kamppeter</strong></p>
<blockquote>
<pre>
configure script: Hide error message when &quot;sed&quot; does not have a &quot;--version&quot; option.
</pre>
<p>[base/configure.ac]</p>
</blockquote>

<p><strong><a name="2010-07-30T200921.607711Z"></a>
2010-07-30T20:09:21.607711Z Till Kamppeter</strong></p>
<blockquote>
<pre>
Tips about cross-compiling 64-bit ghostscript  on 32-bit windows

This procedure is slightly simplier(?) than the cross-compiling instruction
which Russell removed with r9807 about a year ago. Note that
ARCH_STRUCT_ALIGN_MOD mentioned in Russell's instruction was removed
r6773 (in 2006) and note also that all the &quot;genconf&quot; references in r9807
should be &quot;genarch&quot; instead.

</pre>
<p>[doc/Make.htm]</p>
</blockquote>

<p><strong><a name="2010-07-30T171523.787490Z"></a>
2010-07-30T17:15:23.787490Z Michael Vrhel</strong></p>
<blockquote>
<pre>
Fix for bug 691488.

This commit fixes the issues that we are seeing with the JPEG2000 images in the FTS files EXCEPT for the issues related to SmaskInData.  Those images will be addressed in a separate commit and will now be handled in bug 691470.  

With this commit, support is in place for faster 16 bit image rendering due to the improved ICC support, which lets us avoid the multiple conversions from 16 bit to frac to float to unsigned short to byte which occurred in the old flow.  Also, the jasper interface will now, when it encounters a 16 bit or 12 bit image, use the higher bit depth renderer and pass the data along.  Previously, we were truncating to 8bits in our jasper interface.  These changes have been regression tested and checked with bmpcmp.  


</pre>
<p>[base/gxi12bit.c base/lib.mak base/gxi16bit.c Resource/Init/gs_lev2.ps Resource/Init/gs_res.ps base/sjpx.c Resource/Init/pdf_draw.ps base/gximage.h]</p>
</blockquote>

<p><strong><a name="2010-07-30T171346.325084Z"></a>
2010-07-30T17:13:46.325084Z Michael Vrhel</strong></p>
<blockquote>
<pre>
Fix for double to float conversion warnings. Bug 691498.  </pre>
<p>[base/gsicc_create.c]</p>
</blockquote>

<p><strong><a name="2010-07-30T170659.251898Z"></a>
2010-07-30T17:06:59.251898Z Henry Stiles</strong></p>
<blockquote>
<pre>
rollback to revision 11564, 11565 broke the build</pre>
<p>[base/gxi12bit.c base/lib.mak base/gxi16bit.c contrib/gdevbjc_.h base/gdevbbox.c base/gxpcolor.h Resource/Init/gs_res.ps Resource/Init/pdf_draw.ps base/gsovrc.h base/gdevpdtf.h base/gsicc_create.c autogen.sh Resource/Init/gs_lev2.ps base/strmio.h base/configure.ac base/gdevrinkj.c base/sjpx.c base/gdevbit.c base/gximage.h base/gdevdbit.c]</p>
</blockquote>

<p><strong><a name="2010-07-30T142707.462183Z"></a>
2010-07-30T14:27:07.462183Z Michael Vrhel</strong></p>
<blockquote>
<pre>
Fix for bug 691488.

This commit fixes the issues that we are seeing with the JPEG2000 images in the FTS files EXCEPT for the issues related to SmaskInData.  Those images will be addressed in a separate commit and will now be handled in bug 691470.  

With this commit, support is in place for faster 16 bit image rendering due to the improved ICC support, which lets us avoid the multiple conversions from 16 bit to frac to float to unsigned short to byte which occurred in the old flow.  Also, the jasper interface will now, when it encounters a 16 bit or 12 bit image, use the higher bit depth renderer and pass the data along.  Previously, we were truncating to 8bits in our jasper interface.  These changes have been regression tested and checked with bmpcmp.  


</pre>
<p>[base/gxi12bit.c base/lib.mak base/gxi16bit.c Resource/Init/gs_lev2.ps Resource/Init/gs_res.ps base/sjpx.c Resource/Init/pdf_draw.ps base/gximage.h]</p>
</blockquote>

<p><strong><a name="2010-07-30T140814.058178Z"></a>
2010-07-30T14:08:14.058178Z Chris Liddell</strong></p>
<blockquote>
<pre>
Copying converted samples to the output raster used the byte
length of the input raster, rather than the byte length of 
the converted data. Change to use the correct length.

Bug 691494 - credit to SaGS for the patch.

</pre>
<p>[base/gdevdbit.c]</p>
</blockquote>

<p><strong><a name="2010-07-30T135952.334818Z"></a>
2010-07-30T13:59:52.334818Z Michael Vrhel</strong></p>
<blockquote>
<pre>
Fix for double to float conversion warnings. Bug 691498</pre>
<p>[base/gsicc_create.c]</p>
</blockquote>

<p><strong><a name="2010-07-30T113715.489627Z"></a>
2010-07-30T11:37:15.489627Z Till Kamppeter</strong></p>
<blockquote>
<pre>
Distinguish the two uses of cdev - one from icc merge, one the from very old lpd code (bug 691463).

This causes a warning when building with gcc, msvc, and also DEC CC.

</pre>
<p>[base/gdevbbox.c]</p>
</blockquote>

<p><strong><a name="2010-07-30T112007.130600Z"></a>
2010-07-30T11:20:07.130600Z Till Kamppeter</strong></p>
<blockquote>
<pre>
Suppressed error message during ./configure if &quot;sed&quot; does not support &quot;--version&quot; (bug 691463)
</pre>
<p>[base/configure.ac]</p>
</blockquote>

<p><strong><a name="2010-07-30T111617.321612Z"></a>
2010-07-30T11:16:17.321612Z Till Kamppeter</strong></p>
<blockquote>
<pre>
Removed unneeded &quot;;&quot; characters from C code to silence warnings of DEC CC (bug 691463)
</pre>
<p>[contrib/gdevbjc_.h base/gxpcolor.h base/strmio.h base/gdevrinkj.c base/gdevbit.c base/gdevpdtf.h base/gsovrc.h]</p>
</blockquote>

<p><strong><a name="2010-07-30T111247.691429Z"></a>
2010-07-30T11:12:47.691429Z Till Kamppeter</strong></p>
<blockquote>
<pre>
Removed unneeded quotes in autogen.sh.
</pre>
<p>[autogen.sh]</p>
</blockquote>

<p><strong><a name="2010-07-30T111035.977735Z"></a>
2010-07-30T11:10:35.977735Z Till Kamppeter</strong></p>
<blockquote>
<pre>
On Tru64 stdint.h does not exist but the types required by jbig2 are in inttypes.h there (bug 691463).

</pre>
<p>[base/configure.ac]</p>
</blockquote>

<p><strong><a name="2010-07-30T110327.732163Z"></a>
2010-07-30T11:03:27.732163Z Till Kamppeter</strong></p>
<blockquote>
<pre>
On Tru64 the integer types are in inttypes.h and not in stdint.h as in VMS
 
Bug 691463, required for jbig2dec.

</pre>
<p>[base/stdint_.h jbig2dec/os_types.h]</p>
</blockquote>

<p><strong><a name="2010-07-30T110025.895059Z"></a>
2010-07-30T11:00:25.895059Z Till Kamppeter</strong></p>
<blockquote>
<pre>
Replace &quot;==&quot; bashism by &quot;=&quot; in configure.ac

&quot;==&quot; is a bash extension. See bash's manpage recommending &quot;=&quot; for posix
compliance (bug 691463). This causes various tests to fail and resulted 
in the link failure from mis-detecting omni.

</pre>
<p>[base/configure.ac]</p>
</blockquote>

<p><strong><a name="2010-07-30T105644.338677Z"></a>
2010-07-30T10:56:44.338677Z Till Kamppeter</strong></p>
<blockquote>
<pre>
'%' in printf() needs to be '%%'

Tru64 C issues a warning (bug 691463).
</pre>
<p>[base/mkromfs.c]</p>
</blockquote>

<p><strong><a name="2010-07-30T105330.576036Z"></a>
2010-07-30T10:53:30.576036Z Till Kamppeter</strong></p>
<blockquote>
<pre>
Removed duplicate AC_PATH_PROG(pkg-config) check in ./configure.

The extra check caused

./configure: !: not found

messages on some platforms. Bug 691463.

</pre>
<p>[base/configure.ac]</p>
</blockquote>

<p><strong><a name="2010-07-30T101447.310782Z"></a>
2010-07-30T10:14:47.310782Z Till Kamppeter</strong></p>
<blockquote>
<pre>
Update documentation as --enable-dynamics is no longer required for &quot;make so&quot; to work.
</pre>
<p>[doc/Make.htm]</p>
</blockquote>

<p><strong><a name="2010-07-30T101041.906626Z"></a>
2010-07-30T10:10:41.906626Z Till Kamppeter</strong></p>
<blockquote>
<pre>
Added some missing initializations in DeviceN

This should have been part of the DeviceN change. If left unset,
the code path assumes color display and goes down the color display
path and eventually segfaults. Bug 690428.
</pre>
<p>[base/gdevxcmp.c]</p>
</blockquote>

<p><strong><a name="2010-07-30T095623.737093Z"></a>
2010-07-30T09:56:23.737093Z Till Kamppeter</strong></p>
<blockquote>
<pre>
Fix time-struct related build failure with SunStudio (bug 691453).

Apparently many platforms and compilers, including gcc and intel C,
require both &lt;sys/time.h&gt; and &lt;time.h&gt;. This patch just adds Sun Pro C
to the list of such platforms and compilers.

</pre>
<p>[base/time_.h]</p>
</blockquote>

<p><strong><a name="2010-07-30T094551.500432Z"></a>
2010-07-30T09:45:51.500432Z Till Kamppeter</strong></p>
<blockquote>
<pre>
Avoid that the x11 output device can create huge windows which crash the X server. Bug 690444.
</pre>
<p>[base/gdevxini.c]</p>
</blockquote>

<p><strong><a name="2010-07-30T085817.493418Z"></a>
2010-07-30T08:58:17.493418Z Till Kamppeter</strong></p>
<blockquote>
<pre>
Assorted fixes for the modularized X11 output device

All object files destined for shared libraries needed to be compiled
with -fPIC but this is not the case for gsparamx.c, gdevemap.c, and
gdevxcmp.c which are required by other parts to be built as standard.

This change makes x11 not depend on gsparamx.c and gdevemap.c (and not
geeting them included in the shared library X11.so). gsparamx.c is
part of psdf and is usually included and available, and gdevemap.c is
small enough to be inserted completely where it is used.

gdevxcmp.c is addressed by building it with &#36;(GLCCSHARED) and not with
&#36;(GLCC).

In addition, &#36;(CC_SHARED) is only used for object files, rather than
for linking, so DYNAMIC_CFLAGS is more appropiate here than
DYNAMIC_LDLAGS.

Bug 691510

</pre>
<p>[base/gdevxxf.c base/Makefile.in base/devs.mak]</p>
</blockquote>

<p><strong><a name="2010-07-29T182806.621749Z"></a>
2010-07-29T18:28:06.621749Z Ray Johnston</strong></p>
<blockquote>
<pre>
Add a comment recommending -sstdout=%stderr with -sOutputFile=- to prevent
PostScript files that print from messing up the output. Bug 691507.
</pre>
<p>[doc/Use.htm]</p>
</blockquote>

<p><strong><a name="2010-07-29T142919.627579Z"></a>
2010-07-29T14:29:19.627579Z Robin Watts</strong></p>
<blockquote>
<pre>
Remove unused variable left over from removal of pattern_cache_alt.

No expected changes.

</pre>
<p>[base/gsstate.c]</p>
</blockquote>

<p><strong><a name="2010-07-29T140539.594612Z"></a>
2010-07-29T14:05:39.594612Z Ken Sharp</strong></p>
<blockquote>
<pre>
Fix (pdfwrite) : try not to write out invalid xref

Exposed by bug #691503. There are circumstances under which we create a reference to a
/Page object which does not yet exist (creating an outline tree for example). In this
case we create a reference to the page, and set its initial offset to the current 
position in the PDF file. When we later write the real object we update the position
to reflect the point in the file where it is actually stored.

However, if we don't actually ever write the object (in the case above, because
LastPage is set before the destination page), then the object remains pointing to the
wrong location in the file. This is then written into the xref table, and this confuses
the current version of Ghostscript.

The patch creates new pages with an offset of 0 (which is always invalid because the 
PDF header means the minimum offset for any object is 15). If the page is later
created then the offset gets updated. If it is not written, however, we now check in 
the xref writing code to see if an object has an offset of 0. If it does, then we
break the xref table up and do not write an xref entry for the missing object.

Ghostscript is happy with this and processes the file.

NB the proper fix is to not emit the Outline entry for the page which will not be
present in the output, and a patch has been suggested to achieve this. This code has
some uses, however, as it may prevent this kind of problem in the future. It also
permits objects to be created and never referenced (presumably because they are never
used) without leaving invalid entries in the xref, which might be useful.

No expected differences.
</pre>
<p>[base/gdevpdf.c base/gdevpdfu.c]</p>
</blockquote>

<p><strong><a name="2010-07-29T135953.090810Z"></a>
2010-07-29T13:59:53.090810Z Chris Liddell</strong></p>
<blockquote>
<pre>
Two changes for two primarily pdfwrite problems with FAPI/FT.

The first is to only replace whichever of BuildGlyph or BuildChar
procedures the original font actually contained, replacing both
regardless confused some of &quot;decoding&quot; code elsewhere in GS
(op_show_continue_dispatch()) and we ended up receiving a valid
glyph to render instead of notdef. In this case we ended up incorrectly
stroking a charpath (this was seen with Quark's Type 3 &quot;special effects&quot;
font). With rendering output this resulted in a boldening effect on the glyph,
in pdfwrite, the result was strange extra lines through the glyph.

The second change is to due pdfwrite's use of a unit matrix for some of
its work. This resulted in small glyph metrics rounding to zero within
Freetype, and pdfwrite thinking a glyph had a width of zero. So make
the scale value at which we consider a glyph to be &quot;small&quot; an order of magnitude
larger, which gets compensated for in the calculation of Freetype's final
matrix.

Unfortunately this does cause ~2600 differences in the cluster tests: some
are progressions, most are pixel differences due to rounding differences
because the scaling numbers have changed in Freetype.

Fixes Bug 691383

</pre>
<p>[psi/fapi_ft.c psi/zfapi.c]</p>
</blockquote>

<p><strong><a name="2010-07-28T184446.282683Z"></a>
2010-07-28T18:44:46.282683Z Robin Watts</strong></p>
<blockquote>
<pre>
Fix bug #691493. Revert some of the work done for gs_2_colors.

I had needlessly attempted to have 2 pattern_cache's, one for stroking
colors and one for non-stroking colors. Given that the pattern_cache is
indexed by color id number, this is not necessary as all the data can
live happily in just one instance.

This removes the problem seen in the bug (where it was getting into an
infinite loop trying to populate the cache).

Local cluster testing shows this produces 57 differences, all (I think)
non-determinisms.


</pre>
<p>[base/gsstate.c base/gxistate.h base/gsistate.c]</p>
</blockquote>

<p><strong><a name="2010-07-28T123751.588339Z"></a>
2010-07-28T12:37:51.588339Z Till Kamppeter</strong></p>
<blockquote>
<pre>
CUPS Raster output device &quot;cups&quot;: Improved support for rendering jobs with high memory demands.

Let Ghostscript determine the memory buffer sizes automatically (as it
does with all the other output devices) if the environment variable
RIP_MAX_CACHE is not set, zero, or does not begin with a number (like
&quot;auto&quot;). If RIP_MAX_CACHE defines a valid value, use the actual value
for BufferSpace and not 1/10 of it. MaxBitmap is the maximum buffer
size to be used when rendering in full page mode, BufferSpace is the
buffer size used in banding mode. Banding mode is used if MaxBitmap is
too small to hold one page. Bug 691499.

</pre>
<p>[cups/gdevcups.c]</p>
</blockquote>

<p><strong><a name="2010-07-28T092249.016213Z"></a>
2010-07-28T09:22:49.016213Z Robin Watts</strong></p>
<blockquote>
<pre>
Add new gp_thread_start, gp_thread_finish abstraction, and deprecate old
gs_create_thread function. Adapt multiple rendering thread code to use
this new style instead. Hopefully this should solve the problems seen
in rare cases when a test thread doesn't get scheduled until after the
DLL has exited and the code isn't around any more.

No expected differences.

This code has been tested with MSVC and on linux with pthreads. While it
should work with Borland and Watcom (as all the headers appear consistent)
I have not been able to properly test it. Therefore the code is currently
configured to fall back to the old code, thus hopefully guaranteeing that
this commit won't make the operation under Borland/Watcom any worse than
it is now. This fallback is controlled by a single define for each of
these systems in gp_wsync.c, so it's easy to test. If users can report
success with the new code we can remove the fallback trivially.


</pre>
<p>[base/gp_wsync.c base/gxclthrd.c base/gp_nsync.c base/gp_psync.c base/gxclthrd.h base/gpsync.h]</p>
</blockquote>

<p><strong><a name="2010-07-28T073652.403693Z"></a>
2010-07-28T07:36:52.403693Z Ken Sharp</strong></p>
<blockquote>
<pre>
As pointed out by SaGS in Bug #691440, comment 5(C) there was a typo in revision 11498,
a '&gt;&gt;' was accidentally dropped form the batch file.
</pre>
<p>[lib/ps2pdf.bat]</p>
</blockquote>

<p><strong><a name="2010-07-27T071003.221027Z"></a>
2010-07-27T07:10:03.221027Z Chris Liddell</strong></p>
<blockquote>
<pre>
Add missing free of the new bitmap data.
</pre>
<p>[psi/zfapi.c]</p>
</blockquote>

<p><strong><a name="2010-07-27T070247.392994Z"></a>
2010-07-27T07:02:47.392994Z Chris Liddell</strong></p>
<blockquote>
<pre>
Slightly revise comment for why we might need to create a new bitmap
in fapi_finish_render_aux()

No cluster differences expected.

</pre>
<p>[psi/zfapi.c]</p>
</blockquote>

<p><strong><a name="2010-07-26T084833.786696Z"></a>
2010-07-26T08:48:33.786696Z Chris Liddell</strong></p>
<blockquote>
<pre>
A much better solution for Bug 691328.

The bitmap data coming from a font scaler/renderer may not have its raster
alignment as Ghostscript expects, so in the event that is the case, create
a bitmap which is GS compatible in the FAPI layer, before calling any
further operations on it.

This reverts the previous &quot;hack&quot; from r11362.

No cluster differences expected.

</pre>
<p>[base/gsbitops.c psi/zfapi.c]</p>
</blockquote>

<p><strong><a name="2010-07-24T225746.607791Z"></a>
2010-07-24T22:57:46.607791Z Alex Cherepanov</strong></p>
<blockquote>
<pre>
Render 3D annotations (using appearance stream) on the printer device even
if Print flag (0x4) is not set. This is done following AR8 and AR9 example
but contrary to PDF 1.7 spec. Bug 691486, customer 532.
</pre>
<p>[Resource/Init/pdf_draw.ps]</p>
</blockquote>

<p><strong><a name="2010-07-23T200128.232264Z"></a>
2010-07-23T20:01:28.232264Z Alex Cherepanov</strong></p>
<blockquote>
<pre>
Make *clean targets remove generated tif*.h files. Bug 691485.
</pre>
<p>[base/gs.mak]</p>
</blockquote>

<p><strong><a name="2010-07-23T190145.196186Z"></a>
2010-07-23T19:01:45.196186Z Alex Cherepanov</strong></p>
<blockquote>
<pre>
Remove .dividesfnts procedure, which is not needed by PS interpreter after
the introduction and use of string_array_access_proc() way back in
revision 176. FreeType doesn't require a particular way to split sfnts
either. ps2write includes procedures to create a well formed Type 42 from
a TrueType font.

The error is caused by .dividesfnts only spliting strings when the split
offset is even. The sample file has a *long* run of cases where the split
offsets are odd. When an even offset is finally found, the number of buffered
bytes exceeds the maximum length of the string causing /rangecheck error.
Thanks to Chris Liddell for the analysis of the problem.
Bug 691473, customer 532.
</pre>
<p>[Resource/Init/gs_ttf.ps]</p>
</blockquote>

<p><strong><a name="2010-07-23T092028.484085Z"></a>
2010-07-23T09:20:28.484085Z Chris Liddell</strong></p>
<blockquote>
<pre>
Commit the correct change for Bug 691427
	


</pre>
<p>[base/lib.mak]</p>
</blockquote>

<p><strong><a name="2010-07-23T082243.299979Z"></a>
2010-07-23T08:22:43.299979Z Chris Liddell</strong></p>
<blockquote>
<pre>
Change the gsicc* targets from using GCFLAGS to CFLAGS. This ensure that the
options for building .so objects are correct.

Additionally, add the extra dependencies to the sodebug target so it works
correctly.

No cluster differences expected.

Bug 691427

</pre>
<p>[base/lib.mak base/unix-dll.mak]</p>
</blockquote>

<p><strong><a name="2010-07-23T025737.996803Z"></a>
2010-07-23T02:57:37.996803Z Alex Cherepanov</strong></p>
<blockquote>
<pre>
Handle the case when, contrary to the spec, default viewing optional content
configuration dictionary has /BaseState attribute equal /OFF. Mark all OCGs
/OFF and unmark ON UCGs. Bug 691491, customer 532.
</pre>
<p>[Resource/Init/pdf_main.ps]</p>
</blockquote>

<p><strong><a name="2010-07-21T192614.458296Z"></a>
2010-07-21T19:26:14.458296Z Michael Vrhel</strong></p>
<blockquote>
<pre>
Fix for bug 691478

Note that string objects that are maintained as user params must be either allocated in non-gc memory or be a constant in the executable. The problem stems from the way userparams are retained during garbage collection in a param_list (collected by currentuserparams).  For some reason this param_list does not get the pointers to strings relocated during the GC. Note that the param_dict itself is correctly updated by reloc, it is just the pointers to the strings in the param_list that are not traced and updated. In this particular case, ICCProfilesDir sets a string in the icc_manager. When a reclaim occurs, the string is relocated (when in non-gc memory and when it is noted to the gc with the proper object descriptor).  Then if a set_icc_directory occurs, the user params pointer has NOT been updated and validation problems will occur.  Fix for this was to make the string not known to the GC and to allocate in non-gc memory.  When icc manager is deallocated, the string is also deallocated.</pre>
<p>[base/gsicc_manage.c psi/zusparam.c]</p>
</blockquote>

<p><strong><a name="2010-07-21T000316.900862Z"></a>
2010-07-21T00:03:16.900862Z Michael Vrhel</strong></p>
<blockquote>
<pre>
Fix so that non-isolated transparency groups are rendered correctly.  This fixes a rendering issue with fts_25_2524 and with a few in the test suite.  A future optimization will be to avoid the extra buffer push if the blend mode is normal, since in that case we can draw directly into the parent buffer.</pre>
<p>[base/gdevp14.c]</p>
</blockquote>

<p><strong><a name="2010-07-20T094634.095118Z"></a>
2010-07-20T09:46:34.095118Z Masaki Ushizaka</strong></p>
<blockquote>
<pre>
Add support for user defined huffman table.

This code adds support for segment type 53 segments, which supplies
inline huffman code table.  Bug 689853.

Many thanks to Justin Greer.


</pre>
<p>[jbig2dec/jbig2_segment.c jbig2dec/jbig2_huffman.c jbig2dec/jbig2_text.c jbig2dec/jbig2_symbol_dict.c jbig2dec/jbig2_huffman.h]</p>
</blockquote>

<p><strong><a name="2010-07-20T082305.218485Z"></a>
2010-07-20T08:23:05.218485Z Masaki Ushizaka</strong></p>
<blockquote>
<pre>
Catching up to the latest jbig2dec source.

This includes following jbig2dec git commits:

commit d26c7e4f39f76fe70cc61d6dc14d05a042a9be48
Author: Masaki Ushizaka &lt;masaki@ghostscript.com&gt;
Date:   Tue Jul 20 08:01:29 2010 +0000

    Fix jbig2_image_set_pixel function prototype
    
    The declaration of jbig2_image_set_pixel was differenct between
    jbig2_image.h and jbig2_image.c (int value vs bool value).  And
    prevented compiling it by MSVC comiler in C++ mode.
    This patch fixes it.  Bug #691461.

commit c5d61c78c0de785b74b86d4e5298e3cc7b9e2b68
Author: Masaki Ushizaka &lt;masaki@ghostscript.com&gt;
Date:   Fri Jul 16 09:13:41 2010 +0000

    A little fix to allocating memory size

commit e12fa07da845515911db8be2f7cfa8ef551061ba
Author: Tor Andersson &lt;tor.andersson@gmail.com&gt;
Date:   Thu Jul 15 00:49:09 2010 +0200

    Use the jbig2_new and jbig2_renew macros instead of calling
    jbig2_alloc and jbig2_realloc directly. Also adds a few typecasts
    and #defines required to compile the source as C++.

commit 31dd7ef66dbd1c34df08365aa3c36e6391617f37
Author: Tor Andersson &lt;tor.andersson@gmail.com&gt;
Date:   Thu Jul 15 00:42:38 2010 +0200

    Update VERSION define in config_win32.h

commit 941b73315a166fe07e0f1a1b81171477285280f7
Author: Tor Andersson &lt;tor.andersson@gmail.com&gt;
Date:   Thu Jul 15 00:41:46 2010 +0200

    Add Makefile.unix -- a simple makefile for unix-like systems.

commit f6066822041bbffd7169fd4bfc19c48daae8f155
Author: Tor Andersson &lt;tor.andersson@gmail.com&gt;
Date:   Thu Jul 15 00:35:58 2010 +0200

    Fix memory leak of the word stream struct.


No visible difference expected.




</pre>
<p>[jbig2dec/config_win32.h jbig2dec/jbig2.c jbig2dec/jbig2_image_pbm.c jbig2dec/jbig2_metadata.c jbig2dec/jbig2_image.c jbig2dec/jbig2_huffman.c jbig2dec/jbig2_text.c jbig2dec/jbig2_priv.h jbig2dec/jbig2_image.h jbig2dec/jbig2_refinement.c jbig2dec/jbig2dec.c jbig2dec/jbig2_arith_iaid.c jbig2dec/jbig2_halftone.c jbig2dec/Makefile.unix jbig2dec/jbig2_segment.c jbig2dec/jbig2_arith.c jbig2dec/jbig2_symbol_dict.c jbig2dec/jbig2_generic.c jbig2dec/jbig2_page.c]</p>
</blockquote>

<p><strong><a name="2010-07-20T055604.938511Z"></a>
2010-07-20T05:56:04.938511Z Michael Vrhel</strong></p>
<blockquote>
<pre>
Remove noisy warnings if embedded icc profile is not valid.  In those cases, we use the default and move on.  </pre>
<p>[psi/zicc.c]</p>
</blockquote>

<p><strong><a name="2010-07-19T212235.957060Z"></a>
2010-07-19T21:22:35.957060Z Michael Vrhel</strong></p>
<blockquote>
<pre>
Fix for Bug691474.  Source of error was due to icc hash code being read from clist after the transfer function.  It should have been read prior to the transfer function.  This was the first file we have seen that had a soft mask with a transfer function.  Also fix for rendering of this file.  The softmasks only uses the alpha channel as opposed to the luminosity of the object.  Progression with CityMap-evnice.pdf in test suite.  That file must have a alpha style softmask.</pre>
<p>[base/gdevp14.c base/gstparam.h]</p>
</blockquote>

<p><strong><a name="2010-07-19T154536.535276Z"></a>
2010-07-19T15:45:36.535276Z Chris Liddell</strong></p>
<blockquote>
<pre>

Update trunk to FreeType 2.4.1

The important change (from Ghostscript's point of view) is that the previously
patented TrueType hinting operations have been enabled by default after the
expiration of the patents in question.

This change (the hinting being enabled) causes 3060 non-pdfwrite cluster
changes, and 655 pdfwrite changes - these are expected, and are
progressions.

</pre>
<p>[freetype/builds/unix/config.sub freetype/src/pshinter/pshglob.c freetype/src/base/ftpfr.c freetype/src/pshinter/pshglob.h freetype/src/type1/t1objs.c freetype/docs/DEBUG freetype/builds/win32/w32-dev.mk freetype/src/type1/t1objs.h freetype/docs/reference/ft2-gasp_table.html freetype/src/pshinter freetype/docs/INSTALL.CROSS freetype/src freetype/docs/reference/ft2-lcd_filtering.html freetype/src/truetype/ttgload.c freetype/builds/win32/win32-def.mk freetype/src/type1 freetype/builds/wince/vc2005-ce freetype/src/truetype/ttgload.h freetype/src/tools/ftrandom/ftrandom.c freetype/devel/ft2build.h freetype/src/tools/docmaker/formatter.py freetype/src/autofit/Jamfile freetype/src/bdf/module.mk freetype/docs/reference/ft2-glyph_stroker.html freetype/include/freetype/config/ftheader.h freetype/src/cff/Jamfile freetype/src/cff/cffparse.c freetype/src/raster/ftraster.c freetype/src/cff/cffparse.h freetype/src/cff/cffcmap.c freetype/src/raster/ftraster.h freetype/src/cff/cffcmap.h freetype/src/raster/ftrend1.c freetype/include/freetype/internal/services/svttglyf.h freetype/builds/wince/vc2005-ce/freetype.vcproj freetype/src/raster/ftrend1.h freetype/docs/INSTALL.ANY freetype/src/psnames/module.mk freetype/src/base/ftutil.c freetype/src/autofit/afglobal.c freetype/src/cache/ftcsbits.c freetype/builds/mac/ftmac.c freetype/src/autofit/afglobal.h freetype/src/pcf/rules.mk freetype/src/base/ftsystem.c freetype/src/cache/ftcsbits.h freetype/builds/amiga/include/freetype freetype/builds/mac/FreeType.m68k_cfm.make.txt freetype/src/psaux/psaux.c freetype/builds/ansi freetype/src/cff/module.mk freetype/src/pshinter/rules.mk freetype/src/pcf/pcfread.c freetype/src/bdf/bdflib.c freetype/docs/reference/ft2-list_processing.html freetype/include/freetype/ftcache.h freetype/src/pcf/pcfread.h freetype/builds/unix/ft2unix.h freetype/src/raster/Jamfile freetype/builds/atari/FREETYPE.PRJ freetype/src/gzip/rules.mk freetype/src/pshinter/pshalgo.c freetype/include/freetype/internal/services/svcid.h freetype/include/freetype/ftincrem.h freetype/src/lzw freetype/builds/compiler/bcc-dev.mk freetype/src/pshinter/pshalgo.h freetype/src/tools/test_afm.c freetype/src/psnames/psnamerr.h freetype/src/cache/ftccache.c freetype/src/cache/ftcmru.c freetype/include/freetype/config/ftstdlib.h freetype/src/cid/cidtoken.h freetype/vms_make.com freetype/include/freetype/freetype.h freetype/docs/INSTALL.UNIX freetype/src/cache/ftccache.h freetype/src/cache/ftcmru.h freetype/src/tools/cordic.py freetype/src/pfr/Jamfile freetype/src/pfr/pfrload.c freetype/src/pfr/pfr.c freetype/builds/amiga/src freetype/src/pfr/pfrload.h freetype/include/freetype/fterrdef.h freetype/builds/detect.mk freetype/src/tools/ftrandom freetype/docs/reference/ft2-cache_subsystem.html freetype/builds/win32/vc2005 freetype/src/type1/t1gload.c freetype/builds/win32/vc2008 freetype/src/base/ftbbox.c freetype/builds/dos freetype/src/otvalid/otvgdef.c freetype/src/type1/t1gload.h freetype/include/freetype/ftsystem.h freetype/docs/reference/ft2-glyph_variants.html freetype/src/bdf/bdferror.h freetype/builds/unix/aclocal.m4 freetype/src/gxvalid/rules.mk freetype/docs/reference/ft2-bdf_fonts.html freetype/src/pcf/pcf.c freetype/src/otvalid/rules.mk freetype/include/freetype/internal/services/svotval.h freetype/src/bdf/Jamfile freetype/src/gxvalid/gxvbsln.c freetype/src/pfr/pfrdrivr.c freetype/src/pcf/pcf.h freetype/builds/compiler/win-lcc.mk freetype/src/type1/Jamfile freetype/src/pfr/pfrdrivr.h freetype/src/pcf/pcferror.h freetype/src/sfnt/ttsbit0.c freetype/src/base/ftmac.c freetype/builds/mac/FreeType.ppc_classic.make.txt freetype/src/base/ftgloadr.c freetype/src/base/ftbase.c freetype/docs freetype/builds/win32/vc2005/freetype.vcproj freetype/docs/reference/.gitignore freetype/src/base/ftbase.h freetype/builds/compiler freetype/src/gxvalid/gxvmort0.c freetype/src/bdf/bdf.c freetype/builds/amiga/src/base/ftsystem.c freetype/src/bdf/bdf.h freetype/src/cff/cff.c freetype/src/gxvalid/gxvalid.c freetype/builds/win32/w32-lcc.mk freetype/include/freetype/internal/services freetype/include/freetype/internal/psaux.h freetype/src/gxvalid/gxvalid.h freetype/autogen.sh freetype/src/base/fttype1.c freetype/docs/reference/ft2-type1_tables.html freetype/src/autofit/afmodule.c freetype/builds/unix/detect.mk freetype/include freetype/src/autofit/afmodule.h freetype/builds/vms freetype/src/pfr/pfrcmap.c freetype/objs/README freetype/builds/dos/dos-wat.mk freetype/builds/exports.mk freetype/src/pfr/pfrcmap.h freetype/src/psaux/Jamfile freetype/src/cff/cffpic.c freetype/builds/amiga/smakefile freetype/src/base/ftdebug.c freetype/src/gzip/inflate.c freetype/src/cff/cffpic.h freetype/src/type1/t1driver.c freetype/src/otvalid/otvbase.c freetype/include/freetype/ftmoderr.h freetype/src/gxvalid/gxvopbd.c freetype/src/type1/t1driver.h freetype/builds/win32/vc2005/freetype.sln freetype/builds/mac freetype/builds/atari freetype/builds/compiler/visualage.mk freetype/builds/newline freetype/builds/vms/ftsystem.c freetype/src/base/basepic.c freetype/src/type1/t1parse.c freetype/src/otvalid/otvmath.c freetype/src/gxvalid/gxvmort1.c freetype/src/base/basepic.h freetype/src/psnames/rules.mk freetype/src/type1/t1parse.h freetype/docs/reference/ft2-winfnt_fonts.html freetype/src/pcf/Jamfile freetype/src/gzip/Jamfile freetype/src/base/ftbdf.c freetype/builds/mac/ascii2mpw.py freetype/builds/unix/.gitignore freetype/src/raster/module.mk freetype/src/type1/t1afm.c freetype/src/cid/cidobjs.c freetype/include/ft2build.h freetype/include/freetype/internal/services/svgxval.h freetype/include/freetype/internal/ftrfork.h freetype/builds/win32/ftdebug.c freetype/src/tools freetype/src/type1/t1afm.h freetype/src/type1/t1tokens.h freetype/src/pshinter/pshrec.c freetype/src/cid/cidobjs.h freetype/builds/dos/dos-emx.mk freetype/src/pshinter/pshrec.h freetype/src/autofit/autofit.c freetype/builds/win32/w32-wat.mk freetype/builds/wince/vc2008-ce freetype/src/truetype/ttobjs.c freetype/include/freetype/ftchapters.h freetype/src/type1/t1errors.h freetype/include/freetype/ftlzw.h freetype/src/otvalid/otvgsub.c freetype/src/truetype/ttobjs.h freetype/src/tools/apinames.c freetype/src/winfonts/fnterrs.h freetype/src/cache/ftcache.c freetype/builds/win32/visualc/freetype.sln freetype/include/freetype/ftglyph.h freetype/docs/reference/ft2-gx_validation.html freetype/builds/vms/ftconfig.h freetype/builds/win32/vc2005/index.html freetype/builds/unix/unixddef.mk freetype/src/raster/rasterrs.h freetype/src/autofit/aflatin2.c freetype/builds/dos/detect.mk freetype/src/type42/Jamfile freetype/src/base/ftpic.c freetype/builds/wince freetype/src/autofit/aflatin2.h freetype/builds/win32/w32-mingw32.mk freetype/include/freetype/fttypes.h freetype/src/cache/ftcglyph.c freetype/src/gxvalid/gxvmort2.c freetype/builds/link_std.mk freetype/src/cache/ftcglyph.h freetype/src/pshinter/pshinter.c freetype/src/cache/Jamfile freetype/src/tools/test_bbox.c freetype/include/freetype/internal/services/svpsinfo.h freetype/src/type42/t42types.h freetype/builds/os2/os2-dev.mk freetype/builds/mac/ftlib.prj.xml freetype/src/gxvalid/gxvmort.c freetype/src/raster/rastpic.c freetype/builds/win32/vc2008/index.html freetype/src/gxvalid/gxvmort.h freetype/src/gxvalid/README freetype/src/raster/rastpic.h freetype/src/tools/docmaker/docbeauty.py freetype/builds/amiga/include freetype/docs/reference/ft2-incremental.html freetype/src/gzip/ftgzip.c freetype/include/freetype/ftcid.h freetype/include/freetype/internal/services/svpfr.h freetype/builds/compiler/watcom.mk freetype/builds/dos/dos-gcc.mk freetype/src/sfnt/module.mk freetype/src/psnames freetype/docs/INSTALL freetype/src/type1/t1load.c freetype/src/gzip/inftrees.c freetype/src/gzip freetype/builds/amiga/src/base/ftdebug.c freetype/docs/INSTALL.VMS freetype/src/type1/t1load.h freetype/src/gzip/inftrees.h freetype/src/pfr/pfrsbit.c freetype/src/gxvalid/gxvfeat.c freetype/src/cff/cfftoken.h freetype/include/freetype/internal/ftgloadr.h freetype/docs/PROBLEMS freetype/builds/wince/vc2008-ce/freetype.sln freetype/src/pfr/pfrsbit.h freetype/src/truetype/Jamfile freetype/src/gxvalid/gxvfeat.h freetype/builds/unix/configure freetype/docs/reference/ft2-basic_types.html freetype/src/otvalid freetype/src/gxvalid/gxvkern.c freetype/docs/INSTALL.MAC freetype/src/cid/Jamfile freetype/include/freetype/ftmm.h freetype/builds/symbian/freetype.mmp freetype/src/base/ftglyph.c freetype/src/sfnt freetype/src/otvalid/otverror.h freetype/docs/UPGRADE.UNIX freetype/src/autofit/afcjk.c freetype/src/autofit/aftypes.h freetype/src/sfnt/sfdriver.c freetype/src/psaux/afmparse.c freetype/src/autofit/afcjk.h freetype/src/sfnt/sfobjs.c freetype/src/base/ftobjs.c freetype/src/sfnt/sfdriver.h freetype/src/psaux/afmparse.h freetype/src/sfnt/sfobjs.h freetype/src/pfr/rules.mk freetype/docs/reference/ft2-sfnt_names.html freetype/builds/win32/visualc/freetype.vcproj freetype/builds/atari/deflinejoiner.awk freetype/src/psaux/module.mk freetype/src/base/ftstroke.c freetype/src/base/ftfstype.c freetype/docs/GPL.TXT freetype/src/base/ftbitmap.c freetype/src/pshinter/pshpic.c freetype/src/winfonts freetype/builds/dos/dos-def.mk freetype/src/pshinter/pshpic.h freetype/builds/win32/w32-gcc.mk freetype/src/psnames/pstables.h freetype/src/sfnt/rules.mk freetype/builds/wince/vc2005-ce/index.html freetype/src/autofit/afpic.c freetype/docs/raster.txt freetype/builds/atari/FNames.SIC freetype/builds/atari/ATARI.H freetype/src/autofit/afpic.h freetype/src/otvalid/otvgpos.c freetype/docs/reference/ft2-multiple_masters.html freetype/src/cff/cffdrivr.c freetype/docs/reference/ft2-base_interface.html freetype/src/cid/cidriver.c freetype/builds/mac/README freetype/src/otvalid/otvgpos.h freetype/include/freetype/ftgasp.h freetype/builds/unix/unix-cc.in freetype/src/autofit/afindic.c freetype/src/cff/cffdrivr.h freetype/src/cid/cidriver.h freetype/src/autofit/afindic.h freetype/docs/INSTALL.GNU freetype/src/raster freetype/builds/unix/ft-munmap.m4 freetype/src/winfonts/module.mk freetype/src/sfnt/ttkern.c freetype/docs/reference/ft2-index.html freetype/src/gzip/infutil.c freetype/src/sfnt/sferrors.h freetype/src/psaux/t1cmap.c freetype/src/sfnt/ttkern.h freetype/src/gxvalid/gxvmort4.c freetype/src/gzip/infutil.h freetype/include/freetype/ttnameid.h freetype/src/psaux/t1cmap.h freetype/builds/os2/detect.mk freetype/src/gzip/zconf.h freetype/docs/reference/ft2-user_allocation.html freetype/src/base/ftpatent.c freetype/src/truetype/rules.mk freetype/src/truetype freetype/src/base/ftadvanc.c freetype/src/tools/docmaker/tohtml.py freetype/builds/unix/unix-dev.mk freetype/src/otvalid/otvcommn.c freetype/src/otvalid/otvalid.c freetype/include/freetype/config/ftmodule.h freetype/src/otvalid/otvcommn.h freetype/src/otvalid/otvalid.h freetype/include/freetype/ftxf86.h freetype/include/freetype/internal/ftserv.h freetype/Jamrules freetype/src/type1/module.mk freetype/builds/win32/vc2008/freetype.sln freetype/src/base/ftapi.c freetype/docs/VERSION.DLL freetype/docs/LICENSE.TXT freetype/docs/reference/ft2-gzip.html freetype/builds/compiler/emx.mk freetype/include/freetype/ftstroke.h freetype/builds/unix/unix.mk freetype/include/freetype/ftlist.h freetype/include/freetype/ftbitmap.h freetype/objs/.gitignore freetype/src/type42/t42parse.c freetype/src/bdf/bdfdrivr.c freetype/modules.cfg freetype/docs/reference/ft2-toc.html freetype/docs/reference/ft2-computations.html freetype/builds/win32/visualce/freetype.dsp freetype/ChangeLog.20 freetype/src/cid/ciderrs.h freetype/src/type42/t42parse.h freetype/ChangeLog.21 freetype/builds/unix/configure.ac freetype/ChangeLog.22 freetype/builds/unix/ftconfig.in freetype/builds/beos freetype/ChangeLog.23 freetype/src/bdf/bdfdrivr.h freetype/builds/win32/visualce/freetype.dsw freetype/include/freetype/tttables.h freetype/docs/reference/ft2-quick_advance.html freetype/builds/unix/freetype2.in freetype/src/cid/module.mk freetype/src/autofit/afdummy.c freetype/src/gxvalid freetype/docs/reference/ft2-mac_specific.html freetype/src/tools/chktrcmp.py freetype/include/freetype/internal/services/svxf86nm.h freetype/src/autofit/afdummy.h freetype/src/pcf/pcfdrivr.c freetype/include/freetype/internal/ftobjs.h freetype/builds/symbian/bld.inf freetype/src/gxvalid/gxvmort5.c freetype/src/psnames/Jamfile freetype/src/pcf/pcfdrivr.h freetype/builds/unix/ftsystem.c freetype/docs/MAKEPP freetype/Jamfile freetype/builds/win32/visualce/index.html freetype/builds/compiler/gcc-dev.mk freetype/include/freetype/ftotval.h freetype/src/tools/test_trig.c freetype/src/tools/docmaker/content.py freetype/include/freetype/ftadvanc.h freetype/builds freetype/include/freetype/internal/services/svpostnm.h freetype/builds/unix/mkinstalldirs freetype/src/cff/rules.mk freetype/src/gzip/zlib.h freetype/src/type42/t42error.h freetype/src/smooth/module.mk freetype/src/sfnt/sfnt.c freetype/docs/reference/ft2-truetype_tables.html freetype/builds/compiler/gcc.mk freetype/builds/unix/config.guess freetype/src/otvalid/Jamfile freetype/src/autofit/afloader.c freetype/include/freetype/internal/services/svkern.h freetype/builds/beos/beos-def.mk freetype/src/autofit/afloader.h freetype/src/cache/ftcerror.h freetype/src/sfnt/Jamfile freetype/src/psaux/psobjs.c freetype/src/gzip/infcodes.c freetype/src/truetype/ttpic.c freetype/src/psaux/psobjs.h freetype/docs/reference/ft2-header_file_macros.html freetype/src/pshinter/pshnterr.h freetype/docs/reference/ft2-ot_validation.html freetype/src/base/ftcalc.c freetype/src/gzip/infcodes.h freetype/src/truetype/ttpic.h freetype/src/bdf/rules.mk freetype/include/freetype/internal/tttypes.h freetype/src/psaux freetype/builds/unix/freetype2.m4 freetype/docs/reference/ft2-outline_processing.html freetype/src/gxvalid/gxvmorx0.c freetype/include/freetype/internal/ftvalid.h freetype/include/freetype/fterrors.h freetype/builds/win32/visualc/freetype.dsp freetype/src/gzip/infblock.c freetype/builds/win32/visualc/freetype.dsw freetype/src/base/ftlcdfil.c freetype/include/freetype/internal/ftmemory.h freetype/src/type1/type1.c freetype/include/freetype/ftpfr.h freetype/src/gzip/infblock.h freetype/src/type42/rules.mk freetype/src/tools/ftrandom/Makefile freetype/src/pshinter/module.mk freetype/builds/amiga/include/freetype/config/ftmodule.h freetype/src/gxvalid/gxvmorx.c freetype/docs/formats.txt freetype/builds/amiga/makefile.os4 freetype/src/cff/cffobjs.c freetype/src/smooth/ftsmooth.c freetype/src/gxvalid/gxvmorx.h freetype/include/freetype/ftoutln.h freetype/src/cff/cffobjs.h freetype/docs/reference/ft2-truetype_engine.html freetype/builds/beos/detect.mk freetype/src/smooth/ftsmooth.h freetype/include/freetype/ftsynth.h freetype/src/winfonts/rules.mk freetype/src/tools/ftrandom/README freetype/src/pcf freetype/docs/CHANGES freetype freetype/src/base freetype/src/base/ftotval.c freetype/include/freetype/tttags.h freetype/src/autofit freetype/src/truetype/module.mk freetype/include/freetype/internal/autohint.h freetype/src/tools/glnames.py freetype/src/sfnt/ttload.c freetype/src/gxvalid/gxvfgen.c freetype/builds/atari/gen-purec-patch.sh freetype/src/sfnt/ttload.h freetype/src/pfr/pfrtypes.h freetype/docs/reference/ft2-system_interface.html freetype/builds/win32/w32-bcc.mk freetype/src/pcf/README freetype/src/gxvalid/gxvtrak.c freetype/include/freetype/internal/ftdriver.h freetype/objs freetype/include/freetype/ftgzip.h freetype/include/freetype/internal/services/svbdf.h freetype/src/base/ftrfork.c freetype/src/smooth/rules.mk freetype/src/base/rules.mk freetype/src/gxvalid/gxvmorx1.c freetype/src/autofit/afwarp.c freetype/src/cid/cidload.c freetype/include/freetype/ftgxval.h freetype/src/autofit/afwarp.h freetype/builds/win32/w32-intl.mk freetype/include/freetype/internal/services/svgldict.h freetype/src/cid/cidload.h freetype/src/gxvalid/gxvprop.c freetype/docs/reference/ft2-raster.html freetype/include/freetype/ftlcdfil.h freetype/src/type42/type42.c freetype/src/tools/docmaker/sources.py freetype/src/raster/rules.mk freetype/src/truetype/ttgxvar.c freetype/src/pshinter/Jamfile freetype/src/truetype/ttdriver.c freetype/src/gxvalid/Jamfile freetype/src/truetype/ttgxvar.h freetype/src/pfr/pfrgload.c freetype/builds/unix/unix-lcc.mk freetype/src/Jamfile freetype/src/pshinter/pshmod.c freetype/src/autofit/aflatin.c freetype/src/truetype/ttdriver.h freetype/src/base/ftsnames.c freetype/src/pfr/pfrgload.h freetype/src/pshinter/pshmod.h freetype/include/freetype/internal/ftcalc.h freetype/include/freetype/ftrender.h freetype/builds/unix freetype/src/base/ftgasp.c freetype/src/autofit/aflatin.h freetype/src/base/ftdbgmem.c freetype/src/smooth/ftspic.c freetype/include/freetype/t1tables.h freetype/src/cid/cidgload.c freetype/src/base/ftoutln.c freetype/src/smooth/ftspic.h freetype/builds/compiler/intelc.mk freetype/src/base/ftwinfnt.c freetype/src/base/ftsynth.c freetype/src/cid/cidgload.h freetype/include/freetype/internal/internal.h freetype/src/sfnt/ttbdf.c freetype/src/lzw/ftlzw.c freetype/src/sfnt/ttbdf.h freetype/builds/win32/vc2008/freetype.vcproj freetype/builds/win32/w32-bccd.mk freetype/src/truetype/ttpload.c freetype/src/gxvalid/gxvmorx2.c freetype/src/truetype/ttinterp.c freetype/src/lzw/rules.mk freetype/src/truetype/ttpload.h freetype/src/base/ftxf86.c freetype/src/base/ftstream.c freetype/src/truetype/ttinterp.h freetype/src/sfnt/ttcmap.c freetype/builds/ansi/ansi.mk freetype/include/freetype/internal/services/svmm.h freetype/src/pfr freetype/builds/compiler/ansi-cc.mk freetype/src/sfnt/ttcmap.h freetype/src/gxvalid/module.mk freetype/src/gxvalid/gxvjust.c freetype/builds/toplevel.mk freetype/src/truetype/tterrors.h freetype/builds/win32 freetype/builds/symbian freetype/src/pcf/pcfutil.c freetype/src/cid/type1cid.c freetype/src/pcf/pcfutil.h freetype/src/base/ftgxval.c freetype/builds/win32/visualce freetype/include/freetype/internal/pshints.h freetype/builds/amiga freetype/builds/amiga/src/base freetype/builds/win32/w32-icc.mk freetype/src/sfnt/ttmtx.c freetype/src/psnames/psmodule.c freetype/src/sfnt/ttmtx.h freetype/builds/wince/vc2008-ce/index.html freetype/src/psaux/psauxmod.c freetype/src/pfr/module.mk freetype/src/base/ftcid.c freetype/src/psnames/psmodule.h freetype/include/freetype/ftsnames.h freetype/src/psaux/psauxmod.h freetype/README.git freetype/configure freetype/src/gzip/inffixed.h freetype/src/bdf freetype/docs/reference/ft2-pfr_fonts.html freetype/src/sfnt/ttcmapc.h freetype/docs/reference freetype/builds/os2/os2-gcc.mk freetype/builds/compiler/bcc.mk freetype/builds/link_dos.mk freetype/docs/reference/ft2-cid_fonts.html freetype/include/freetype/ftwinfnt.h freetype/builds/unix/freetype-config.in freetype/src/pfr/pfrobjs.c freetype/src/base/Jamfile freetype/docs/release freetype/include/freetype/ftimage.h freetype/src/lzw/ftzopen.c freetype/src/pfr/pfrobjs.h freetype/src/lzw/Jamfile freetype/src/truetype/truetype.c freetype/Makefile freetype/src/base/fttrigon.c freetype/builds/win32/w32-vcc.mk freetype/src/lzw/ftzopen.h freetype/src/autofit/afhints.c freetype/builds/unix/install.mk freetype/src/autofit/afhints.h freetype/builds/win32/visualce/freetype.vcproj freetype/include/freetype/ftmac.h freetype/src/psaux/rules.mk freetype/src/type1/rules.mk freetype/src/cache/ftcimage.c freetype/src/psnames/pspic.c freetype/builds/atari/README.TXT freetype/src/cache/ftcimage.h freetype/include/freetype/config/ftconfig.h freetype/src/cid/cidparse.c freetype/src/psnames/pspic.h freetype/src/cff/cfferrs.h freetype/src/cid/cidparse.h freetype/docs/reference/ft2-version.html freetype/src/smooth/Jamfile freetype/src/tools/docmaker freetype/src/gzip/adler32.c freetype/src/tools/docmaker/.gitignore freetype/include/freetype/internal/sfnt.h freetype/docs/reference/README freetype/builds/compiler/unix-lcc.mk freetype/src/winfonts/winfnt.c freetype/devel/ftoption.h freetype/builds/wince/ftdebug.c freetype/src/gzip/zutil.c freetype/src/sfnt/sfntpic.c freetype/builds/unix/unix-def.in freetype/src/winfonts/winfnt.h freetype/builds/os2/os2-def.mk freetype/src/smooth/smooth.c freetype/src/gzip/zutil.h freetype/src/sfnt/sfntpic.h freetype/devel freetype/src/smooth/ftgrays.c freetype/src/raster/ftmisc.h freetype/docs/reference/ft2-module_management.html freetype/src/gxvalid/gxvmorx4.c freetype/include/freetype/internal/pcftypes.h freetype/src/pfr/pfrerror.h freetype/src/smooth/ftgrays.h freetype/src/winfonts/Jamfile freetype/builds/beos/beos.mk freetype/src/raster/raster.c freetype/include/freetype/internal/services/svwinfnt.h freetype/docs/CUSTOMIZE freetype/include/freetype/config freetype/builds/unix/configure.raw freetype/include/freetype/internal/t1types.h freetype/builds/wince/vc2008-ce/freetype.vcproj freetype/docs/reference/ft2-font_formats.html freetype/src/otvalid/module.mk freetype/include/freetype/internal/services/svpscmap.h freetype/ChangeLog freetype/include/freetype/fttrigon.h freetype/builds/win32/visualc freetype/src/cache/ftcmanag.c freetype/docs/FTL.TXT freetype/src/sfnt/ttsbit.c freetype/README freetype/src/cache/ftcmanag.h freetype/src/sfnt/ttsbit.h freetype/builds/mac/FreeType.ppc_carbon.make.txt freetype/builds/wince/vc2005-ce/freetype.sln freetype/docs/reference/ft2-sizes_management.html freetype/src/type42/t42drivr.c freetype/src/psaux/psconv.c freetype/include/freetype/ftbdf.h freetype/include/freetype/ftsizes.h freetype/src/type42/t42drivr.h freetype/src/cff freetype/include/freetype/internal/services/svtteng.h freetype/src/psaux/psconv.h freetype/include/freetype/internal/ftdebug.h freetype/src/tools/docmaker/docmaker.py freetype/src/gxvalid/gxverror.h freetype/src/autofit/module.mk freetype/include/freetype/internal/ftstream.h freetype/src/cff/cfftypes.h freetype/builds/modules.mk freetype/src/smooth freetype/docs/reference/ft2-bitmap_handling.html freetype/src/gxvalid/gxvmorx5.c freetype/src/gxvalid/gxvmod.c freetype/builds/freetype.mk freetype/include/freetype/internal/ftpic.h freetype/src/type42 freetype/src/gxvalid/gxvmod.h freetype/include/freetype/ftbbox.h freetype/src/otvalid/otvmod.c freetype/builds/unix/install-sh freetype/src/psnames/psnames.c freetype/builds/os2 freetype/src/cid/rules.mk freetype/src/psaux/psauxerr.h freetype/src/type42/t42objs.c freetype/src/otvalid/otvmod.h freetype/src/cache/ftccmap.c freetype/src/cache/ftcbasic.c freetype/src/cache freetype/src/smooth/ftsmerrs.h freetype/src/type42/t42objs.h freetype/include/freetype/internal/services/svttcmap.h freetype/version.sed freetype/builds/amiga/include/freetype/config/ftconfig.h freetype/src/psaux/t1decode.c freetype/docs/reference/ft2-glyph_management.html freetype/src/autofit/rules.mk freetype/src/tools/docmaker/utils.py freetype/builds/win32/visualc/index.html freetype/src/psaux/t1decode.h freetype/builds/ansi/ansi-def.mk freetype/src/otvalid/otvjstf.c freetype/src/type42/module.mk freetype/src/cff/cffgload.c freetype/src/autofit/aferrors.h freetype/src/gxvalid/gxvlcar.c freetype/builds/amiga/makefile freetype/include/freetype/internal/services/svsfnt.h freetype/src/bdf/README freetype/src/base/ftinit.c freetype/src/cff/cffgload.h freetype/src/cache/ftccback.h freetype/include/freetype/internal freetype/src/base/ftmm.c freetype/src/pcf/module.mk freetype/docs/TODO freetype/docs/reference/ft2-lzw.html freetype/src/tools/Jamfile freetype/builds/win32/detect.mk freetype/builds/unix/ltmain.sh freetype/src/autofit/afangles.c freetype/include/freetype/config/ftoption.h freetype/src/gxvalid/gxvcommn.c freetype/src/cff/cffload.c freetype/include/freetype freetype/src/autofit/afangles.h freetype/builds/compiler/visualc.mk freetype/src/gxvalid/gxvcommn.h freetype/src/cff/cffload.h freetype/builds/mac/FreeType.m68k_far.make.txt freetype/builds/amiga/include/freetype/config freetype/src/sfnt/ttpost.c freetype/src/sfnt/ttpost.h freetype/src/cid freetype/src/cache/rules.mk freetype/include/freetype/ttunpat.h freetype/builds/amiga/README freetype/include/freetype/ftmodapi.h freetype/include/freetype/internal/fttrace.h]</p>
</blockquote>

<p><strong><a name="2010-07-18T053008.091459Z"></a>
2010-07-18T05:30:08.091459Z Alex Cherepanov</strong></p>
<blockquote>
<pre>
Implement halftones type 6, 10, 16 in PDF interpreter.
Use default halftone when the halftone type is incorrect.
</pre>
<p>[Resource/Init/pdf_draw.ps]</p>
</blockquote>

<p><strong><a name="2010-07-18T000337.786299Z"></a>
2010-07-18T00:03:37.786299Z Alex Cherepanov</strong></p>
<blockquote>
<pre>
Recognize enumerated color space #12 as CMYK following JPX baseline spec.
</pre>
<p>[Resource/Init/pdf_draw.ps]</p>
</blockquote>

<p><strong><a name="2010-07-17T212339.853613Z"></a>
2010-07-17T21:23:39.853613Z Alex Cherepanov</strong></p>
<blockquote>
<pre>
Re-implement handling of named page sizes to avoid dependence on
the definitions of compatibility operators (a4, letter, etc.)
in userdict. Bug 691458.
</pre>
<p>[Resource/Init/gs_init.ps Resource/Init/gs_setpd.ps Resource/Init/gs_statd.ps]</p>
</blockquote>

<p><strong><a name="2010-07-17T000709.985181Z"></a>
2010-07-17T00:07:09.985181Z Alex Cherepanov</strong></p>
<blockquote>
<pre>
Remove unused variables CC_D and CC_INT from all makefiles.
</pre>
<p>[psi/os2.mak base/unixhead.mak base/bcwin32.mak base/openvms.mak base/watcw32.mak base/msvccmd.mak base/wccommon.mak]</p>
</blockquote>

<p><strong><a name="2010-07-16T204049.337914Z"></a>
2010-07-16T20:40:49.337914Z Alex Cherepanov</strong></p>
<blockquote>
<pre>
Fix the bug that prevented recognition of GenericResourceDir/Category/Name
as a valid resource path and required inclusion of GenericResourceDir in
the search path to find the same resource by searching.

New procedure does the following:
1. Returns GenericResourceDir/Category/Name if it exists.
2. Searches for Category/Name in LIBPATH. Returns actual path if found.
3. For non-existing resources return the same path as (1).

Old implementation added GenericResourceDir twice, didn't close files,
used system memory, called expensive procedures twice, etc.

Regression testing shows trivial differences in 23-07.ps, which prints
the length of ResourceFileName procedure.
This is a partial fix for bug 691408.
</pre>
<p>[Resource/Init/gs_res.ps]</p>
</blockquote>

<p><strong><a name="2010-07-16T195803.971410Z"></a>
2010-07-16T19:58:03.971410Z Michael Vrhel</strong></p>
<blockquote>
<pre>
Prepend icc directory to device profile name if the default name is used so that we have it during clist reading.  This is a fix for the iccprofiles/ problem in 691408 when compile inits is not used.  Also,  fix so that the profile name is allocated in non-gc memory.  This was a source of issues with the userparams dict not seeming to be traced or at least not getting its members relocated if a profile in the icc manager was relocated.  This fixes the breaking of the psdcmyk device in rev  11499.  Also removal of spurious warning messages.</pre>
<p>[base/gsicc_manage.c]</p>
</blockquote>

<p><strong><a name="2010-07-15T204206.487509Z"></a>
2010-07-15T20:42:06.487509Z Ray Johnston</strong></p>
<blockquote>
<pre>
Change pdf14_put_image so that the gx_default_begin_typed_image will
be able to call the device's 'begin_image' which is often hooked for
device specific (hardware accelerated) image rendering. This avoids
the default image rendering which results in LOTS of fill_rectangle
calls. Found with customer 532.
</pre>
<p>[base/gdevp14.c]</p>
</blockquote>

<p><strong><a name="2010-07-15T192838.670595Z"></a>
2010-07-15T19:28:38.670595Z Ray Johnston</strong></p>
<blockquote>
<pre>
The other half of the version.mak change.
</pre>
<p>[Resource/Init/gs_init.ps]</p>
</blockquote>

<p><strong><a name="2010-07-15T181417.190964Z"></a>
2010-07-15T18:14:17.190964Z Ray Johnston</strong></p>
<blockquote>
<pre>
Update version to 9.00 PRE-RELEASE (with a bogus date, but before Aug 1)
This will serve to notify folks what the next release will be (not 8.72)
</pre>
<p>[base/version.mak]</p>
</blockquote>

<p><strong><a name="2010-07-15T144939.770856Z"></a>
2010-07-15T14:49:39.770856Z Alex Cherepanov</strong></p>
<blockquote>
<pre>
Improve Ghostscript operation when current directory is not included in the
search path.
1. Make file path separators at the end of LIBPATH entries optional to reduce
   the number of trivial configuration errors.
2. Search LIBPATH list for valid iccprofiles/ directory as a sibling to
   (Resource) and set it as a default to ensure a valid default.
   This code follows /GenericResourceDir example.
3. Make sure that the path name derived from /GenericFontDir is is not
   searched but other font file names are searched. Earlier code relied on
   a feature of .libfile not searching for an absolute path and failed
   when the path was relative.
Partial fix for bugs 691350, 691408.
</pre>
<p>[Resource/Init/gs_lev2.ps Resource/Init/gs_fonts.ps Resource/Init/gs_res.ps]</p>
</blockquote>

<p><strong><a name="2010-07-15T054255.376283Z"></a>
2010-07-15T05:42:55.376283Z Alex Cherepanov</strong></p>
<blockquote>
<pre>
Add copying default ICC profiles to disk-install location. This is necessary
for the builds with COMPILE_INITS=0, which looks for ICC profiles on disk.
Thanks to Hin-Tak for the patch. Bug 691449.
</pre>
<p>[base/unixinst.mak]</p>
</blockquote>

<p><strong><a name="2010-07-14T212533.726848Z"></a>
2010-07-14T21:25:33.726848Z Till Kamppeter</strong></p>
<blockquote>
<pre>
Allow the CUPS Raster backend alternatively output compressed (version 2) CUPS Raster data (bug #689885).
</pre>
<p>[cups/gdevcups.c]</p>
</blockquote>

<p><strong><a name="2010-07-13T183029.088597Z"></a>
2010-07-13T18:30:29.088597Z Chris Liddell</strong></p>
<blockquote>
<pre>
Ensure the local variable into which we read Truetype cmap table data (platform ID, encoding ID etc) is actually large enough to hold all the data we read into it.

Bug 691452 (part 1)

No cluster differences expected.</pre>
<p>[base/gsfcid2.c]</p>
</blockquote>

<p><strong><a name="2010-07-13T082456.010563Z"></a>
2010-07-13T08:24:56.010563Z Ken Sharp</strong></p>
<blockquote>
<pre>
Update the documentation on producing PDF/X to make it clear that -sProcessColorModel
is an absolute requirement, even when using -dUseCIEColor, and that the PDFA_def.ps
file must be edited, at the very least to alter the ICCProfile entry.

Also made some minor syntax changes in PDF/A and PDF/X documentation for greater clarity.
</pre>
<p>[doc/Ps2pdf.htm]</p>
</blockquote>

<p><strong><a name="2010-07-13T070459.625768Z"></a>
2010-07-13T07:04:59.625768Z Michael Vrhel</strong></p>
<blockquote>
<pre>
Fix for Bug 691444.  Issue was introduced when interpolation max output range was set to be 65535 so that the output could be fed directly into CMM. Problem was for HT output devices like pbmraw the interpolation filter ignored the max range setting and used a max value of the frac range as output.  This fixes a number of files that had regressions.  Files checked with bmpcmp.</pre>
<p>[base/sidscale.c]</p>
</blockquote>

<p><strong><a name="2010-07-13T012010.578834Z"></a>
2010-07-13T01:20:10.578834Z Michael Vrhel</strong></p>
<blockquote>
<pre>
Fix for bug 691445.  pdf14 mapping procs were not paying attention to the trans device in the imager state.  bmpcmp showed that this fixed several files.</pre>
<p>[base/gdevp14.c]</p>
</blockquote>

<p><strong><a name="2010-07-12T150357.186505Z"></a>
2010-07-12T15:03:57.186505Z Chris Liddell</strong></p>
<blockquote>
<pre>
In the event the FAPI code has to replace the FontBBox array, make sure the new array is marked executable.

No cluster differences expected.</pre>
<p>[psi/zfapi.c]</p>
</blockquote>

<p><strong><a name="2010-07-11T152614.804339Z"></a>
2010-07-11T15:26:14.804339Z Michael Vrhel</strong></p>
<blockquote>
<pre>
Fix for overprint regressions introduced with icc branch merge.  Review of bmp compares reveals that this fixes a number of issues hence the large number of differences with the commit.  There is one regression introduced with this commit, which is IA3Z0302.pdf.pdf.pkmraw.300 page 2 a bug will be opened for this.   Also, review of Atona_Technical_1v1_x3.pdf.pam.72 reveals there some overprint issues may still exist with bitmap and halftone image overprinting on top of spotcolors when Overprint is true and and Overprint mode is set to On.  This issue may have existed prior to the icc commit.  Will open a bug to investigate.</pre>
<p>[base/gsicc_create.c base/gxcspace.h base/gscspace.c base/gsicc.c]</p>
</blockquote>

<p><strong><a name="2010-07-10T012854.795367Z"></a>
2010-07-10T01:28:54.795367Z Ray Johnston</strong></p>
<blockquote>
<pre>
Fix 'status' operator to return false when the IODevice prefix is
not found instead of undefinedfilename. Found while working on 691408.
</pre>
<p>[psi/zfile.c]</p>
</blockquote>

<p><strong><a name="2010-07-09T183119.790276Z"></a>
2010-07-09T18:31:19.790276Z Ray Johnston</strong></p>
<blockquote>
<pre>
Fix to use stable memory for profiledir in icc_manager structure and change
all 'current_' functions to return the actual value set, the default, or
an empty string if no default. Also set the default ICCProfilesDir to
%rom%iccprofiles which will work if COMPILE_INITS=1. This should also be
set by the PS init code (see bug 691408).
</pre>
<p>[psi/zusparam.c]</p>
</blockquote>

<p><strong><a name="2010-07-09T094017.170342Z"></a>
2010-07-09T09:40:17.170342Z Ken Sharp</strong></p>
<blockquote>
<pre>
Improve Windows batch files.
Bug #691440 &quot;Windows bat files use relative paths and write to non-temp dir&quot;

As suggested by Bjorn Martensson in bug #691440. Altered all batch files which call
other batch files so that they prepend the call with the location the original
batch file was executed from. This allows batch files such as ps2pdf.bat to be called
from locations other than the Ghostscript 'lib' directory.

Also altered the location of temporary files created by the batch files to the Windows
temporary folder by using the %TEMP% environment variable. If this variable is not set
for some reason then this will still default to the current directory, as it does now.
This allows batch files to be run from directories which are read only.

Since these files are not used by our (Linux) cluster there will be no differences. I
have tested a number of the scripts, but not all of them. The ones I have tested seem
to work well.

I finally found a reference which states that the %~d batch parameter was introduced
to Windows in NT4, this means that these batch files will likely fail on older versions
of Windows (ie Windows 3.x/95/98). I don't believe we need to support such antiquated
Operating Systems any further.</pre>
<p>[lib/pf2afm.bat lib/gsdj500.bat lib/ps2ascii.bat lib/ps2pdfxx.bat lib/lpr2.bat lib/gsndt.bat lib/gstt.bat lib/eps2eps.bat lib/pdf2dsc.bat lib/gsbj.bat lib/ps2epsi.bat lib/gsdj.bat lib/dumphint.bat lib/ps2ps2.bat toolbin/msvcxml.bat lib/gsnd.bat lib/font2c.bat lib/pdfopt.bat lib/gst.bat lib/pdf2ps.bat lib/ps2pdf.bat lib/gslj.bat lib/bdftops.bat lib/pfbtopfa.bat lib/ps2pdf12.bat lib/ps2pdf13.bat lib/ps2pdf14.bat lib/gslp.bat lib/lpgs.bat lib/ps2ps.bat lib/pftogsf.bat]</p>
</blockquote>

<p><strong><a name="2010-07-08T200159.912724Z"></a>
2010-07-08T20:01:59.912724Z Robin Watts</strong></p>
<blockquote>
<pre>
Extend the experimental ENABLE_TRAP_AMALGAMATION code to the
TEMPLATE_slant_into_trapezoids cases too. The current code generates 3
trapezoids; the new code will (if the option is enabled) attempt to
amalgamate the top/bottom traps into the middle one.

Enabling this code (but disabling the existing code for trap amalgamation)
shows no differences. Enabling all the trap amalgamation code shows 888
differences, all fairly innocuous.

As this code is going in disabled, no cluster differences are expected.

</pre>
<p>[base/gxfillts.h base/gxfill.c]</p>
</blockquote>

<p><strong><a name="2010-07-08T162020.892723Z"></a>
2010-07-08T16:20:20.892723Z Alex Cherepanov</strong></p>
<blockquote>
<pre>
Update the Ghostscript man page to reflect the new default for -P option
made by the rev. 11494.
</pre>
<p>[man/gs.1]</p>
</blockquote>

<p><strong><a name="2010-07-07T212755.422122Z"></a>
2010-07-07T21:27:55.422122Z Marcos H. Woehrmann</strong></p>
<blockquote>
<pre>
clusterpush.pl with no options now tests language_switch build as well as gs, pcl, and xps.

Also some minor documentation improvements.
</pre>
<p>[toolbin/localcluster/clusterpush.pl toolbin/localcluster/readme]</p>
</blockquote>

<p><strong><a name="2010-07-07T174709.812924Z"></a>
2010-07-07T17:47:09.812924Z Alex Cherepanov</strong></p>
<blockquote>
<pre>
Dont't search for initialization files in the current directory first
by default because this leads to well-known security and confusion problems.
Do this only on the user's request by -P switch. Also revert rev. 11468,
which is no longer needed. Bug 691350.
</pre>
<p>[base/openvms.mmk psi/zfile.c doc/Use.htm base/bcwin32.mak base/ugcclib.mak base/Makefile.in base/unix-gcc.mak base/macos-mcp.mak toolbin/msvcxml.bat psi/os2.mak base/watclib.mak base/openvms.mak base/macosx.mak base/watcw32.mak psi/msvc32.mak base/unixansi.mak base/msvclib.mak]</p>
</blockquote>

<p><strong><a name="2010-07-07T134957.894248Z"></a>
2010-07-07T13:49:57.894248Z Ken Sharp</strong></p>
<blockquote>
<pre>
Fix : temporary memory device not finalized.

clist_init_data creates a temporary memory device in order to &quot;get the memory planarity
set up&quot;, using a local variable to hold the device. When the function exits the
variable goes out of scope and disappears.

Because the memory device is a forwarding device it increments the reference count of
its target, but because it is never finalized it does not decrement the reference count
when it is destroyed, leading to an incorrect target reference count.

This only affects pdfwrite at present, but it prevents valid PDF files being written
because the file is only terminated when the pdfwrite device reference count reaches
0 and the pdfwrite device is closed.

Added calls to finalize the device before discarding it.

No expected differences.
</pre>
<p>[base/gxclist.c]</p>
</blockquote>

<p><strong><a name="2010-07-06T222732.077335Z"></a>
2010-07-06T22:27:32.077335Z Alex Cherepanov</strong></p>
<blockquote>
<pre>
Increase the max number of color components to 14 to accomodate a new
record (13) found in the wild. Bug 691425.
</pre>
<p>[base/gsccolor.h]</p>
</blockquote>

<p><strong><a name="2010-07-06T092540.558632Z"></a>
2010-07-06T09:25:40.558632Z Ken Sharp</strong></p>
<blockquote>
<pre>
Fix (pdfwrite) : Named destinations with no /Page not working properly

Bug #691344 &quot;REGRESSION: ps2pdf of 8.70 generates correct hyperlinks but not ps2pdf of
8.71&quot;

The revisions 9779 and 9788 fixed a problem where DOCVIEW pdfmarks without a /Page or
/View entry were producing invalid PDF files, and a problem with DEST pdfmarks arising
from it.

Because DOCVIEW and DEST pdfmarks share some common code in pdfwrite to create a 
Destination annotation in the outptu PDF, this still left some confusion in the code.
The problem was that DOCVIEW pdfmarks need not contain Page or View data, but named 
destinations *must*, but pdfmarks need not specify, in which case the current page is
used.

Added a parameter to pdf_make_dest which allows us to differentiate the two cases and
use the current page number for a named destination if no page is supplied.

The regression suite can't test this non-printing feature, so no differences are 
expected.
</pre>
<p>[base/gdevpdfm.c]</p>
</blockquote>

<p><strong><a name="2010-07-06T070453.806003Z"></a>
2010-07-06T07:04:53.806003Z Ken Sharp</strong></p>
<blockquote>
<pre>
Improve handling an error condition as suggested by Alex Cherepanov in Bug #691435,
comment 9. </pre>
<p>[base/gdevpdfj.c]</p>
</blockquote>

<p><strong><a name="2010-07-06T001144.270183Z"></a>
2010-07-06T00:11:44.270183Z Ray Johnston</strong></p>
<blockquote>
<pre>
Fix BAND_LIST_STORAGE=memory to handle files that create compressed memory
files &gt; 2Gb. Also add code to make the reporting of these file sizes a bit
better, but portability may still be an issue. Reference Bug 690199 for
customers 850 and 531.

</pre>
<p>[base/gxclmem.c base/gxclist.c]</p>
</blockquote>

<p><strong><a name="2010-07-05T235146.696108Z"></a>
2010-07-05T23:51:46.696108Z Alex Cherepanov</strong></p>
<blockquote>
<pre>
Replace all '==' executable names with '//== exec' in Ghostscript start-up
code because MS driver redefines '==' in a way that requires write access to
the top dictionary, and this is not always the case. Bug 689957.
</pre>
<p>[Resource/Init/gs_cmap.ps Resource/Init/gs_pdfwr.ps Resource/Init/pdf_main.ps Resource/Init/gs_resmp.ps Resource/Init/pdf_font.ps Resource/Init/gs_fonts.ps Resource/Init/pdf_base.ps Resource/Init/pdf_sec.ps Resource/Init/gs_ttf.ps Resource/Init/pdf_draw.ps Resource/Init/gs_cff.ps Resource/Init/gs_fapi.ps]</p>
</blockquote>

<p><strong><a name="2010-07-05T161838.343520Z"></a>
2010-07-05T16:18:38.343520Z Alex Cherepanov</strong></p>
<blockquote>
<pre>
Set svn:ignore property for all remaining generated files in jasper,
jbig2dec, and tiff directories.
</pre>
<p>[tiff/contrib/iptcutil tiff/contrib/tags tiff/build tiff/tools tiff tiff/contrib tiff/contrib/mac-mpw tiff/contrib/acorn tiff/html jasper/src/libjasper/include/jasper tiff/contrib/mac-cw tiff/contrib/dbs tiff/html/images tiff/man tiff/contrib/win_dib tiff/html/man tiff/libtiff tiff/test tiff/contrib/addtiffo jbig2dec tiff/port tiff/contrib/ras tiff/contrib/mfs tiff/contrib/pds tiff/contrib/dbs/xtiff tiff/contrib/stream]</p>
</blockquote>

<p><strong><a name="2010-07-05T151009.278642Z"></a>
2010-07-05T15:10:09.278642Z Ken Sharp</strong></p>
<blockquote>
<pre>
Add a pair of parentheses to silence a gcc compiler warning. Also extend the comment
slightly to be a little more informative.

No differences expected.
</pre>
<p>[base/gdevpdfj.c]</p>
</blockquote>

<p><strong><a name="2010-07-05T051316.304757Z"></a>
2010-07-05T05:13:16.304757Z Alex Cherepanov</strong></p>
<blockquote>
<pre>
Use the presence of /CIDSystemInfo instead of /Subtype value to decide
whether the object is a CID font. The former is required by Acrobat, the
latter appears to be ignored by Acrobat, and so may be wrong. Bug 691426. 
</pre>
<p>[Resource/Init/pdf_font.ps]</p>
</blockquote>

<p><strong><a name="2010-07-05T012343.139942Z"></a>
2010-07-05T01:23:43.139942Z Hin-Tak Leung</strong></p>
<blockquote>
<pre>
test for emptiness of HAVE_FONTCONFIG is better than non-yes-ness of enable_fontconfig; fine-tuning of r11448 to --disable-cairo when fontconfig is not available or user-disabled</pre>
<p>[base/configure.ac]</p>
</blockquote>

<p><strong><a name="2010-07-05T011830.861454Z"></a>
2010-07-05T01:18:30.861454Z Hin-Tak Leung</strong></p>
<blockquote>
<pre>
new/renamed documentation file libpng-1.2.44.txt missed in r11482 for libpng 1.2.42-&gt;1.2.44 upgrade</pre>
<p>[libpng/libpng-1.2.44.txt]</p>
</blockquote>

<p><strong><a name="2010-07-04T190417.740307Z"></a>
2010-07-04T19:04:17.740307Z Alex Cherepanov</strong></p>
<blockquote>
<pre>
Reaplly Hin-Tak's patch, rev. 11453, which was rolled back by the rev. 11462.
Apply diff between stock 1.2.42 &lt;-&gt; 1.2.44 to upgrade to libpng 1.2.44 - bug
fixes - CVE-2010-1205. Bug 691438. 
</pre>
<p>[libpng/pngrtran.c libpng/scripts/makefile.gcmmx libpng/contrib/pngminim/encoder/gather.sh libpng/scripts/makefile.sgi libpng/scripts/makefile.sco libpng/scripts/makefile.hpgcc libpng/KNOWNBUG libpng/projects/xcode/libpng.xcodeproj/project.pbxproj libpng/scripts/pngos2.def libpng/scripts/makefile.nommx libpng/scripts/makefile.linux libpng/pngmem.c libpng/png.c libpng/contrib/pngminim/decoder/gather.sh libpng/scripts/makefile.64sunu libpng/scripts/makefile.elf libpng/scripts/libpng-config-head.in libpng/png.h libpng/CMakeLists.txt libpng/pngrio.c libpng/pngpread.c libpng/Y2KINFO libpng/scripts/makefile.netbsd libpng/pngwio.c libpng/pngrutil.c libpng/scripts/makefile.hpux libpng/scripts/makefile.darwin libpng/scripts/makefile.sggcc libpng/README libpng/contrib/pngminim/decoder/makefile libpng/scripts/makefile.32sunu libpng/libpngpf.3 libpng/scripts/makefile.solaris-x86 libpng/libpng-1.2.42.txt libpng/contrib/pngminim/preader/makefile libpng/scripts/makefile.solaris libpng/pngwtran.c libpng/contrib/pngminim/preader/gather.sh libpng/scripts/makefile.mingw libpng/scripts/makefile.aix libpng/scripts/makefile.hp64 libpng/scripts/png32ce.def libpng/scripts/makefile.beos libpng/scripts/makefile.ne12bsd libpng/pngread.c libpng/scripts/pngw32.def libpng/pngget.c libpng/INSTALL libpng/scripts/makefile.cegcc libpng/CHANGES libpng/contrib/pngminim/encoder/makefile libpng/projects/wince.txt libpng/libpng.3 libpng/example.c libpng/scripts/makefile.so9 libpng/pngwrite.c libpng/pngconf.h libpng/pngset.c libpng/LICENSE libpng/png.5 libpng/pngwutil.c libpng/scripts/makefile.openbsd libpng/scripts/makefile.dec libpng/scripts/README.txt libpng/scripts/makefile.cygwin libpng/pngtest.c libpng/ANNOUNCE libpng/scripts/libpng.pc.in]</p>
</blockquote>

<p><strong><a name="2010-07-03T002940.754683Z"></a>
2010-07-03T00:29:40.754683Z Hin-Tak Leung</strong></p>
<blockquote>
<pre>
missed linker defines needed to build under 64-bit windows in a previous commit r11388 for bug 691302</pre>
<p>[psi/msvc32.mak]</p>
</blockquote>

<p><strong><a name="2010-07-01T215829.492747Z"></a>
2010-07-01T21:58:29.492747Z Michael Vrhel</strong></p>
<blockquote>
<pre>
Bubble up of error when allocation of default profile cmm handle fails. Fix for bug 691429</pre>
<p>[base/gsicc_manage.c]</p>
</blockquote>

<p><strong><a name="2010-07-01T211355.381754Z"></a>
2010-07-01T21:13:55.381754Z Hin-Tak Leung</strong></p>
<blockquote>
<pre>
revert r11469(r11455) - wrong fix to bug 690428</pre>
<p>[base/gdevxcmp.c]</p>
</blockquote>

<p><strong><a name="2010-07-01T190829.177579Z"></a>
2010-07-01T19:08:29.177579Z Ken Sharp</strong></p>
<blockquote>
<pre>
Enhancement (pdfwrite) : Fall back to Flate instead of JPEG when an image turns out
short.

Bug #691435 &quot;any PDFSETTINGS besides /default gives dictfull error&quot;

There are two problems; firstly when an error is encountered closing a filter the
error code (-1 or -2 usually) is returned and interpreted as a regular GS error,
resulting in ridiculous error messages. Modified to return ioerror instead.

Secondly, when an image terminates with insufficient data and pdfwrite is creating a
DCT encoded image, we can't complete the image. In this case try to fall back to the
simple Flate compressed stream instead.

No differences expected.
</pre>
<p>[base/gdevpdfj.c]</p>
</blockquote>

<p><strong><a name="2010-07-01T171423.564053Z"></a>
2010-07-01T17:14:23.564053Z Michael Vrhel</strong></p>
<blockquote>
<pre>
Fix for Bug 691431.  This was caused by a PS CIE color space being used for a transparency group color space.  That really should not be allowed since those color spaces are unidirectional.  They are installed though when -dUseCIEColor is used with a PDF file that has transparency. Solution is to use the default ICC profiles for the group color space when this occurs.</pre>
<p>[base/gstrans.c]</p>
</blockquote>

<p><strong><a name="2010-07-01T121920.914734Z"></a>
2010-07-01T12:19:20.914734Z Robin Watts</strong></p>
<blockquote>
<pre>
Revert revision 11472 as it breaks almost every file in the cluster tests,
and it's preventing other meaningful work being done.

</pre>
<p>[base/gp_unifn.c]</p>
</blockquote>

<p><strong><a name="2010-07-01T004157.037474Z"></a>
2010-07-01T00:41:57.037474Z Hin-Tak Leung</strong></p>
<blockquote>
<pre>
reapply 11457</pre>
<p>[base/gs_dll_call.h]</p>
</blockquote>

<p><strong><a name="2010-07-01T004043.889090Z"></a>
2010-07-01T00:40:43.889090Z Hin-Tak Leung</strong></p>
<blockquote>
<pre>
reapply 11456</pre>
<p>[base/gp_unifn.c]</p>
</blockquote>

<p><strong><a name="2010-07-01T003616.428446Z"></a>
2010-07-01T00:36:16.428446Z Hin-Tak Leung</strong></p>
<blockquote>
<pre>
reapply 11454 for outdated config.guess config.sub. see original commit log</pre>
<p>[jpeg/config.guess jpeg/config.sub]</p>
</blockquote>

<p><strong><a name="2010-07-01T003305.624689Z"></a>
2010-07-01T00:33:05.624689Z Hin-Tak Leung</strong></p>
<blockquote>
<pre>
typo that causes linker error if one does not do make clean between builds</pre>
<p>[base/lib.mak]</p>
</blockquote>

<p><strong><a name="2010-07-01T000022.982087Z"></a>
2010-07-01T00:00:22.982087Z Hin-Tak Leung</strong></p>
<blockquote>
<pre>
reapply r11455 - see original commit log for details</pre>
<p>[base/gdevxcmp.c]</p>
</blockquote>

<p><strong><a name="2010-06-30T233411.835858Z"></a>
2010-06-30T23:34:11.835858Z Hin-Tak Leung</strong></p>
<blockquote>
<pre>
security patch from Werner Fink, to disable loading init files from group/world-writable directories - bug 691350</pre>
<p>[psi/zfile.c]</p>
</blockquote>

<p><strong><a name="2010-06-30T221202.295636Z"></a>
2010-06-30T22:12:02.295636Z Michael Vrhel</strong></p>
<blockquote>
<pre>
Initialize profile member variables that are part of serialization.  Fix for Bug 691433
	

</pre>
<p>[base/gsicc_manage.c]</p>
</blockquote>

<p><strong><a name="2010-06-29T180629.735123Z"></a>
2010-06-29T18:06:29.735123Z Henry Stiles</strong></p>
<blockquote>
<pre>
remove obsolete clusterpush scripts.
</pre>
<p>[/trunk/ghostpdl/tools/clusterpush.sh toolbin/clusterpush.sh]</p>
</blockquote>

<p><strong><a name="2010-06-29T171745.269232Z"></a>
2010-06-29T17:17:45.269232Z Henry Stiles</strong></p>
<blockquote>
<pre>
revert back to 11450.
</pre>
<p>[/trunk/ghostpdl/main/pcl6_gcc.mak libpng/pngrtran.c libpng/scripts/makefile.gcmmx base/ugcclib.mak libpng/contrib/pngminim/encoder/gather.sh /trunk/ghostpdl/xps/xpspath.c base/unix-gcc.mak libpng/scripts/makefile.sgi base/gp_unifn.c base/macos-mcp.mak libpng/scripts/makefile.sco libpng/scripts/makefile.hpgcc /trunk/ghostpdl/main/pcl6_msvc.mak libpng/KNOWNBUG libpng/projects/xcode/libpng.xcodeproj/project.pbxproj libpng/scripts/pngos2.def base/macosx.mak libpng/scripts/makefile.nommx libpng/scripts/makefile.linux jpeg/config.guess base/unixansi.mak libpng/pngmem.c base/msvclib.mak libpng/png.c libpng/contrib/pngminim/decoder/gather.sh libpng/scripts/makefile.64sunu jpeg/config.sub libpng/scripts/libpng-config-head.in libpng/scripts/makefile.elf libpng/png.h base/lib.mak libpng/CMakeLists.txt libpng/pngrio.c libpng/Y2KINFO libpng/pngpread.c libpng/scripts/makefile.netbsd /trunk/ghostpdl/xps/xps_msvc.mak libpng/pngwio.c libpng/pngrutil.c libpng/scripts/makefile.hpux libpng/scripts/makefile.darwin libpng/scripts/makefile.sggcc /trunk/ghostpdl/xps/xpsglyphs.c libpng/README doc/Make.htm libpng/contrib/pngminim/decoder/makefile libpng/scripts/makefile.32sunu libpng/libpngpf.3 libpng/scripts/makefile.solaris-x86 /trunk/ghostpdl/language_switch/pspcl6_msvc.mak libpng/libpng-1.2.42.txt libpng/contrib/pngminim/preader/makefile libpng/libpng-1.2.44.txt libpng/scripts/makefile.solaris base/Makefile.in libpng/pngwtran.c libpng/contrib/pngminim/preader/gather.sh /trunk/ghostpdl/xps/xpstile.c /trunk/ghostpdl/xps/xpsgradient.c libpng/scripts/makefile.hp64 base/gs_dll_call.h libpng/scripts/makefile.aix libpng/scripts/makefile.mingw libpng/scripts/png32ce.def /trunk/ghostpdl/common/msvc_top.mak libpng/scripts/makefile.beos base/watclib.mak /trunk/ghostpdl/xps/xpsopacity.c libpng/scripts/makefile.ne12bsd libpng/pngread.c /trunk/ghostpdl/xps/xpspage.c libpng/scripts/pngw32.def libpng/pngget.c libpng/INSTALL libpng/scripts/makefile.cegcc libpng/CHANGES libpng/contrib/pngminim/encoder/makefile libpng/libpng.3 libpng/example.c libpng/projects/wince.txt base/bcwin32.mak libpng/scripts/makefile.so9 libpng/pngconf.h libpng/pngwrite.c libpng/pngset.c libpng/LICENSE libpng/png.5 libpng/pngwutil.c base/openvms.mak base/gdevxcmp.c libpng/scripts/makefile.openbsd libpng/scripts/makefile.dec base/watcw32.mak base/unix-dll.mak libpng/scripts/README.txt libpng/scripts/makefile.cygwin psi/msvc32.mak libpng/pngtest.c libpng/ANNOUNCE /trunk/ghostpdl/xps/xpsimage.c libpng/scripts/libpng.pc.in]</p>
</blockquote>

<p><strong><a name="2010-06-29T070829.009258Z"></a>
2010-06-29T07:08:29.009258Z Hin-Tak Leung</strong></p>
<blockquote>
<pre>
more cygwin/mingw-related patches from Jan Nieuwenhuizen (lilypond/gub) ; this one depends on features of GNU make, so it is added as comments to avoid breaking build with non-GNU make</pre>
<p>[base/unix-dll.mak]</p>
</blockquote>

<p><strong><a name="2010-06-29T070545.877229Z"></a>
2010-06-29T07:05:45.877229Z Hin-Tak Leung</strong></p>
<blockquote>
<pre>
avoid re-define _Windows if it is already defined; one of the cygwin/mingw-related patches from Jan Nieuwenhuizen (lilypond/gub)</pre>
<p>[base/gs_dll_call.h]</p>
</blockquote>

<p><strong><a name="2010-06-29T070425.796552Z"></a>
2010-06-29T07:04:25.796552Z Hin-Tak Leung</strong></p>
<blockquote>
<pre>
cygwin is one platform which uses the unix file name interface but is sensitive to binary/text mode; one of the cygwin/mingw-related patches from Jan Nieuwenhuizen (lilypond/gub)</pre>
<p>[base/gp_unifn.c]</p>
</blockquote>

<p><strong><a name="2010-06-29T064759.438186Z"></a>
2010-06-29T06:47:59.438186Z Hin-Tak Leung</strong></p>
<blockquote>
<pre>
gx_device_has_color() was changed 8 years ago in the deviceN commit (r2925),
from just color_info.numcomponents &gt; 1 to 
|| (dev)-&gt;color_info.gray_index == GX_CINFO_COMP_NO_INDEX .

This has some unfortunate side-effect for continuous tone gray devices which
doesn't support transparency, such as a 8-bit gray X11 display, which goes
down the wrong code path. These are quite rare so it took 7 years for the bug 
(bug 690428) to be seen.

</pre>
<p>[base/gdevxcmp.c]</p>
</blockquote>

<p><strong><a name="2010-06-29T060526.121392Z"></a>
2010-06-29T06:05:26.121392Z Hin-Tak Leung</strong></p>
<blockquote>
<pre>
updating jpeg config.sub config.guess to that from libpng 1.2.44; bug 690486</pre>
<p>[jpeg/config.guess jpeg/config.sub]</p>
</blockquote>

<p><strong><a name="2010-06-29T053019.407679Z"></a>
2010-06-29T05:30:19.407679Z Hin-Tak Leung</strong></p>
<blockquote>
<pre>
apply diff between stock 1.2.42 &lt;-&gt; 1.2.44 to upgrade to libpng 1.2.44 - bug fixes - CVE-2010-1205</pre>
<p>[libpng/pngrtran.c libpng/scripts/makefile.gcmmx libpng/contrib/pngminim/encoder/gather.sh libpng/scripts/makefile.sgi libpng/scripts/makefile.sco libpng/scripts/makefile.hpgcc libpng/KNOWNBUG libpng/projects/xcode/libpng.xcodeproj/project.pbxproj libpng/scripts/pngos2.def libpng/scripts/makefile.nommx libpng/scripts/makefile.linux libpng/pngmem.c libpng/png.c libpng/contrib/pngminim/decoder/gather.sh libpng/scripts/makefile.64sunu libpng/scripts/makefile.elf libpng/scripts/libpng-config-head.in libpng/png.h libpng/CMakeLists.txt libpng/pngrio.c libpng/pngpread.c libpng/Y2KINFO libpng/scripts/makefile.netbsd libpng/pngwio.c libpng/pngrutil.c libpng/scripts/makefile.hpux libpng/scripts/makefile.darwin libpng/scripts/makefile.sggcc libpng/README libpng/contrib/pngminim/decoder/makefile libpng/scripts/makefile.32sunu libpng/libpngpf.3 libpng/scripts/makefile.solaris-x86 libpng/libpng-1.2.42.txt libpng/libpng-1.2.44.txt libpng/contrib/pngminim/preader/makefile libpng/scripts/makefile.solaris libpng/pngwtran.c libpng/contrib/pngminim/preader/gather.sh libpng/scripts/makefile.mingw libpng/scripts/makefile.aix libpng/scripts/makefile.hp64 libpng/scripts/png32ce.def libpng/scripts/makefile.beos libpng/scripts/makefile.ne12bsd libpng/pngread.c libpng/scripts/pngw32.def libpng/pngget.c libpng/INSTALL libpng/scripts/makefile.cegcc libpng/CHANGES libpng/contrib/pngminim/encoder/makefile libpng/libpng.3 libpng/projects/wince.txt libpng/example.c libpng/scripts/makefile.so9 libpng/pngwrite.c libpng/pngconf.h libpng/pngset.c libpng/LICENSE libpng/png.5 libpng/pngwutil.c libpng/scripts/makefile.openbsd libpng/scripts/makefile.dec libpng/scripts/README.txt libpng/scripts/makefile.cygwin libpng/pngtest.c libpng/ANNOUNCE libpng/scripts/libpng.pc.in]</p>
</blockquote>

<p><strong><a name="2010-06-29T052507.282125Z"></a>
2010-06-29T05:25:07.282125Z Hin-Tak Leung</strong></p>
<blockquote>
<pre>
change documentation as --enable-dynamics is no longer required for &quot;make so&quot; to work</pre>
<p>[doc/Make.htm]</p>
</blockquote>

<p><strong><a name="2010-06-29T052009.043972Z"></a>
2010-06-29T05:20:09.043972Z Hin-Tak Leung</strong></p>
<blockquote>
<pre>
split lcms code build into arch-specific targets; try to make both windows inline assembly and unix &quot;make so&quot; work simultaneously; bug 691427</pre>
<p>[base/watclib.mak base/lib.mak base/bcwin32.mak base/openvms.mak base/ugcclib.mak base/macosx.mak base/watcw32.mak base/Makefile.in base/unix-gcc.mak base/unixansi.mak psi/msvc32.mak base/macos-mcp.mak base/msvclib.mak]</p>
</blockquote>

<p><strong><a name="2010-06-29T051638.524502Z"></a>
2010-06-29T05:16:38.524502Z Hin-Tak Leung</strong></p>
<blockquote>
<pre>
move the DYNAMIC_* defines out of the --enable-dynamic condition so that it applies generally; try to &quot;make so&quot; work with just ./configure ; many bugs ask for make so to work</pre>
<p>[base/configure.ac]</p>
</blockquote>

<p><strong><a name="2010-06-29T043410.440639Z"></a>
2010-06-29T04:34:10.440639Z Hin-Tak Leung</strong></p>
<blockquote>
<pre>
switch autoconf png test away from testing for a soon-to-be-obsolete routine to one we actually use, to smooth over the libpng 1.2.x to 1.4.x transition; bug 691111</pre>
<p>[jbig2dec/configure.ac base/configure.ac]</p>
</blockquote>

<p><strong><a name="2010-06-29T041547.742872Z"></a>
2010-06-29T04:15:47.742872Z Hin-Tak Leung</strong></p>
<blockquote>
<pre>
make --disable-fontconfig imples --disable-cairo; bug 690690</pre>
<p>[base/configure.ac]</p>
</blockquote>

<p><strong><a name="2010-06-29T040453.158322Z"></a>
2010-06-29T04:04:53.158322Z Hin-Tak Leung</strong></p>
<blockquote>
<pre>
tries to remove empty *obj/*bin directories when invoking &quot;make distclean&quot;; bug 690871</pre>
<p>[base/unix-end.mak base/Makefile.in base/unix-dll.mak base/unix-gcc.mak base/unixansi.mak]</p>
</blockquote>

<p><strong><a name="2010-06-29T034817.519902Z"></a>
2010-06-29T03:48:17.519902Z Hin-Tak Leung</strong></p>
<blockquote>
<pre>
check for GNU sed and switch to alternative sed options if sed is non-GNU; bug 691292</pre>
<p>[cups/pstopxl.in base/configure.ac]</p>
</blockquote>

<p><strong><a name="2010-06-29T034430.895095Z"></a>
2010-06-29T03:44:30.895095Z Hin-Tak Leung</strong></p>
<blockquote>
<pre>
Part 2 of update (new files) posted to 687983, corrected for current svn HEAD.</pre>
<p>[contrib/pscolor/black.pdf contrib/pscolor/color.pdf contrib/pscolor/colorsplit.vcproj contrib/pscolor/black.ps contrib/pscolor/color.ps contrib/pscolor/common.mak contrib/pscolor/input.ps contrib/pscolor/windows.mak]</p>
</blockquote>

<p><strong><a name="2010-06-29T034118.718227Z"></a>
2010-06-29T03:41:18.718227Z Hin-Tak Leung</strong></p>
<blockquote>
<pre>
Part 1 of the update (modifications to checked-in files) 
to the pscolor code posted in 687983, corrected for current svn head.

</pre>
<p>[contrib/pscolor/Makefile contrib/pscolor/test.c contrib/pscolor/instream.yy]</p>
</blockquote>

<p><strong><a name="2010-06-29T033846.508455Z"></a>
2010-06-29T03:38:46.508455Z Hin-Tak Leung</strong></p>
<blockquote>
<pre>
ijs communication should be all binary; left-over uncommitted patch from past ijs-related work</pre>
<p>[ijs/ijs_server_example.c]</p>
</blockquote>

<p><strong><a name="2010-06-29T033445.878285Z"></a>
2010-06-29T03:34:45.878285Z Hin-Tak Leung</strong></p>
<blockquote>
<pre>
implements ./configure --with-ufst=UFST_ROOT_DIR ; bug 691293</pre>
<p>[doc/Make.htm base/Makefile.in base/configure.ac]</p>
</blockquote>

<p><strong><a name="2010-06-29T023238.254860Z"></a>
2010-06-29T02:32:38.254860Z Michael Vrhel</strong></p>
<blockquote>
<pre>
Removal of static prototype that has no function.</pre>
<p>[base/gsicc_cache.c]</p>
</blockquote>

<p><strong><a name="2010-06-29T005032.521441Z"></a>
2010-06-29T00:50:32.521441Z Michael Vrhel</strong></p>
<blockquote>
<pre>
Fix lack of end-of-line in file.</pre>
<p>[base/gsicc_littlecms.c]</p>
</blockquote>

<p><strong><a name="2010-06-28T150431.998704Z"></a>
2010-06-28T15:04:31.998704Z Henry Stiles</strong></p>
<blockquote>
<pre>
Fix a typo, thanks to Ken for spotting this in review.
</pre>
<p>[base/gxpcmap.c]</p>
</blockquote>

<p><strong><a name="2010-06-28T105053.201708Z"></a>
2010-06-28T10:50:53.201708Z Michael Vrhel</strong></p>
<blockquote>
<pre>
Warnings of problems within lcms only occur now in debug mode.  Fix for Bug 691401</pre>
<p>[base/gsicc_littlecms.c]</p>
</blockquote>

<p><strong><a name="2010-06-28T051659.820980Z"></a>
2010-06-28T05:16:59.820980Z Michael Vrhel</strong></p>
<blockquote>
<pre>
Interface with lcms so that the memory allocators make use of ghostscript's allocator.  This required fixing a few bugs in littlecms where he was using free instead of _cmsFree and also having lcms.h provide the prototypes if the external mem alloc is defined.  Performed cluster push with no problem.  Thanks to Henry for helping me track down a 64 bit issue.</pre>
<p>[lcms/include/lcms.h base/lib.mak lcms/src/cmslut.c base/lcms.mak lcms/src/cmsio1.c base/gsicc_littlecms.c]</p>
</blockquote>

<p><strong><a name="2010-06-26T200613.718954Z"></a>
2010-06-26T20:06:13.718954Z Henry Stiles</strong></p>
<blockquote>
<pre>
The ad hoc gstate setup for patterns should not call grestore after
gsave when erasing colored patterns because it results in
&quot;wraparound&quot;, creating another gstate (no saved gstate exists when the
pattern is painted), see gsstate.c:gs_grestore() vs
gsstate.c:gs_grestore_only().  Thanks to Ken Sharp for noticing the the
extra gstate.  No expected differences.
</pre>
<p>[base/gxpcmap.c]</p>
</blockquote>

<p><strong><a name="2010-06-26T175906.494303Z"></a>
2010-06-26T17:59:06.494303Z Henry Stiles</strong></p>
<blockquote>
<pre>
This file should have been checked in with revision 11433 which will
not compile without this change.
</pre>
<p>[base/gdevpxat.h]</p>
</blockquote>

<p><strong><a name="2010-06-25T120050.643763Z"></a>
2010-06-25T12:00:50.643763Z Chris Liddell</strong></p>
<blockquote>
<pre>
Provide more robust behaviour when FT fails to render a glyph. Inistead of silently continuing when FT errors on a glyph, we'll now attempt to use the notdef, if the notdef triggers an error, we signal the error to the GS world. This ensures that any time we expect processing to continue there is valid glyph information available to the cache and other downstream devices.

This causes one regression difference with 34_all.PS, where an extra TTF notdef is rendered.

Bug 691416</pre>
<p>[psi/fapi_ft.c]</p>
</blockquote>

<p><strong><a name="2010-06-24T071111.011423Z"></a>
2010-06-24T07:11:11.011423Z Ken Sharp</strong></p>
<blockquote>
<pre>
Remove a couple of currently unused variables to silence a harmless compiler warning.
</pre>
<p>[base/gdevpsft.c]</p>
</blockquote>

<p><strong><a name="2010-06-23T171440.891928Z"></a>
2010-06-23T17:14:40.891928Z Alex Cherepanov</strong></p>
<blockquote>
<pre>
Simplify and fix the implementation of operator --mul--, which mishandled 
some cases like &quot;16#80000000 -1 mul&quot;. Bug 691412.
</pre>
<p>[psi/zarith.c]</p>
</blockquote>

<p><strong><a name="2010-06-23T155639.786311Z"></a>
2010-06-23T15:56:39.786311Z Ken Sharp</strong></p>
<blockquote>
<pre>
This patch adds limited support for TrueType collection fonts to pdfwrite and ps2write.

In the PostScript world TTC fonts are never passed down to pdfwrite, we only ever see
TrueType fonts. XPS, however, can pass back TrueType collection SNFTS data. This patch
uses the first font from the TrueType collection and writes that to the output file.
This may be too limited and may require further work in future.

</pre>
<p>[base/gdevpsft.c]</p>
</blockquote>

<p><strong><a name="2010-06-23T143308.852324Z"></a>
2010-06-23T14:33:08.852324Z Michael Vrhel</strong></p>
<blockquote>
<pre>
Fix for bug691415.  When equivalent ICC profile is already created we should just use it.  Thanks to Ken for getting the details together.</pre>
<p>[base/gscsepr.c]</p>
</blockquote>

<p><strong><a name="2010-06-23T050213.734047Z"></a>
2010-06-23T05:02:13.734047Z Michael Vrhel</strong></p>
<blockquote>
<pre>
Fix for 691359. Problem tracked down by Alex.  

What lcms is trying to do is to figure out the best prelinearization for the incoming data prior to doing the CLUT interpolation.  In the case when the input is RGB based and the output Gray, lcms was using uninitialized data in constructing is prelinearization.

Tangentially related, there could still be problems with what lcms is doing here if the number of Input channels is 1 and the number of Output channels is 3.  In that case, it is possible (but not likely) that I could have radically different gamma behavior in each of the RGB channels.  Trans in such a case would be constructed based upon only one curve based on the red channel.   In the real world, this is probably not a problem but ideally it would be optimal to use something that provides the best prelinearization in all three channels.  That is an optimization for Marti to do and perhaps is already in lcms2.</pre>
<p>[lcms/src/cmsgmt.c]</p>
</blockquote>

<p><strong><a name="2010-06-22T145459.999510Z"></a>
2010-06-22T14:54:59.999510Z Henry Stiles</strong></p>
<blockquote>
<pre>
Erase patterns with the color white instead of filling the pattern
bitmap with 0 or 255.  

Previously the initialization was only used when anti aliasing was
enabled, now initial erasing is done for all colored patterns,
eliminating a long standing UMR in the pcl code where the pattern was
combined with the destination/source with indeterminate results.  The
UMR manifested in frequent regression reports in the pcl tests
(c321.bin for example), these reports should go away with this change,
though (NB) the change only masks the underlying issue.

</pre>
<p>[psi/zpcolor.c base/gxpcmap.c base/gxpcolor.h]</p>
</blockquote>

<p><strong><a name="2010-06-22T061254.377174Z"></a>
2010-06-22T06:12:54.377174Z Masaki Ushizaka</strong></p>
<blockquote>
<pre>
Fix for bug 689836 and 691248.

Bug 689836 - Huffman tables with only positive values are decoded incorrectly
Bug 691248 - jbig2dec doesn't handle 042_11 (Huffman Symbol Region)

This patch fixes mulfunctions seen on standard huffman table K, L, M and N.
A difference will be seen on tests_private/comparefiles/Bug690360.pdf.
This file was affected by table K mulfunction and this is a improvement.

</pre>
<p>[jbig2dec/jbig2_hufftab.h]</p>
</blockquote>

<p><strong><a name="2010-06-22T060012.605983Z"></a>
2010-06-22T06:00:12.605983Z Alex Cherepanov</strong></p>
<blockquote>
<pre>
Revert rev. 7964 and use a different approach: allocate all structures
and proceed with their initialization only if all allocations were
successful. Fix memory corruption that happens at the PostScript
stack overflow. Bug 691295.
</pre>
<p>[psi/idosave.h psi/ialloc.c psi/isave.c]</p>
</blockquote>

<p><strong><a name="2010-06-22T055923.952778Z"></a>
2010-06-22T05:59:23.952778Z Masaki Ushizaka</strong></p>
<blockquote>
<pre>
Added test code for every line of each standard huffman tables.

</pre>
<p>[jbig2dec/jbig2_huffman.c]</p>
</blockquote>

<p><strong><a name="2010-06-22T051553.089456Z"></a>
2010-06-22T05:15:53.089456Z Alex Cherepanov</strong></p>
<blockquote>
<pre>
Add a /.notdef entry to /CharStrings dictionary if it's missing from an
embedded Type1 font. Bug 691406, customer 130.
</pre>
<p>[Resource/Init/pdf_font.ps]</p>
</blockquote>

<p><strong><a name="2010-06-21T164155.147464Z"></a>
2010-06-21T16:41:55.147464Z Michael Vrhel</strong></p>
<blockquote>
<pre>
Removal of improper error message.  Source of a potential access violation.</pre>
<p>[base/gsicc_manage.c]</p>
</blockquote>

<p><strong><a name="2010-06-21T150703.992218Z"></a>
2010-06-21T15:07:03.992218Z Ken Sharp</strong></p>
<blockquote>
<pre>
Add the 'gs_error_Remap_Color' pseudo-error, a duplicate -f e_Remap_Color in the
PostScript interpreter, to the 'base' error list so that PDL clients other than
PostScript can make use of it for high-level pattern support.
</pre>
<p>[base/gserrors.h]</p>
</blockquote>

<p><strong><a name="2010-06-21T011418.832712Z"></a>
2010-06-21T01:14:18.832712Z Hin-Tak Leung</strong></p>
<blockquote>
<pre>
auto-detect host as *BSD and use a differently named obj directory; no effect on non-*BSDs. fixes bug 687214</pre>
<p>[base/Makefile.in base/configure.ac]</p>
</blockquote>

<p><strong><a name="2010-06-21T003243.898825Z"></a>
2010-06-21T00:32:43.898825Z Hin-Tak Leung</strong></p>
<blockquote>
<pre>
adding more borland-related build tips; part of borland build fixes (bug 691400)</pre>
<p>[doc/Make.htm]</p>
</blockquote>

<p><strong><a name="2010-06-21T001242.541103Z"></a>
2010-06-21T00:12:42.541103Z Hin-Tak Leung</strong></p>
<blockquote>
<pre>
got some garbage in the beginning of the file introduced in an earlier commit</pre>
<p>[doc/Install.htm]</p>
</blockquote>

<p><strong><a name="2010-06-21T000112.712437Z"></a>
2010-06-21T00:01:12.712437Z Hin-Tak Leung</strong></p>
<blockquote>
<pre>
nsis-based installer script, makefile adaptation, documentation update; bug 691363</pre>
<p>[psi/winint.mak doc/Release.htm psi/nsisinst.nsi doc/Install.htm]</p>
</blockquote>

<p><strong><a name="2010-06-20T233847.757390Z"></a>
2010-06-20T23:38:47.757390Z Hin-Tak Leung</strong></p>
<blockquote>
<pre>
borland build fix (bug 691400): borland defines P_tmpdir but not _P_tmpdir; similiar difference between borlandc and msvc has been seen with setmode/_setmode in the ijs code in ijs/ijs_server.c</pre>
<p>[jasper/src/libjasper/base/jas_stream.c]</p>
</blockquote>

<p><strong><a name="2010-06-20T233224.162240Z"></a>
2010-06-20T23:32:24.162240Z Hin-Tak Leung</strong></p>
<blockquote>
<pre>
borland build fix (bug 691400): update and complete documentation on working around for too-many-warnings-equal-error problem of borland c++</pre>
<p>[doc/Make.htm]</p>
</blockquote>

<p><strong><a name="2010-06-20T232934.775566Z"></a>
2010-06-20T23:29:34.775566Z Hin-Tak Leung</strong></p>
<blockquote>
<pre>
borland fix (bug 691400): Borland c++ does not support c99 LL nor ULL, but use i64/ui64 like MSVC for 64-bit integer literals</pre>
<p>[base/sha2.c]</p>
</blockquote>

<p><strong><a name="2010-06-20T231137.618908Z"></a>
2010-06-20T23:11:37.618908Z Hin-Tak Leung</strong></p>
<blockquote>
<pre>
 4 borland build fixes (bug 691400):

- hook up libtiff
- build mkromfs
- build import library *.lib corresponding to the dll
- build the split-out make_filelist (see also r11388 for Bug 691302,
which does it for msvc)

</pre>
<p>[base/bcwin32.mak]</p>
</blockquote>

<p><strong><a name="2010-06-20T230349.551572Z"></a>
2010-06-20T23:03:49.551572Z Hin-Tak Leung</strong></p>
<blockquote>
<pre>
borland build does not create the obj and bin directories. part of borland build fix (691400)</pre>
<p>[base/bcwin32.mak]</p>
</blockquote>

<p><strong><a name="2010-06-20T225732.647408Z"></a>
2010-06-20T22:57:32.647408Z Hin-Tak Leung</strong></p>
<blockquote>
<pre>
defines a unix target, since win32 requires specific compiler flags; HP-UX make/MS nmake both issues a warning and borland make issues an error for duplicate targets; fixes bug 691337, and also part of the problems with borland build (bug 691400)</pre>
<p>[base/libtiff.mak]</p>
</blockquote>

<p><strong><a name="2010-06-20T034503.823204Z"></a>
2010-06-20T03:45:03.823204Z Alex Cherepanov</strong></p>
<blockquote>
<pre>
Fix malformed ICC profile generation on big endian systems, which was caused
by confusion between internal and external representation of an integer.
</pre>
<p>[base/gsicc_create.c]</p>
</blockquote>

<p><strong><a name="2010-06-20T030150.289956Z"></a>
2010-06-20T03:01:50.289956Z Alex Cherepanov</strong></p>
<blockquote>
<pre>
Don't leave wild bytes at the end of a generated ICC profile. Fix Valgrind
warnings and spurious hash value differences.
</pre>
<p>[base/gsicc_create.c]</p>
</blockquote>

<p><strong><a name="2010-06-18T235923.662717Z"></a>
2010-06-18T23:59:23.662717Z Michael Vrhel</strong></p>
<blockquote>
<pre>
Fix so that when the CIE color spaces are released, the icc equivalent space is also rc decremented as is the profile.</pre>
<p>[base/gscscie.c]</p>
</blockquote>

<p><strong><a name="2010-06-18T180659.517404Z"></a>
2010-06-18T18:06:59.517404Z Michael Vrhel</strong></p>
<blockquote>
<pre>
Fix for memory leak in creation of icc profile from def(g) objects.</pre>
<p>[base/gsicc_create.c]</p>
</blockquote>

<p><strong><a name="2010-06-18T020013.716745Z"></a>
2010-06-18T02:00:13.716745Z Alex Cherepanov</strong></p>
<blockquote>
<pre>
Use operator --search-- instead of --token-- during PDF rebuilding
to reduce the load on the name table, slightly improve the speed, and
work around the bug 691005 in a few cases.
</pre>
<p>[Resource/Init/pdf_rbld.ps]</p>
</blockquote>

<p><strong><a name="2010-06-17T202333.279930Z"></a>
2010-06-17T20:23:33.279930Z Hin-Tak Leung</strong></p>
<blockquote>
<pre>
adjust self-reference of bswin32.mak to correct location. Part 1 of fix to bug 691400</pre>
<p>[base/bcwin32.mak]</p>
</blockquote>

<p><strong><a name="2010-06-17T200330.325885Z"></a>
2010-06-17T20:03:30.325885Z Hin-Tak Leung</strong></p>
<blockquote>
<pre>
mentioning -P-/-P and further reference to the INITIALIZATION FILES and Use.htm in the man page. bug 691350</pre>
<p>[man/gs.1]</p>
</blockquote>

<p><strong><a name="2010-06-17T194605.887718Z"></a>
2010-06-17T19:46:05.887718Z Michael Vrhel</strong></p>
<blockquote>
<pre>
add missing type def for gsicc_create_mashed_clut</pre>
<p>[base/gsicc_create.c]</p>
</blockquote>

<p><strong><a name="2010-06-17T193839.362075Z"></a>
2010-06-17T19:38:39.362075Z Hin-Tak Leung</strong></p>
<blockquote>
<pre>
split make_filelist functionality out of setupgs, to allow UAC restriction during packaging of the installer. Bug 691302</pre>
<p>[psi/dwsetup.cpp psi/winint.mak psi/msvc32.mak psi/mkfilelt.cpp]</p>
</blockquote>

<p><strong><a name="2010-06-17T193128.160475Z"></a>
2010-06-17T19:31:28.160475Z Hin-Tak Leung</strong></p>
<blockquote>
<pre>
add info about silent batch installation; bug 691268</pre>
<p>[doc/Install.htm]</p>
</blockquote>

<p><strong><a name="2010-06-17T192820.229863Z"></a>
2010-06-17T19:28:20.229863Z Michael Vrhel</strong></p>
<blockquote>
<pre>
rc_decrement any icc objects that may exist in the imager state that was created for handling the conversion from PS CIE objects to ICC profiles.</pre>
<p>[base/gscie.c]</p>
</blockquote>

<p><strong><a name="2010-06-17T180435.295987Z"></a>
2010-06-17T18:04:35.295987Z Michael Vrhel</strong></p>
<blockquote>
<pre>
Free up tag list when done creating icc profile from PDF cal type.</pre>
<p>[base/gsicc_create.c]</p>
</blockquote>

<p><strong><a name="2010-06-17T171334.616951Z"></a>
2010-06-17T17:13:34.616951Z Michael Vrhel</strong></p>
<blockquote>
<pre>
Change to help track down any memory leaks related to the new icc code.  Also fix so that gs_init_iccmanager copies the null character from the default profile string names.  There was a mismatch between what happened here and what happens when the default user params are set.  This was causing the profiles to reset in the manager when they did not need to be.</pre>
<p>[base/gsicc_manage.c]</p>
</blockquote>

<p><strong><a name="2010-06-17T092018.689467Z"></a>
2010-06-17T09:20:18.689467Z Ken Sharp</strong></p>
<blockquote>
<pre>
Fix (FAPI) move two FAPI related members from the show enumerator structure to the text
enumerator structure. This ensures that these members are always available for rendering
and eliminates a GPF caused when a device's text_begin method returns a text enumerator 
rather than the show enumerator returned by gx_default_text_begin.

No differences expected.
</pre>
<p>[base/gxchar.h base/gxtext.h]</p>
</blockquote>

<p><strong><a name="2010-06-16T061125.298134Z"></a>
2010-06-16T06:11:25.298134Z Hin-Tak Leung</strong></p>
<blockquote>
<pre>
a few more CRLF eol and svn property corrections</pre>
<p>[zlib/contrib/dotzlib/LICENSE_1_0.txt zlib/contrib/vstudio/readme.txt zlib/contrib/masmx64/readme.txt base/gsicc_cache.h base/gsicc_manage.c base/gsicc_manage.h zlib/projects/visualc6/README.txt zlib/contrib/dotzlib/readme.txt]</p>
</blockquote>

<p><strong><a name="2010-06-15T171715.944441Z"></a>
2010-06-15T17:17:15.944441Z Michael Vrhel</strong></p>
<blockquote>
<pre>
Rename of a few functions to match documentation, update of gdevwts.c to use new color architecture, addition of minor utility functions for use in gxps.  This should not generate regressions.</pre>
<p>[base/lib.mak base/gsicc_littlecms.h base/gsicc_cache.h base/gsicc_manage.c base/gscms.h base/gdevwts.c base/gsicc_manage.h base/gsicc_littlecms.c]</p>
</blockquote>

<p><strong><a name="2010-06-15T165440.171304Z"></a>
2010-06-15T16:54:40.171304Z Michael Vrhel</strong></p>
<blockquote>
<pre>
Update of Color Architecture document in preparation for release of GS 9.0</pre>
<p>[doc/Color_Architecture.tex doc/figures/XPS_Integer_Gray_RGB_Image.eps doc/figures/Overview.eps doc/figures/XPS_DeviceN.eps doc/figures/PDF_Render.eps doc/figures/XPS_Render.eps doc/GS9_Color_Management.pdf doc/figures/XPS_Vector_Color.eps doc/figures/XPS_RGB_Image_Float.eps doc/figures/PS_Spec.eps doc/Color_Architecture.pdf doc/GS9_Color_Management.tex doc/figures/PS_Render.eps doc/figures/PDF_Spec.eps]</p>
</blockquote>

<p><strong><a name="2010-06-14T231027.633844Z"></a>
2010-06-14T23:10:27.633844Z Henry Stiles</strong></p>
<blockquote>
<pre>
Modified line endings from CRLF -&gt; LF and propset to native.
</pre>
<p>[base/gsicc_cache.c base/gsicc_cache.h base/gsicc_manage.c base/gsicc_manage.h]</p>
</blockquote>

<p><strong><a name="2010-06-14T184247.881614Z"></a>
2010-06-14T18:42:47.881614Z Alex Cherepanov</strong></p>
<blockquote>
<pre>
Fix yet another case where memcpy() copies a memory block on itself.
This doesn't cause any problems on Linux or Windows but violates the
spec and irks Valgrind. Bug 691394.
</pre>
<p>[base/gsline.c]</p>
</blockquote>

<p><strong><a name="2010-06-14T180749.834071Z"></a>
2010-06-14T18:07:49.834071Z Chris Liddell</strong></p>
<blockquote>
<pre>
Remove the &quot;&lt;font&gt; is being rendered with FAPI=&lt;renderer&gt;&quot; messages. But leave a warning if we fall back to the old GS renderer.</pre>
<p>[Resource/Init/gs_fapi.ps]</p>
</blockquote>

<p><strong><a name="2010-06-14T111907.131026Z"></a>
2010-06-14T11:19:07.131026Z Ken Sharp</strong></p>
<blockquote>
<pre>
Fix (pdfwrite) : limit composite object sizes when producing PDF/A

Bug #691370 &quot;Dictionary size not limited for PDF/A-1&quot;

The PDF/A specification insists that the implementation limitations of Acrobat as
defined in PDF 1.4 should be followed when producing PDF/A files. Accordingly this
limits the size of dictionaries to 4095 and arrays to 8191 when producing PDF/A output.

Since there is no way to ignore the problem, setting the PDFACompatibiltyPolicy to 1
'don't emit the object, carry on producing PDF/A' can't be made to work. Since the 
user has expressed a desire for an output file, we fall back to Policy 0 'Produce a
regular PDF file' instead.

Also extend PDFACompatibilityPolicy to include policy 2 'abort'.

No test file for this case, no differences expected.
</pre>
<p>[base/gdevpdfo.c]</p>
</blockquote>

<p><strong><a name="2010-06-14T111418.794921Z"></a>
2010-06-14T11:14:18.794921Z Ken Sharp</strong></p>
<blockquote>
<pre>
Extend to PDF/X emission the enhancement in revision 11369 which prevents emitting
invalid PDF/A files when glyphs are missing from fonts.
</pre>
<p>[base/gdevpdte.c]</p>
</blockquote>

<p><strong><a name="2010-06-14T111240.380849Z"></a>
2010-06-14T11:12:40.380849Z Ken Sharp</strong></p>
<blockquote>
<pre>
Update the ps2pdf documenataion to reflect the fact that PDF/X-3 conversion now also
uses the PDFACompatibilityPolicy to control behaviour when a conforming file cannot be
produced.

Also applied some general grammatical correction to the text.
</pre>
<p>[doc/Ps2pdf.htm]</p>
</blockquote>

<p><strong><a name="2010-06-14T093417.990404Z"></a>
2010-06-14T09:34:17.990404Z Ken Sharp</strong></p>
<blockquote>
<pre>
Fix (pdfwrite) : Don't emit invalid PDF/A files

Bug #691383 &quot;pdfwrite emits invalid PDF/A when glyphs are missing in the input font.&quot;

If the input file references glyphs which are not in the font, then we could emit a
PDF/A file which also referenced glyph which were not present in the fonts embedded
in the PDF file.

This patch uses the PDFACompatibilityPolicy to control the action in this case, and
avoid emitting invalid PDF/A files.

Also extended the functionality of the PDFACompatibilityPolicy to allow the user to 
abort PDF file production when a valid PDF/A file cannot be produced.

No expected differences as PDF/A production is not tested by regression code.
</pre>
<p>[base/gdevpdfm.c base/gdevpdte.c]</p>
</blockquote>

<p><strong><a name="2010-06-12T151956.267658Z"></a>
2010-06-12T15:19:56.267658Z Henry Stiles</strong></p>
<blockquote>
<pre>
The ICC profile file name buffer was too small to accommodate the
trailing null appended by strcat resulting in an invalid write to
memory.
</pre>
<p>[base/gsicc_manage.c]</p>
</blockquote>

<p><strong><a name="2010-06-11T172406.899434Z"></a>
2010-06-11T17:24:06.899434Z Chris Liddell</strong></p>
<blockquote>
<pre>
In the event of a FreeType error when scaling a font face, don't clean up the FT data, but leave it to the garbage collector
to call the font object's &quot;finalize&quot; function, which will then clean up the FT data.

Secondly, add code to deal with very low resolutions underflowing some of FT's fixed point code (similar to code for small
scale factors).

Bug 691381
</pre>
<p>[psi/fapi_ft.c]</p>
</blockquote>

<p><strong><a name="2010-06-11T075337.156852Z"></a>
2010-06-11T07:53:37.156852Z Ken Sharp</strong></p>
<blockquote>
<pre>
Fix pdfwrite - device reference counting problem with patterns and XPS

When using XPS as the input PDL, and pdfwrite as the output device, the pdfwrite device
was counted up by pattern accumulator allocation, but the clist accumulator never
counted the device down, leading to a reference count &gt; 1 at EOJ. This meant that
the pdfwrite device wasn't closed, since pdfwrite only emits the PDF file when it is
closed this led to invalid unfinished PDF files.

The code here modifies the behaviour of the pattern management so that we don't use the 
'clist' path for accumulating patterns *if* the device can accumulate patterns itself
*and* the PDL doesn't have_pattern_streams (to avoid pathological PDF file problems)

This resolves the issue with device reference counts and all the FTS XPS files now
produce complete PDF files.
</pre>
<p>[base/gxpcmap.c]</p>
</blockquote>

<p><strong><a name="2010-06-10T161108.241878Z"></a>
2010-06-10T16:11:08.241878Z Chris Liddell</strong></p>
<blockquote>
<pre>
When extracting a path from the FAPI world (for a charpath, for example), only close the path if it has been &quot;opened&quot;.

This prevents empty paths from non-marking glyphs resulting in a point being rendered on the page.

Another part of Bug 691252.

This change causes ~195 differences to be reported on the cluster, but they are all progressions.

</pre>
<p>[psi/zfapi.c]</p>
</blockquote>

<p><strong><a name="2010-06-10T140640.549557Z"></a>
2010-06-10T14:06:40.549557Z Chris Liddell</strong></p>
<blockquote>
<pre>
Make the rendering of the Truetype notdef glyph optional with the FAPI interface (as per the previous behaviour).

A few cluster differences are expected as we have test files which use the TTF notdef, I have checked all the differences, and they are correct.

This is part of Bug 691252

</pre>
<p>[psi/zfapi.c]</p>
</blockquote>

<p><strong><a name="2010-06-09T185909.419344Z"></a>
2010-06-09T18:59:09.419344Z Robin Watts</strong></p>
<blockquote>
<pre>
Update comparerevs.pl script so that it no longer ignores hash values
on files taht have a non-zero error return. It now only ignores hash
values on timeouts (because runs can easily produce different numbers of
pages on each run).

Also, the output is updated to show error values together with hash results.
Error values are now always in brackets, on a red background.

</pre>
<p>[toolbin/localcluster/comparerevs.pl]</p>
</blockquote>

<p><strong><a name="2010-06-08T162039.058317Z"></a>
2010-06-08T16:20:39.058317Z Chris Liddell</strong></p>
<blockquote>
<pre>
In bytes_copy_rectangle() clamp the length of each row to be copied to the stride of the raster. This takes care of problems copying bitmaps from FT (or potentially other font libraries) which use different alignment to the &quot;internal&quot; rasters. Bug 691328.</pre>
<p>[base/gsbitops.c]</p>
</blockquote>

<p><strong><a name="2010-06-08T010410.677952Z"></a>
2010-06-08T01:04:10.677952Z Alex Cherepanov</strong></p>
<blockquote>
<pre>
Check whether the font has /Encoding before trying to use it. Recent FAPI
changes give /BuildChar procedure to all fonts including CIDFont resources.
So the check for non-null pfdata-&gt;BuildChar no longer guaranteed that the
font has /Encoding. Bug 691311.
</pre>
<p>[psi/zchar.c]</p>
</blockquote>

<p><strong><a name="2010-06-07T171420.171809Z"></a>
2010-06-07T17:14:20.171809Z Michael Vrhel</strong></p>
<blockquote>
<pre>
Fix for Bug 691368.  

lcms appears not to check its handles of link transforms when a profile is released, to clear out xform-&gt;InputProfile.  Probably due to the fact that lcms may not expect a change of the formatters after the link is created.  That would imply that we would need to create links based upon data types, which is not so efficient.  Disable this check in lcms since it is only related to named color profiles, which we will not run into.  Will kick this up to Marti.</pre>
<p>[lcms/src/cmspack.c]</p>
</blockquote>

<p><strong><a name="2010-06-06T180036.332831Z"></a>
2010-06-06T18:00:36.332831Z Michael Vrhel</strong></p>
<blockquote>
<pre>
Fix for Bug 691367.  Seg fault should no longer occur.  If an attempt is made to set a color space in the graphic state and the ICC manager's profiles have not yet been initialized, it will be taken care of.  </pre>
<p>[base/gsicc_manage.c base/gscspace.c]</p>
</blockquote>

<p><strong><a name="2010-06-05T200355.912155Z"></a>
2010-06-05T20:03:55.912155Z Alex Cherepanov</strong></p>
<blockquote>
<pre>
Don't copy memory block into itself; clear a Valgrind warning.
</pre>
<p>[base/gsdparam.c]</p>
</blockquote>

<p><strong><a name="2010-06-05T192040.615579Z"></a>
2010-06-05T19:20:40.615579Z Michael Vrhel</strong></p>
<blockquote>
<pre>
Fix for indeterminisms in some PS files where the alternate tint transform color space for a DeviceN or Separation color space is CIE based.  Previously we were  returning either CMYK, or RGB based based upon the channel count for the CIE space.  Now we are returning an equivalent ICC based color space.  Also minor fix for uninitialized memory in generated profile.</pre>
<p>[base/gscdevn.c base/gsicc_create.c base/gscsepr.c]</p>
</blockquote>

<p><strong><a name="2010-06-03T165717.441589Z"></a>
2010-06-03T16:57:17.441589Z Hin-Tak Leung</strong></p>
<blockquote>
<pre>
observe minst-&gt;search_here_first condition in file search; bug 691350</pre>
<p>[psi/zfile.c]</p>
</blockquote>

<p><strong><a name="2010-06-03T003207.629281Z"></a>
2010-06-03T00:32:07.629281Z Hin-Tak Leung</strong></p>
<blockquote>
<pre>
Adding -P- and -dSAFER to many POSIX shell scripts, win32 and OS/2 batch scripts; bug 691355</pre>
<p>[lib/bjc610b4.upp lib/bjc610b6.upp lib/lp386.bat lib/bjc610b7.upp lib/bjc610b8.upp lib/gsndt.bat lib/pdf2dsc lib/eps2eps.bat lib/st640plg.upp lib/ras8m.upp lib/ras24.upp lib/pv.sh lib/bj8oh06n.upp lib/necp2x.upp lib/stc600p.upp lib/pfbtopfa.bat lib/stc640p.upp lib/wftopfa lib/ps2ps lib/stc2s_h.upp lib/stc500ph.upp lib/ps2ps.cmd lib/pphs lib/stcany_h.upp lib/pf2afm lib/gsdj500 lib/dnj750c.upp lib/pf2afm.cmd lib/stc600pl.upp lib/stc800pl.upp lib/gsbj lib/ps2epsi lib/ps2epsi.cmd lib/dnj750m.upp lib/dumphint lib/gsnd lib/font2c lib/gsdj.bat lib/pdfopt lib/ras32.upp lib/ps2ps2.bat lib/pdf2ps lib/ps2pdf.cmd lib/pdf2ps.cmd lib/stc500p.upp lib/cdj690.upp lib/stc600ih.upp lib/st640p.upp lib/stc_h.upp lib/gslj.bat lib/stcany.upp lib/stc800ih.upp lib/bdftops.bat lib/stc_l.upp lib/ras1.upp lib/gslp.bat lib/lpgs.bat lib/st640ihg.upp lib/ras3.upp lib/stc1520h.upp lib/ras4.upp lib/stc300.upp lib/bj8ts06n.upp lib/eps2eps lib/ps2ascii.bat lib/eps2eps.cmd lib/stc2_h.upp lib/pdf2dsc.bat lib/stc.upp lib/stc300bl.upp lib/stc300bm.upp lib/bj8pp12f.upp lib/pfbtopfa lib/stc800p.upp lib/bjc610a0.upp lib/bj8gc12f.upp lib/st640pg.upp lib/bjc610a1.upp lib/cdj690ec.upp lib/bjc610a2.upp lib/ps2ps.bat lib/bjc610a3.upp lib/bjc610a4.upp lib/bjc610a5.upp lib/bj8hg12f.upp lib/stc2.upp lib/st640pl.upp lib/bjc610a6.upp lib/printafm lib/bjc610a7.upp lib/pf2afm.bat lib/gsdj500.bat lib/bjc610a8.upp lib/ps2pdfxx.bat lib/lpr2.bat lib/lp386r2.bat lib/stc200_h.upp lib/unix-lpr.sh lib/gsdj lib/necp2x6.upp lib/ps2ps2 lib/ps2epsi.bat lib/gsbj.bat lib/bj8pa06n.upp lib/ps2ps2.cmd lib/dumphint.bat lib/cdj550.upp lib/gslj lib/gsnd.bat lib/font2c.bat lib/bdftops lib/pdfopt.bat lib/pdf2ps.bat lib/st640ih.upp lib/gslp lib/ps2pdfwr lib/bjc610b1.upp lib/bjc610b2.upp lib/dvipdf lib/ps2ascii lib/bjc610b3.upp lib/pftogsf.bat]</p>
</blockquote>

<p><strong><a name="2010-06-02T174539.111970Z"></a>
2010-06-02T17:45:39.111970Z Robin Watts</strong></p>
<blockquote>
<pre>
Introduce new ENABLE_TRAP_AMALGAMATION build define. If set at build time
then code is introduced to gxfillts.h to try to amalgamate some of the
rectangles produced into the surrounding trapezoids.

This can cause small rendering differences due to the difference in rounding
within scan conversion and trap extraction.

The option is disabled by default.

No expected differences with it disabled. 439 non pdfwrite differences, 99
differences with it enabled.

</pre>
<p>[base/gxfillts.h]</p>
</blockquote>

<p><strong><a name="2010-06-02T083707.985901Z"></a>
2010-06-02T08:37:07.985901Z Ken Sharp</strong></p>
<blockquote>
<pre>
Revision 11348 accidentally included a number of font definitions in an updated cidfmap, 
This removes those definitions, which should not be present.
</pre>
<p>[Resource/Init/cidfmap]</p>
</blockquote>

<p><strong><a name="2010-06-02T082923.801870Z"></a>
2010-06-02T08:29:23.801870Z Ken Sharp</strong></p>
<blockquote>
<pre>
Documentation change
Updated the comments at the head of the file to make it plain that the entries in the
CSI array must be strings, not names. Although this is clearly documented in use.htm
we have recently had several reports in which users have been trying to set name values
in the array. 

Also added a pointer to the documentation as a further hint.
</pre>
<p>[Resource/Init/cidfmap]</p>
</blockquote>

<p><strong><a name="2010-06-02T074657.542525Z"></a>
2010-06-02T07:46:57.542525Z Ken Sharp</strong></p>
<blockquote>
<pre>
Fix pdfwrite, faulty matrix transformations for Shading dictionaries

Bug #691352 &quot;cairo pdf mis-distilled&quot;

Patterns in PDF are unpleasantly complicated by the need to transform the pattern to
the 'default co-ordinate space'. Normally this means that we undo the resolution scaling
which is normally applied to the CTM.

For page streams this works well, but for forms the 'default co-ordinate space' is 
the space of the parent. For one level of form there is therefore no difference between
the page and the form. When forms are nested however, the lower form's space becomes
that of the parent. This means that patterns inside forms, which are nested inside
another form, need to be transformed to the parent form co-ordinate space, not the
page space.

Since we don't currently emit forms from pdfwrite for anything except transparency
groups what this means in practice is that we don't undo the CTM transformation if 
we are rendering a pattern inside a form, nested inside at least one other form.

</pre>
<p>[base/gdevpdfx.h base/gdevpdft.c base/gdevpdfv.c base/gdevpdfb.h]</p>
</blockquote>

<p><strong><a name="2010-06-01T174120.224359Z"></a>
2010-06-01T17:41:20.224359Z Michael Vrhel</strong></p>
<blockquote>
<pre>
Rename of gsicccache.c/h to gsicc_cache.c/h  and gsiccmanage.c/h to gsicc_manage.c/h to fall in line with the name space of the other files that came from the icc branch.  Currently working on the documentation and it is clear that this is needed (and I wish I had done it earlier).</pre>
<p>[/trunk/ghostpdl/pxl/pxpthr.c /trunk/ghostpdl/pxl/pxl.mak /trunk/ghostpdl/xps/ghostxps.h base/gsiccmanage.c base/gxshade1.c base/gsiccmanage.h base/gscsepr.c base/gxshade4.c base/gxshade6.c /trunk/ghostpdl/pxl/pxtop.c base/gxcmap.c ghostscript.vcproj base/gsistate.c /trunk/ghostpdl/pcl/pcl.mak base/gdevrinkj.c base/gdevwts.c base/gdevxcf.c base/gxicolor.c base/devs.mak base/gsicc.c base/gdevimdi.c base/gscdevn.c base/gxclread.c base/gdevpsd.c base/lib.mak base/gxiscale.c base/gsicc_manage.c psi/int.mak /trunk/ghostpdl/pxl/pxgstate.c /trunk/ghostpdl/pcl/pctop.c base/gsicc_manage.h psi/zicc.c psi/zdevice.c base/gdevp14.c base/gsstate.c base/gsicc_cache.c base/gsicc_create.c psi/zcie.c base/gsicccache.c base/gxclist.c base/gsicc_cache.h base/gsicccache.h base/gstrans.c base/gscms.h base/gxidata.c base/gdevpdfc.c base/gxblend.c base/gxshade.c psi/zusparam.c base/gdevpdfg.c base/gxp1fill.c base/gxclrast.c base/gsciemap.c]</p>
</blockquote>

<p><strong><a name="2010-05-31T144914.514014Z"></a>
2010-05-31T14:49:14.514014Z Hin-Tak Leung</strong></p>
<blockquote>
<pre>
for &quot;ln -s base/unix-gcc.mak Makefile; make&quot; builds, do not modularize X, nor build most of the modularzed linux modules, since they depend on the linux GNU linker</pre>
<p>[base/unix-gcc.mak]</p>
</blockquote>

<p><strong><a name="2010-05-31T144108.956692Z"></a>
2010-05-31T14:41:08.956692Z Hin-Tak Leung</strong></p>
<blockquote>
<pre>
another attempt to make &quot;ln -s base/unix-gcc.mak Makefile; make&quot; to work; libtiff really want configure so we hook it in</pre>
<p>[base/libtiff.mak]</p>
</blockquote>

<p><strong><a name="2010-05-31T095814.532526Z"></a>
2010-05-31T09:58:14.532526Z Hin-Tak Leung</strong></p>
<blockquote>
<pre>
more icc branch merge related change to make &quot;make -f base/unix-gcc.mak&quot; and other targets work&quot;</pre>
<p>[base/unix-gcc.mak base/unixansi.mak]</p>
</blockquote>

<p><strong><a name="2010-05-28T180708.826907Z"></a>
2010-05-28T18:07:08.826907Z Henry Stiles</strong></p>
<blockquote>
<pre>
Fixes bug #690793.  PJL Formlines was not set correctly if the paper
size changed.  Also, refactors such that PXL and PJL get paper sizes
from the same source table.

</pre>
<p>[/trunk/ghostpdl/pl/pl.mak /trunk/ghostpdl/pxl/pxl.mak /trunk/ghostpdl/pl/pjparse.c /trunk/ghostpdl/pxl/pxsessio.c /trunk/ghostpdl/pxl/pxstate.h base/gdevpxen.h base/gdevpxut.c]</p>
</blockquote>

<p><strong><a name="2010-05-27T210221.460781Z"></a>
2010-05-27T21:02:21.460781Z Michael Vrhel</strong></p>
<blockquote>
<pre>
Fix so that shading strokes that go through the clist transparency code communicate the transparency device so that the proper color information is used as opposed to the color information related to the final target device.  This should fix the indeterminism with bug688807.pdf when going out to a monochrome device.</pre>
<p>[base/gdevp14.c base/gxshade.c]</p>
</blockquote>

<p><strong><a name="2010-05-27T153001.093150Z"></a>
2010-05-27T15:30:01.093150Z Henry Stiles</strong></p>
<blockquote>
<pre>
Forward declarations for statics functions were accidentally placed in
the header file instead of the c file.
</pre>
<p>[base/gdevp14.c base/gdevp14.h]</p>
</blockquote>

<p><strong><a name="2010-05-27T004457.701730Z"></a>
2010-05-27T00:44:57.701730Z Michael Vrhel</strong></p>
<blockquote>
<pre>
Fix for indeterminism when using psdcmyk device and interpolated images.  For cases where the device profile has fewer components than the actual number of device colorants we need to use the slower interpolation code.  Otherwise we end up encoding uninitialized memory. </pre>
<p>[base/gxiscale.c]</p>
</blockquote>

<p><strong><a name="2010-05-26T220150.106123Z"></a>
2010-05-26T22:01:50.106123Z Michael Vrhel</strong></p>
<blockquote>
<pre>
Fix for bug690218.   For clist reader the pdf14 device was getting its color information set based upon the number of spot colorants in the page.  The real number should be based upon the number of actual components the device is capable of handling.  This occurs when using separation device with a limited set of colorants invoked via a command like -c &quot;&lt;&lt; /SeparationColorNames [ /Cyan /Magenta /Yellow /Black ]
/SeparationOrder [ /Cyan /Magenta /Yellow /Black ] &gt;&gt; setpagedevice&quot;</pre>
<p>[base/gdevp14.c]</p>
</blockquote>

<p><strong><a name="2010-05-26T181652.113331Z"></a>
2010-05-26T18:16:52.113331Z Michael Vrhel</strong></p>
<blockquote>
<pre>
Improvements and fixes in icc search path description and bolder alert with respect to Windows delimiter \&quot; interpretation . Thanks to Ray.</pre>
<p>[doc/Use.htm]</p>
</blockquote>

<p><strong><a name="2010-05-26T160836.881438Z"></a>
2010-05-26T16:08:36.881438Z Henry Stiles</strong></p>
<blockquote>
<pre>
The languages (pcl, xps, pclxl) debug builds were broken with the icc
branch merge, gs_abort() is not supported.  The code has been changed
similarly to the old exit upon failed assertion code in gsalloc.c
where gs_abort() is replaced with return, fixes bug #691340.
</pre>
<p>[base/gsicc_profilecache.c]</p>
</blockquote>

<p><strong><a name="2010-05-26T030702.463936Z"></a>
2010-05-26T03:07:02.463936Z Michael Vrhel</strong></p>
<blockquote>
<pre>
Addition of lcms and new icc files to Visual studio solution.  Also did a little organizing of the files in the explorer window base folder.</pre>
<p>[ghostscript.vcproj]</p>
</blockquote>

<p><strong><a name="2010-05-25T204302.039929Z"></a>
2010-05-25T20:43:02.039929Z Michael Vrhel</strong></p>
<blockquote>
<pre>
Update of documentation, clarifying the search methods used for finding the icc profiles.</pre>
<p>[doc/Use.htm]</p>
</blockquote>

<p><strong><a name="2010-05-25T193823.177347Z"></a>
2010-05-25T19:38:23.177347Z Michael Vrhel</strong></p>
<blockquote>
<pre>
Removal of iccprofiles/ from default icc profile names and post-pend %rom% with iccprofiles/ .  This is in preparation for having the ps init code initialize a default value for ICCProfilesDir (which will be ./iccprofiles/ )  so that code works with COMPILE_INITS=0 when not in the base directory and when -sICCProfilesDir is not specified on the command line.</pre>
<p>[base/gsiccmanage.c base/gsiccmanage.h]</p>
</blockquote>

<p><strong><a name="2010-05-25T171559.119523Z"></a>
2010-05-25T17:15:59.119523Z Hin-Tak Leung</strong></p>
<blockquote>
<pre>
make static some private functions to remove compiler warnings</pre>
<p>[contrib/gdevgdi.c base/gdevcairo.c contrib/gdevlx50.c]</p>
</blockquote>

<p><strong><a name="2010-05-25T171427.480893Z"></a>
2010-05-25T17:14:27.480893Z Hin-Tak Leung</strong></p>
<blockquote>
<pre>
make private functions static to silence some missing prototype warning</pre>
<p>[imdi/cgen.c imdi/imdi_k.c]</p>
</blockquote>

<p><strong><a name="2010-05-25T171318.238667Z"></a>
2010-05-25T17:13:18.238667Z Hin-Tak Leung</strong></p>
<blockquote>
<pre>
silent one compiler warning</pre>
<p>[base/gxstroke.c]</p>
</blockquote>

<p><strong><a name="2010-05-25T135021.339560Z"></a>
2010-05-25T13:50:21.339560Z Ken Sharp</strong></p>
<blockquote>
<pre>
Fix copy CIDFontType 2 properly
Bug #690930 &quot;Unicode Output: DEVICE=pdfwrite&quot;

When making a copy of a CIDFont with TrueType outlines (CIDFontType 2) for the
benefit of pdfwrite, do not simply copy the subst_CID_on_WMode structure member as
this will be restored away along with the font at end of page. Instead make a new
structure and store that in the copied font.


No differences expected, local cluster test shows a few but I think (hope) these are
related to the ICC branch merge.</pre>
<p>[base/gxfcopy.c]</p>
</blockquote>

<p><strong><a name="2010-05-25T102209.642632Z"></a>
2010-05-25T10:22:09.642632Z Chris Liddell</strong></p>
<blockquote>
<pre>
Bug 691336: Resolve some confusion between the original global variable removal changes, and subsequent changes, that could result in warning emprintf calls using a memory pointer that could not exist at that stage.
</pre>
<p>[psi/fapiufst.c]</p>
</blockquote>

<p><strong><a name="2010-05-25T083157.775100Z"></a>
2010-05-25T08:31:57.775100Z Ken Sharp</strong></p>
<blockquote>
<pre>
Silence a couple of gcc compiler warnings introduced with the ICC merge.
</pre>
<p>[base/gdevpdfk.c base/gdevpdfc.c]</p>
</blockquote>

<p><strong><a name="2010-05-24T230659.017275Z"></a>
2010-05-24T23:06:59.017275Z Hin-Tak Leung</strong></p>
<blockquote>
<pre>
Another bunch of CRLF to LF's.

find . -type f | grep -v 'svn-base' | xargs file | grep CRLF | grep -v -E '\.(dsp|dsw|sln|rc):' | grep -v -E '(cbuilder5|masm|dotzlib|vstudio|BorlandC_5.5|visualc6)' | cut -d ':' -f 1 | xargs -n 1 svn propset svn:eol-style native 
find . -type f | grep -v 'svn-base' | xargs file | grep CRLF | grep -v -E '\.(dsp|dsw|sln|rc):' | grep -v -E '(cbuilder5|masm|dotzlib|vstudio|BorlandC_5.5|visualc6)' | cut -d ':' -f 1 | xargs dos2unix

</pre>
<p>[tiff/nmake.opt psi/zcolor.h toolbin/color/icc_creator/ICC_Creator/stdafx.h lib/cat.ps toolbin/color/icc_creator/ICC_Creator/ICC_CreatorDlg.cpp toolbin/color/icc_creator/example/cielab_values.txt toolbin/color/icc_creator/ICC_Creator/icc34.h contrib/lxm3200-tweaked/LICENSE toolbin/color/icc_creator/README.txt toolbin/color/icc_creator/ICC_Creator/ICC_Creator.cpp toolbin/color/named_color/named_color_table.txt zlib/contrib/testzlib/testzlib.txt lib/Fontmap.URW-136.T1 toolbin/color/icc_creator/example/tritone_names.txt zlib/contrib/testzlib/testzlib.c toolbin/color/icc_creator/ICC_Creator/CIELAB.h toolbin/color/icc_creator/ICC_Creator/icc_create.h base/gsicc_profilecache.c toolbin/color/icc_creator/ICC_Creator/stdafx.cpp toolbin/color/icc_creator/ICC_Creator/resource.h base/gsicc_profilecache.h toolbin/color/icc_creator/example/tritone_cielab.txt base/gsicc_create.c toolbin/color/icc_creator/ICC_Creator/targetver.h toolbin/color/icc_creator/ICC_Creator/ICC_CreatorDlg.h toolbin/color/icc_creator/ICC_Creator/res/ICC_Creator.rc2 psi/zcie.h psi/write_t2.c base/gsicc_create.h toolbin/color/icc_creator/example/color_names.txt base/gscms.h toolbin/color/icc_creator/ICC_Creator/icc_create.cpp toolbin/color/icc_creator/ICC_Creator/ICC_Creator.h psi/fapibstm.c lib/Fontmap.URW-136.TT]</p>
</blockquote>

<p><strong><a name="2010-05-24T223400.748368Z"></a>
2010-05-24T22:34:00.748368Z Hin-Tak Leung</strong></p>
<blockquote>
<pre>
remove some more CR's and more eol-style native.

find . -type f   -exec file {} \; |grep 'CRLF' | grep -v '/Projects' | grep -v 'svn-base' | cut -f 1 -d ':' | xargs -n 1 svn propset svn:eol-style native
find . -type f   -exec file {} \; |grep 'CRLF' | grep -v '/Projects' | grep -v 'svn-base' | cut -f 1 -d ':' | xargs -n 1 dos2unix

</pre>
<p>[lcms/Delphi/delphidemo.dof lcms/src/makefile.simple lcms/Delphi/demo1.pas lcms/python/testbed/srgb2xyz.py lcms/Delphi/Samples/create.pas lcms/python/testbed/srgb2lab.py lcms/Delphi/delphidemo.dpr lcms/python/testbed/cam02.py lcms/makefile.simple lcms/samples/makefile.simple lcms/Delphi/Samples/TEST.PAS lcms/Delphi/delphidemo.cfg lcms/python/testbed/createmsh.py lcms/python/testbed/lab2adobe.py lcms/Delphi/Samples/testfrm.pas lcms/Delphi/Samples/testwp.pas lcms/src/lcms.def lcms/Delphi/Samples/getxyz.pas]</p>
</blockquote>

<p><strong><a name="2010-05-24T222637.131050Z"></a>
2010-05-24T22:26:37.131050Z Hin-Tak Leung</strong></p>
<blockquote>
<pre>
manually fixing the last few files which escaped fileutils' identification.

</pre>
<p>[lcms/python/lcms.py lcms/COPYING lcms/src/cmscam97.c lcms/aclocal.m4 lcms/ltmain.sh lcms/README.1ST lcms/configure.ac]</p>
</blockquote>

<p><strong><a name="2010-05-24T222052.689626Z"></a>
2010-05-24T22:20:52.689626Z Hin-Tak Leung</strong></p>
<blockquote>
<pre>
Changes c/c++/shell script/english text to native text and strip off CR.

find . -type f   -exec grep -l '\r\n' {} \; | grep -v 'svn-base' | grep -v '\.vcproj' | grep -v '/Projects' | xargs -n 1 file |  grep -E '(ASCII C\+\+ program text|ISO\-8859 English text|ASCII C program text|shell script text executable)' | cut -f 1 -d ':'  | xargs dos2unix
find . -type f   -exec grep -l '\r\n' {} \; | grep -v 'svn-base' | grep -v '\.vcproj' | grep -v '/Projects' | xargs -n 1 file |  grep -E '(ASCII C\+\+ program text|ISO\-8859 English text|ASCII C program text|shell script text executable)' | cut -f 1 -d ':'  | xargs svn propset svn:eol-style native


</pre>
<p>[lcms/doc/TUTORIAL.TXT lcms/matlab/icctrans.c lcms/src/cmswtpnt.c lcms/tifficc/getopt.c lcms/src/cmsgamma.c lcms/src/cmsnamed.c lcms/samples/vprf.c lcms/src/cmserr.c lcms/samples/mkcmy.c lcms/src/cmsmtrx.c lcms/src/cmsxform.c.orig lcms/samples/icc2ps.c lcms/python/lcms_wrap.cxx lcms/tifficc/tiffdiff.c lcms/src/cmssamp.c lcms/samples/xgetopt.c lcms/Delphi/lcmsdll.pas lcms/include/icc34.h.in lcms/src/cmsmatsh.c lcms/src/cmspack.c lcms/jpegicc/jpegicc.c lcms/jpegicc/iccjpeg.c lcms/samples/icctrans.c lcms/testbed/testcms.c lcms/samples/mktiff8.c lcms/jpegicc/iccjpeg.h lcms/tifficc/tifficc.c lcms/src/cmsvirt.c lcms/src/cmspcs.c lcms/samples/icclink.c lcms/src/cmsgmt.c lcms/src/cmsio0.c lcms/src/cmsio1.c lcms/samples/mkgrayer.c lcms/filter.c lcms/python/lcms.i lcms/src/cmsxform.c lcms/src/cmsintrp.c lcms/src/cmscnvrt.c lcms/include/lcms.h lcms/doc/LCMSAPI.TXT lcms/src/cmscgats.c lcms/src/cmscam02.c lcms/include/icc34.h lcms/src/cmslut.c lcms/src/cmsps2.c lcms/samples/wtpt.c lcms/samples/itufax.c]</p>
</blockquote>

<p><strong><a name="2010-05-24T220741.207483Z"></a>
2010-05-24T22:07:41.207483Z Hin-Tak Leung</strong></p>
<blockquote>
<pre>
remove executable bits from files which don't need them.

find . -type f -executable  -exec file {} \; \
| grep -v 'shell script text executable' \
| cut -f 1 -d ':' |xargs -n 1 svn propdel svn:executable

The last commit was created by:


find . -type f -executable  -exec file {} \; \
| grep 'script text executable' \
| cut -f 1 -d ':' |xargs -n 1 svn propset svn:eol-style native 

</pre>
<p>[lcms/Projects/VC6/lcms.rc lcms/Projects/VC7/lcms.rc lcms/bin/Bin.txt lcms/Delphi/Samples/create.pas lcms/samples/vprf.c lcms/configure.ac lcms/README.1ST lcms/lcms.pc.in lcms/Projects/VC2008/lcms.sln lcms/testbed/sRGBSpac.icm lcms/Projects/VC2008/lcms.vcproj lcms/python/testbed/lab2adobe.py lcms/Delphi/demo1.dfm lcms/samples/xgetopt.c lcms/Projects/VC2005/icclink.vcproj lcms/Projects/VC6/icclink.dsp lcms/Projects/VC7/lcms.vcproj lcms/src/cmscam97.c lcms/testbed/testcms.c lcms/Projects/VC6/icc2ps.dsp lcms/Projects/VC7/icctrans.vcproj lcms/python/testbed/srgb2lab.py lcms/Projects/VC7/tifficc.vcproj lcms/filter.c lcms/Projects/VC6/lcms.dsp lcms/Delphi/delphidemo.cfg lcms/Projects/VC7/icc2ps.vcproj lcms/Projects/VC6/lcms.dsw lcms/Delphi/Samples/testwp.pas lcms/Projects/VC7/lcms.sln lcms/Projects/VC2008/tifficc.vcproj lcms/Projects/VC2005/resource.h lcms/python/testbed/whtpnt.py lcms/doc/TUTORIAL.TXT lcms/src/cmswtpnt.c lcms/Projects/VC2005/Python.vcproj lcms/Projects/BorlandC_5.5/mklcmsdll.bat lcms/include/Makefile.am lcms/Projects/VC7/jpegicc.vcproj lcms/install.gcc lcms/samples/wtpt.1 lcms/Projects/BorlandC_5.5/lcmsdll.lk lcms/src/cmserr.c lcms/makefile.simple lcms/Projects/BorlandC_5.5/lcms.rc lcms/samples/mkcmy.c lcms/src/cmsmtrx.c lcms/Makefile.am lcms/python/testbed/sRGB Color Space Profile.icm lcms/Projects/VC2008/jpegicc.vcproj lcms/Projects/VC7/lcmsdll.vcproj lcms/AUTHORS lcms/samples/icc2ps.1 lcms/Projects/VC2008/resource.h lcms/src/makefile.simple lcms/samples/mktiff8.c lcms/python/testbed/virtprf.py lcms/python/testbed/clamp.py lcms/Projects/BorlandC_5.5/lcmsdll.lst lcms/src/cmsvirt.c lcms/src/cmspcs.c lcms/src/cmsio0.c lcms/python/testbed/cam02.py lcms/Projects/VC6/resource.h lcms/src/cmsxform.c lcms/python/lcms.i lcms/src/cmsintrp.c lcms/Projects/VC2008/lcmsdll.vcproj lcms/jpegicc/jpegicc.1 lcms/COPYING lcms/Projects/VC2005/lcms.rc lcms/samples/icctrans.1 lcms/Projects/VC7/tiffdiff.vcproj lcms/src/cmscgats.c lcms/Projects/VC2008/lcms.rc lcms/tifficc/tifficc.1 lcms/src/cmscam02.c lcms/matlab/icctrans.matlab.pdf lcms/python/testbed/createmsh.py lcms/src/cmslut.c lcms/tifficc/Makefile.am lcms/Lib/MS/MS.TXT lcms/samples/wtpt.c lcms/Projects/VC6/tifficc.dsp lcms/Projects/VC7/Testbed.vcproj lcms/python/testbed/gamma.py lcms/samples/itufax.c lcms/python/Makefile.am lcms/Delphi/demo1.pas lcms/src/cmsgamma.c lcms/Projects/VC6/Python.dsp lcms/Projects/VC2008/Python.vcproj lcms/src/cmsnamed.c lcms/src/cmsxform.c.orig lcms/Projects/VC6/lcmsdll.dsp lcms/Projects/VC2008/Testbed.vcproj lcms/Projects/VC2005/lcms.vcproj lcms/python/testbed/AdobeRGB1998.icc lcms/samples/icc2ps.c lcms/tifficc/tiffdiff.c lcms/samples/makefile.simple lcms/Delphi/Samples/TEST.PAS lcms/src/cmssamp.c lcms/NEWS lcms/samples/Makefile.am lcms/Projects/VC2005/icctrans.vcproj lcms/Projects/VC2005/tifficc.vcproj lcms/Delphi/lcmsdll.pas lcms/Projects/VC2008/icctrans.vcproj lcms/include/icc34.h.in lcms/Delphi/delphidemo.dof lcms/Projects/VC6/lcms.opt lcms/src/cmsmatsh.c lcms/src/cmspack.c lcms/Projects/VC6/Python.plg lcms/jpegicc/jpegicc.c lcms/samples/icctrans.c lcms/Delphi/Samples/MAKETEST.BAT lcms/Projects/VC2005/icc2ps.vcproj lcms/ltmain.sh lcms/Delphi/Samples/gamutchk.pas lcms/tifficc/tifficc.c lcms/Projects/VC2005/lcms.sln lcms/src/cmsio1.c lcms/Projects/VC6/Testbed.dsp lcms/INSTALL lcms/Projects/VC7/icclink.vcproj lcms/jpegicc/makefile.simple lcms/jpegicc/Makefile.am lcms/Projects/VC2005/jpegicc.vcproj lcms/samples/icclink.1 lcms/Delphi/Samples/testfrm.pas lcms/Projects/VC6/jpegicc.dsp lcms/Projects/VC6/icctrans.dsp lcms/src/lcms.def lcms/Delphi/demo1.dcu lcms/Delphi/Samples/getxyz.pas lcms/matlab/icctrans.c lcms/ChangeLog lcms/Projects/VC2008/icclink.vcproj lcms/tifficc/getopt.c lcms/Lib/BC/BC.txt lcms/testbed/makefile.simple lcms/Projects/VC6/Testbed.plg lcms/Delphi/delphidemo.dpr lcms/testbed/Makefile.am lcms/Projects/VC2005/lcmsdll.vcproj lcms/Projects/VC7/resource.h lcms/Projects/VC7/Python.vcproj lcms/Delphi/demo1.ddp lcms/python/testbed/cam97.py lcms/jpegicc/iccjpeg.c lcms/python/testbed/constant.py lcms/Projects/VC2005/tiffdiff.vcproj lcms/python/testbed/srgb2xyz.py lcms/python/testbed/info.py lcms/jpegicc/iccjpeg.h lcms/Projects/VC2008/tiffdiff.vcproj lcms/Projects/VC2008/icc2ps.vcproj lcms/src/Makefile.am lcms/samples/icclink.c lcms/src/cmsgmt.c lcms/Projects/VC2005/Testbed.vcproj lcms/samples/mkgrayer.c lcms/include/lcms.h lcms/Delphi/delphidemo.res lcms/src/cmscnvrt.c lcms/python/swig_lcms lcms/doc/LCMSAPI.TXT lcms/python/testbed/sRGB2adobe.py lcms/tifficc/makefile.simple lcms/include/icc34.h lcms/src/cmsps2.c]</p>
</blockquote>

<p><strong><a name="2010-05-24T220213.500457Z"></a>
2010-05-24T22:02:13.500457Z Hin-Tak Leung</strong></p>
<blockquote>
<pre>
make all shell scripts in the lcms directory eol-style native.
</pre>
<p>[lcms/depcomp lcms/compile lcms/missing lcms/config.guess lcms/config.sub lcms/install-sh lcms/mkinstalldirs lcms/configure]</p>
</blockquote>

<p><strong><a name="2010-05-24T183616.496917Z"></a>
2010-05-24T18:36:16.496917Z Alex Cherepanov</strong></p>
<blockquote>
<pre>
Add missing EOL to the last line in one of the new ICC files
because MSVC 6 requires this.
</pre>
<p>[base/gsiccmanage.c]</p>
</blockquote>

<p><strong><a name="2010-05-24T163158.315172Z"></a>
2010-05-24T16:31:58.315172Z Michael Vrhel</strong></p>
<blockquote>
<pre>
Merge of icc_work branch into trunk.

These changes make the color architecture of the graphics library ICC-based.  All colors are now managed in terms of ICC profiles including PS CIE color spaces, for which equivalent ICC profiles are created.    A big feature of this change is that it makes it very easy to interface a color management module (CMM) to ghostscript.   The default CMM is now littleCMS and the interface to littleCMS is contained in gsicc_littlecms.c .

New member variables were added to the imager state including an ICC manager, which stores the default ICC profiles; a link cache, which reduces the cost of creating links between ICC profiles, and a profile cache which stores color spaces created from PS CIE, PDF CalRGB and PDF CalGray colors spaces.

A new directory named iccprofiles has been added.  It contains the default ICC profiles used if none are specified in the command line.  If COMPILE_INITS=1, these will be included in the ROM file system.  The new command line options related to ICC profiles are described in the Use.htm documentation.

For c-list based rendering, all ICC profiles used in the rendering are stored in the c-list.   During multi-threaded c-list reading, a link cache is associated with the primary reader device and is shared amongst the various threads.

Efficiency improvements were made in the handling of soft mask groups, shading smoothness calculations, and color image rendering.  

For details on the branch, please see the commits that were made within the branch.  There remain indeterminisms to fix.  The files affected include Bug688807.pdf,  Bug688845.eps, Bug690208.pdf, 09-34.PS, CATX0988.pdf,  CATX1028.pdf,  CATX1101.pdf,  CATX5529.pdf.

Rendering issues to investigate include Bug689830.pdf, fts43xx.xps (page 3) (shopping cart image), Bug689880.pdf, Bug691002.pdf, Bug689968.pdf, Bug688584.ps (page 4), catx4949.pdf.
  
Note that the number of differences generated with the merge amounts to pretty much every file.

Thanks to everyone who helped and provided input in this work, especially Ray Johnston.
</pre>
<p>[base/gdevpdfk.c base/gxclimag.c doc/Use.htm base/gdevdflt.c psi/icie.h base/gxpcmap.c base/gxpcolor.h lcms base/gscsepr.c base/gxshade4.c base/gxclthrd.c base/gxcmap.c base/gscscie.c base/gdevwts.c base/gsistate.c base/msvclib.mak base/gxclpage.c base/gscolor2.c base/gsicc_profilecache.c base/gxistate.h base/gscolor2.h base/gsicc_profilecache.h iccprofiles base/gdevp14.c base/gsicc_create.c base/gdevp14.h base/gsicc_create.h psi/write_t2.c psi/zusparam.c base/gdevpbm.c psi/zcolor.c psi/ztrans.c base/gdevpdft.c base/gxshade1.c /trunk/gs base/gdevpsdi.c psi/ireclaim.c psi/os2.mak base/watclib.mak Resource/Init/gs_lev2.ps base/gdevpsdu.c base/gscie.c base/gxclutil.c base/gscolor3.c base/gdevpsd.c base/gscie.h base/gxiscale.c base/gxcldev.h Resource/Init/gs_res.ps base/gxifast.c base/gxdevcli.h base/openvms.mak base/watcw32.mak base/gscms.h psi/msvc32.mak base/gsalloc.c base/lcms.mak base/gxp1fill.c base/gximage.h base/gsciemap.c base/gdevpx.c psi/zcsdevn.c base/ugcclib.mak base/unix-gcc.mak base/gsovrc.c base/gxcie.h base/macos-mcp.mak base/gxshade6.c base/macosx.mak base/gsccolor.h base/gdevrinkj.c base/unixansi.mak base/devs.mak base/gsicc.c base/gxipixel.c base/lib.mak psi/zimage.c base/gsicc.h psi/dxmain.c psi/dxmainc.c Resource/Init/pdf_draw.ps base/gscolor.c Resource/Init/pdf_ops.ps psi/zdevice.c psi/zcie.c psi/zdpnext.c base/gxclist.c psi/zcie.h base/gximono.c base/gxidata.c base/gstrans.c psi/iimage.h base/gdevpdfb.c base/gxclist.h base/gxshade.c base/gstrans.h base/gxclrast.c psi/zncdummy.c base/gxshade.h toolbin/color base/gsiccmanage.c base/Makefile.in base/gdevpdfv.c base/gsiccmanage.h base/gsicc_littlecms.c base/gxclpath.c base/gsicc_littlecms.h psi/icontext.c base/gxclpath.h base/gsstruct.h base/gdevxcf.c base/gxicolor.c base/gscspace.c base/gdevimdi.c base/gscdevn.c base/gscolor1.c base/gxclread.c base/gscspace.h base/bcwin32.mak base/gsdparam.c base/gs.mak psi/zshade.c base/gdevbbox.c psi/int.mak base/gxcspace.h psi/zicc.c base/gsstate.c base/winlib.mak base/gsicccache.c psi/zicc.h psi/zimage3.c base/gsicccache.h base/gdevpdfc.c base/gstparam.h base/gxblend.c base/gdevpdfg.c base/gxblend.h]</p>
</blockquote>

<p><strong><a name="2010-05-24T020113.653152Z"></a>
2010-05-24T02:01:13.653152Z Alex Cherepanov</strong></p>
<blockquote>
<pre>
Recognize Corel tint transform function and replace it with an equivalent
calculator function. Bug 690986.
</pre>
<p>[psi/zfunc4.c]</p>
</blockquote>

<p><strong><a name="2010-05-23T001525.592930Z"></a>
2010-05-23T00:15:25.592930Z Alex Cherepanov</strong></p>
<blockquote>
<pre>
Decide whether load a CFF font as a simple font or a CIDFont based on the
/Subtype of the font object instead of the /Subtype of the font stream.
Acrobat appears to ignore the latter. Bug 691334.
</pre>
<p>[Resource/Init/pdf_font.ps]</p>
</blockquote>

<p><strong><a name="2010-05-22T091730.088324Z"></a>
2010-05-22T09:17:30.088324Z Ken Sharp</strong></p>
<blockquote>
<pre>
Explicit pointer cast to silence a gcc compiler warning.
</pre>
<p>[base/gxp1fill.c]</p>
</blockquote>

<p><strong><a name="2010-05-21T151607.910956Z"></a>
2010-05-21T15:16:07.910956Z Alex Cherepanov</strong></p>
<blockquote>
<pre>
Following Acrobat implementation but contrary to TTF spec, consider cmap entry
that has endCode &lt; startCode as an entry with endCode == startCode.
According to the spec, &quot;to use these arrays, it is necessary to search for the
first endCode that is greater than or equal to the character code to be
mapped. If the corresponding startCode is less than or equal to the character
code ...&quot;. I.e. an entry with endCode &lt; startCode should have no effect.
Thanks to Ken for the patch. Bug 691326.
</pre>
<p>[Resource/Init/gs_ttf.ps]</p>
</blockquote>

<p><strong><a name="2010-05-21T081456.354805Z"></a>
2010-05-21T08:14:56.354805Z Ken Sharp</strong></p>
<blockquote>
<pre>
Fix: device reference counting problem with patterns and clipping

Bug #690572 more details here. The problem was caused by installing a clip device while
drawing a pattern tile. This patch initialises the finalize member of the structure
where the clip device will be created to NULL. If a clip device is required, the member
will be initialised to a real routine. After drawing the pattern cell, if the finalize
routine is non-NULL we execute it.

This correctly dereferences the forwarded device if we create a clipping device.

</pre>
<p>[base/gxp1fill.c]</p>
</blockquote>

<p><strong><a name="2010-05-21T063511.431787Z"></a>
2010-05-21T06:35:11.431787Z Hin-Tak Leung</strong></p>
<blockquote>
<pre>
adding missing dependencies so that setupgs and uninstgs can be built ahead or independent of the main targets</pre>
<p>[psi/winint.mak psi/msvc32.mak]</p>
</blockquote>

<p><strong><a name="2010-05-20T073106.101672Z"></a>
2010-05-20T07:31:06.101672Z regression</strong></p>
<blockquote>
<pre>
The clustermaster.pl code now checks the pid in the lock file to see if the
task is running.  Also no longer test pdfwrite with the language switch build.
</pre>
<p>[toolbin/localcluster/clustermaster.pl toolbin/localcluster/build.pl]</p>
</blockquote>

<p><strong><a name="2010-05-20T062443.585523Z"></a>
2010-05-20T06:24:43.585523Z Hin-Tak Leung</strong></p>
<blockquote>
<pre>
Fix up the eol-style of the rest of the executable files by hand. 
Remove executable bit from toolbin/bmpcmp.c

</pre>
<p>[toolbin/bmpcmp.c jbig2dec/ltmain.sh tiff/config/ltmain.sh libpng/contrib/pngminim/encoder/gather.sh libpng/contrib/pngminim/preader/gather.sh libpng/scripts/libpng-config-body.in libpng/contrib/pngminim/decoder/gather.sh toolbin/tests/gsvalidate.py]</p>
</blockquote>

<p><strong><a name="2010-05-20T061020.265063Z"></a>
2010-05-20T06:10:20.265063Z Hin-Tak Leung</strong></p>
<blockquote>
<pre>
Set other type of shell script as native text.

find . -type f -executable  -exec file {} \; | \
 grep 'script text executable'  | grep -v 'POSIX'  | \
cut -f 1 -d ':' |xargs -n 1 svn propset svn:eol-style native

</pre>
<p>[toolbin/localcluster/bmps2html.pl toolbin/tests/dump_checksum.py toolbin/tests/gscheck_testfiles.py toolbin/tests/dump_checksum_plus.py toolbin/localcluster/readlog.pl toolbin/search-svn-revs toolbin/localcluster/clustermonitor.cgi toolbin/localcluster/clusterpush.pl toolbin/tests/dump_checksum_raw.py toolbin/localcluster/compare.pl toolbin/localcluster/comparerevs.pl toolbin/tests/find_unique_file.py toolbin/localcluster/clustermaster.pl toolbin/localcluster/weekly.sh toolbin/localcluster/build.pl toolbin/tests/build_revision.py toolbin/htmldiff.pl toolbin/tests/compare_checksumdb.py toolbin/tests/update_baseline.py toolbin/tests/make_baselinedb.py toolbin/tests/validate.py toolbin/bugsByEngineer.pl toolbin/localcluster/clusterpull.sh toolbin/tests/regen_filelist.py toolbin/localcluster/pngs2html.pl toolbin/localcluster/nightly.pl freetype/builds/mac/ascii2mpw.py toolbin/tests/compare_checksums.py toolbin/tests/run_nightly.py toolbin/tests/regen_baseline.py toolbin/tests/myoptparse.py toolbin/tests/get_baselines.py toolbin/tests/run_regression.py toolbin/localcluster/setupcluster toolbin/localcluster/clustermonitor.pl toolbin/tests/testdiff.py toolbin/tests/updatelistpdf.py toolbin/tests/run_series.py toolbin/tests/updatelist.py toolbin/localcluster/run.pl toolbin/tests/get_baseline_log.py toolbin/performance.pl toolbin/localcluster/cachearchive.pl toolbin/tests/make_testdb.py toolbin/tests/collate.py]</p>
</blockquote>

<p><strong><a name="2010-05-20T060141.643170Z"></a>
2010-05-20T06:01:41.643170Z Hin-Tak Leung</strong></p>
<blockquote>
<pre>
Set all identifiable shell script as native text

find . -type f -executable  -exec file {} \; | \ 
grep 'POSIX shell script text executable' | \
cut -f 1 -d ':' |xargs -n 1 svn propset svn:eol-style native

</pre>
<p>[libpng/missing cups/pstoraster.in libpng/test-pngtest.sh cups/pstopxl.in libpng/install-sh jbig2dec/configure libpng/configure contrib/pcl3/ppd/catppd toolbin/clusterpush.sh libpng/depcomp jpeg/install-sh jbig2dec/config.guess contrib/pcl3/lib/if-pcl3 freetype/configure libpng/config.guess jasper/configure tiff/config/missing jbig2dec/config.sub jpeg/configure libpng/config.sub tiff/config/install-sh jpeg/config.guess zlib/configure jpeg/config.sub tiff/config/depcomp libpng/scripts/libpng-config-head.in tiff/config/compile libpng/scripts/libpng-config.in libpng/autogen.sh tiff/config/config.guess jbig2dec/mkinstalldirs jpeg/ltconfig tiff/config/config.sub libpng/mkinstalldirs contrib/epson740/ps-to-printer.fpi_rh5.2 jasper/acaux/missing jasper/acaux/install-sh tiff/autogen.sh freetype/builds/unix/install-sh freetype/builds/unix/mkinstalldirs tiff/configure jasper/acaux/depcomp jasper/acaux/compile tiff/config/mkinstalldirs jasper/acaux/config.guess contrib/pcl3/lib/cups-pcl3 jasper/acaux/config.sub]</p>
</blockquote>

<p><strong><a name="2010-05-20T055235.456761Z"></a>
2010-05-20T05:52:35.456761Z Hin-Tak Leung</strong></p>
<blockquote>
<pre>
Avoid raw carriage returns in configure which confuses svn

This is a known bug apparently of autoconf 2.63 which was fixed. Here is the upstream log entry:
http://git.savannah.gnu.org/gitweb/?p=autoconf.git;a=commitdiff;h=cb34ecf

 2008-10-27  Eric Blake  &lt;ebb9@byu.net&gt;

       Avoid raw carriage return in scripts.
       * lib/autoconf/status.m4 (_AC_OUTPUT_FILES_PREPARE): Generate CR
       via tr, rather than with literal byte.
       * THANKS: Update.
       Reported by Steven R. Loomis; patch suggested by Thomas Dickey.


</pre>
<p>[jbig2dec/configure]</p>
</blockquote>

<p><strong><a name="2010-05-19T145138.835112Z"></a>
2010-05-19T14:51:38.835112Z Robin Watts</strong></p>
<blockquote>
<pre>
Some work towards (but not a complete cure for) bug 691030.

Previously XXX_slant_into_trapezoids would check for 2 'simple' cases,
and bale into the fully general fill_slant_adjust function otherwise.
The simple cases were where the top span was a subset of the bottom one, or
vice versa.

Unfortunately the way the code to test for these cases was originally written,
one of these special cases could be used for shaped with vertical sides, and
the other couldn't.

By rewriting the test slightly, both cases can be used with trapezoids that
have one vertical side.

For good measure we also extract the 'rectangle' case out separately.

Cluster testing shows no differences (barring a couple of indeterminisms).

This reduces the output from 5 shapes (2 rectangles, 3 traps) to 3 (2
rectangles, 1 trap). One of the rectangles is still a repeat, but it's
a step in the right direction.



</pre>
<p>[base/gxfillts.h]</p>
</blockquote>

<p><strong><a name="2010-05-19T100905.486708Z"></a>
2010-05-19T10:09:05.486708Z Masaki Ushizaka</strong></p>
<blockquote>
<pre>
Bug 691291. Fix reading uninitialized memory.

The change I made in r10603 had a problem comparing with
uninitialized data when using Roman fonts.
The side effect was slowing down font rendering a little.
In this change I added extra initializer and made 
intention of the 'if' condition more clear.
No difference on outputs expected nor observed by localcluster
tests.</pre>
<p>[base/gschar0.c]</p>
</blockquote>

<p><strong><a name="2010-05-19T074220.717044Z"></a>
2010-05-19T07:42:20.717044Z Masaki Ushizaka</strong></p>
<blockquote>
<pre>
Follow-up to r11278.  Removing jbig2dec/config.h.

r11278 enabled jbig2dec/configure to be run.
I agree with the change but jbig2dec/config.h was also under
subversion control.  With r11278, after someone runs
'configure' or 'autogen.sh', jbig2dec/config.h become
modified status.
jbig2dec/config.h doesn't need to be here.  Deleting.

Related bug: 691304 &amp; 691312.</pre>
<p>[jbig2dec/config.h]</p>
</blockquote>

<p><strong><a name="2010-05-18T224039.023883Z"></a>
2010-05-18T22:40:39.023883Z Hin-Tak Leung</strong></p>
<blockquote>
<pre>
define -DHAVE_CONFIG_H and run jbig2dec/configure from top-level configure. The fixes some portability issues seen on opensolaris; further follow-up to bug 691304</pre>
<p>[base/Makefile.in base/configure.ac]</p>
</blockquote>

<p><strong><a name="2010-05-18T222947.346946Z"></a>
2010-05-18T22:29:47.346946Z Hin-Tak Leung</strong></p>
<blockquote>
<pre>
typo in one word. bug 691323</pre>
<p>[doc/Readme.htm]</p>
</blockquote>

<p><strong><a name="2010-05-18T222313.250745Z"></a>
2010-05-18T22:23:13.250745Z regression</strong></p>
<blockquote>
<pre>
Minor changes to cluster code:

  support language switch build testing
  recover from disk full errors
  automatically create directories needed for new nodes in run.pl
</pre>
<p>[toolbin/localcluster/clustermaster.pl toolbin/localcluster/clusterpull.sh toolbin/localcluster/run.pl]</p>
</blockquote>

<p><strong><a name="2010-05-18T122248.908526Z"></a>
2010-05-18T12:22:48.908526Z Masaki Ushizaka</strong></p>
<blockquote>
<pre>
Disabling compiler warnings for discarding 'const'.

</pre>
<p>[jasper/src/libjasper/base/jas_image.c jasper/src/libjasper/include/jasper/jas_image.h]</p>
</blockquote>

<p><strong><a name="2010-05-18T085518.202611Z"></a>
2010-05-18T08:55:18.202611Z Chris Liddell</strong></p>
<blockquote>
<pre>
Bug 691313: remove the IBM Omni driver from the default build on Linux. Previously it could be excluded by giving configure &quot;--without-omni&quot;, this revision reverses the logic, so Omni can be include by giving configure &quot;--with-omni&quot;.</pre>
<p>[base/configure.ac]</p>
</blockquote>

<p><strong><a name="2010-05-18T043225.607601Z"></a>
2010-05-18T04:32:25.607601Z Marcos H. Woehrmann</strong></p>
<blockquote>
<pre>
Change the order in which jobs that take too long are killed on the cluster nodes to prevent leftover jobs when running bmpcmp.
</pre>
<p>[toolbin/localcluster/run.pl]</p>
</blockquote>

<p><strong><a name="2010-05-17T154838.534341Z"></a>
2010-05-17T15:48:38.534341Z Ken Sharp</strong></p>
<blockquote>
<pre>
Fix - type 1/CFF font interpreter.
The gs_type1_piece_codes routine interprets a type 1 or CFF glyph program to determine
whether the glyph is composed of two subglyphs (a SEAC).

There was a problem with the CFF opcode cntrmask which did not cater for the case where
it is called with a number of operands on the stack. In this case the operands are to
be interpreted as vstem hints. Because this was not done, the interpreter had the wrong
number of hints, and so did not interpret enough of the following bytes as mask data for
the cntrmask operation. This led to attempting to interpret data as operands, which 
caused corrupted glyphs as well as potential crashes.

This does not appear to be tested by any of our current test files (according to a 
cluster test), so no differences are expected.
</pre>
<p>[base/gxtype1.c]</p>
</blockquote>

<p><strong><a name="2010-05-17T082506.874101Z"></a>
2010-05-17T08:25:06.874101Z Ken Sharp</strong></p>
<blockquote>
<pre>
white space change only, committed to make a regression run as the test for the 
previous revision was interrupted.</pre>
<p>[psi/write_t1.c]</p>
</blockquote>

<p><strong><a name="2010-05-17T075543.268496Z"></a>
2010-05-17T07:55:43.268496Z Ken Sharp</strong></p>
<blockquote>
<pre>
Silence some compiler and make warnings.
</pre>
<p>[psi/write_t1.c psi/int.mak psi/write_t1.h]</p>
</blockquote>

<p><strong><a name="2010-05-17T043957.140765Z"></a>
2010-05-17T04:39:57.140765Z Hin-Tak Leung</strong></p>
<blockquote>
<pre>
adding check for header stringprep.h; fix bug 691312</pre>
<p>[base/configure.ac]</p>
</blockquote>

<p><strong><a name="2010-05-17T035931.965365Z"></a>
2010-05-17T03:59:31.965365Z Hin-Tak Leung</strong></p>
<blockquote>
<pre>
Fixes portability issue properly with r11256 (which is identical with r11520),
first discovered by Ralph 6 months ago with r10520 
which results in its being reverted in r10540 .

******************************
    Revert c10520 which causes problems with the MSVC build.
    
    &#36;(CC_) enforces 'ansi' C under msvc32.mak, disabling any Microsoft
    extensions. This often causes problems with 3rd party libraries
    which try to take advantage of those extensions.
    
    This means that the -fPIC flag is again not propagated in the GCC
    build; this is just to unbreak the build until I can test a different
    solution which works on both platforms.
******************************
As Ralph explained then, some of libtiff requires non-ansi extensions to work.

The main culpit is tif_win32.c (which includes &lt;windows.h&gt;) and some of the 
file IO flags not being defined. So this commit fix the ansi issue properly.

</pre>
<p>[tiff/libtiff/tiffiop.h base/libtiff.mak]</p>
</blockquote>

<p><strong><a name="2010-05-17T034702.654413Z"></a>
2010-05-17T03:47:02.654413Z Hin-Tak Leung</strong></p>
<blockquote>
<pre>
fix windows build breakage in r11249

This change (defining TIFFCONFIG_SUFFIX) should have been part of 
   r11249 (create tif_config.h for non-autoconf build) 
which in turn should have been part of 
   r11241 (hook up libtiff with non-autoconf build via 
      &quot;make -f base/unix-gcc.mak&quot; and &quot;make -f base/unixansi.mak&quot;)

The explanation is that in r10317 where Lars originally hooked up libtiff,
tif_config.h is generated by libtiff/configure (which is driven by the 
top-level configure), but special provision is provided for non-autoconf build 
(win32 and VMS) by copying from a canned header file.
If one chooses to bypass the top-level configure, *on every platform* 
(win32, VMS, and non-autoconf unix build), one must provide similiar special 
provision as well.

Personally I'll prefer not to support non-autoconf unix build.

</pre>
<p>[base/unix-gcc.mak base/unixansi.mak base/libtiff.mak]</p>
</blockquote>

<p><strong><a name="2010-05-16T183240.253209Z"></a>
2010-05-16T18:32:40.253209Z Marcos H. Woehrmann</strong></p>
<blockquote>
<pre>
Changes to the nightly regression testing system to support weekly testing.
</pre>
<p>[toolbin/localcluster/nightly.pl toolbin/localcluster/weekly.sh toolbin/localcluster/runNightly.pl toolbin/localcluster/run.pl]</p>
</blockquote>

<p><strong><a name="2010-05-15T105714.279373Z"></a>
2010-05-15T10:57:14.279373Z Hin-Tak Leung</strong></p>
<blockquote>
<pre>
rename PDEP to TIFFDEP to avoid clashing with PDEP from libpng.mak; bug 691299</pre>
<p>[base/libtiff.mak]</p>
</blockquote>

<p><strong><a name="2010-05-15T105547.722308Z"></a>
2010-05-15T10:55:47.722308Z Hin-Tak Leung</strong></p>
<blockquote>
<pre>
comment out a later duplcate definition; bug 691299</pre>
<p>[base/lib.mak]</p>
</blockquote>

<p><strong><a name="2010-05-15T095005.378608Z"></a>
2010-05-15T09:50:05.378608Z Hin-Tak Leung</strong></p>
<blockquote>
<pre>
latest version of these files from Adobe's web site: http://download.macromedia.com/pub/opensource/cmap/</pre>
<p>[Resource/CMap/UniGB-UTF8-H Resource/CMap/UniJIS2004-UTF32-H Resource/CMap/UniJIS2004-UTF16-H Resource/CMap/UniJIS2004-UTF8-H Resource/CMap/UniCNS-UTF32-H Resource/CMap/UniJISX0213-UTF32-H Resource/CMap/UniCNS-UTF16-H Resource/CMap/UniJIS-UTF32-H Resource/CMap/UniCNS-UTF8-H Resource/CMap/UniJIS-UTF16-H Resource/CMap/UniGB-UTF32-H Resource/CMap/UniJIS-UTF8-H Resource/CMap/UniJISX02132004-UTF32-H Resource/CMap/UniGB-UTF16-H]</p>
</blockquote>

<p><strong><a name="2010-05-15T094615.270585Z"></a>
2010-05-15T09:46:15.270585Z Ken Sharp</strong></p>
<blockquote>
<pre>
Add skeleton support for the Bitstream font engine. In its current form this only allows
for type 1 PostScritp fonts, CFF is trivial to add, as should be support for Bitstream's
own compressed format. Addition of type 42/TrueType fonts should be patterned after
FreeType, as there is support in Bitstream for a callback to provide TrueType
outlines. There is no such provision for PostScript fonts.

To build; define BITSTREAM_BRIDGE=1 and BITSTREAM_ROOT=&quot;&quot;, the root should point one
level above the 'core' directory. In the current code this would be :
&quot;/bitstream/FontFusion 4.5a SDK&quot;
</pre>
<p>[psi/zfapi.c psi/ifapi.h psi/write_t1.c psi/int.mak psi/msvc32.mak psi/fapibstm.c]</p>
</blockquote>

<p><strong><a name="2010-05-15T081759.395641Z"></a>
2010-05-15T08:17:59.395641Z Hin-Tak Leung</strong></p>
<blockquote>
<pre>
better way of defining SOC_LOADER when try ing to do &quot;make -f base/unix-gcc.mak so&quot;</pre>
<p>[base/unix-dll.mak base/unix-gcc.mak]</p>
</blockquote>

<p><strong><a name="2010-05-15T080646.613460Z"></a>
2010-05-15T08:06:46.613460Z Hin-Tak Leung</strong></p>
<blockquote>
<pre>
The final part of trying to &quot;ln -s base/unix-gcc.mak Makefile ; make so&quot; work.

There were some fundamental problems with the older version: The so target really
should be built in three distinct stages with three different FLAGS - the 
utils (genarch, gechogs) executable part, the shared library part, and the two final
executable part. The library should be built with the shared-object flags, but neither
of the utils nor the final executables should be built with &quot;-shared&quot;, since they are
executables and not libraries. Hope this is clear.

There is also a little problem from SOC_LOADER not being defined if this file
is not used from ./configure's Makefile.

</pre>
<p>[base/unix-dll.mak]</p>
</blockquote>

<p><strong><a name="2010-05-15T075816.778296Z"></a>
2010-05-15T07:58:16.778296Z Hin-Tak Leung</strong></p>
<blockquote>
<pre>
use CC_ instead of CC like everywhere else, to make the &quot;so&quot; target work</pre>
<p>[base/libtiff.mak]</p>
</blockquote>

<p><strong><a name="2010-05-15T063020.380857Z"></a>
2010-05-15T06:30:20.380857Z Hin-Tak Leung</strong></p>
<blockquote>
<pre>
&quot;-shared&quot; is a linker flag and not a compiler (object code generation) flag; another piece of trying to make &quot;make -f base/unix-gcc.mak&quot; work</pre>
<p>[base/unix-gcc.mak]</p>
</blockquote>

<p><strong><a name="2010-05-15T062741.486639Z"></a>
2010-05-15T06:27:41.486639Z Hin-Tak Leung</strong></p>
<blockquote>
<pre>
try to make 'make -f base/unix-gcc.mak so' work
When not run through ./configure, HAVE_CONFIG_H isn't defined and
the jbig2 codes drop through to generic unknown unix platform - so we put some
generic unix values here.

</pre>
<p>[jbig2dec/os_types.h]</p>
</blockquote>

<p><strong><a name="2010-05-15T062335.840946Z"></a>
2010-05-15T06:23:35.840946Z Hin-Tak Leung</strong></p>
<blockquote>
<pre>
correct documentation on how make so should work - ./configure --enable-dynamic is required</pre>
<p>[doc/Make.htm]</p>
</blockquote>

<p><strong><a name="2010-05-15T033629.389869Z"></a>
2010-05-15T03:36:29.389869Z Hin-Tak Leung</strong></p>
<blockquote>
<pre>
adding new header dependencies from the recent remove-globals effort</pre>
<p>[base/lib.mak]</p>
</blockquote>

<p><strong><a name="2010-05-15T031349.664716Z"></a>
2010-05-15T03:13:49.664716Z Hin-Tak Leung</strong></p>
<blockquote>
<pre>
adding a needed include to silent a compiler warning introduced by the recent remove-globals effort</pre>
<p>[base/gslibctx.c]</p>
</blockquote>

<p><strong><a name="2010-05-15T031231.280935Z"></a>
2010-05-15T03:12:31.280935Z Hin-Tak Leung</strong></p>
<blockquote>
<pre>
another fix to bug 691306
This was broken in r2746 (June 2002) which nobody has noticed for 8 years.
This code path is only used for 'make -f unixansi.mak' (very generic unix cc compiler).

</pre>
<p>[base/gp_unifs.c]</p>
</blockquote>

<p><strong><a name="2010-05-15T030909.671905Z"></a>
2010-05-15T03:09:09.671905Z Hin-Tak Leung</strong></p>
<blockquote>
<pre>
generate tif_config.h if it is not there. part of fixes to bug 691306</pre>
<p>[base/libtiff.mak]</p>
</blockquote>

<p><strong><a name="2010-05-15T030653.120732Z"></a>
2010-05-15T03:06:53.120732Z Hin-Tak Leung</strong></p>
<blockquote>
<pre>
adding comments about the vga devices being Linux specific</pre>
<p>[base/unix-gcc.mak]</p>
</blockquote>

<p><strong><a name="2010-05-15T030554.250134Z"></a>
2010-05-15T03:05:54.250134Z Hin-Tak Leung</strong></p>
<blockquote>
<pre>
part of fix to bug 691306.

These two devices has been broken since r2925 (DeviceN, August 2002),
but not built by default at all. They were blindly enabled in
unix-gcc.mak amongst the ESP merge from Till, and it would appear that
nobody has noticed since the merge (8.57-8.60) until now.

</pre>
<p>[base/gdevl256.c base/gdevvglb.c]</p>
</blockquote>

<p><strong><a name="2010-05-15T025814.802157Z"></a>
2010-05-15T02:58:14.802157Z Hin-Tak Leung</strong></p>
<blockquote>
<pre>
freetype2 dependency in base/unixansi.mak to make &quot;make -f base/unixansi.mak&quot; work; another part for bug 691306</pre>
<p>[base/unixansi.mak]</p>
</blockquote>

<p><strong><a name="2010-05-15T025722.770443Z"></a>
2010-05-15T02:57:22.770443Z Hin-Tak Leung</strong></p>
<blockquote>
<pre>
freetype2 dependency in base/unix-gcc.mak to make &quot;make -f base/unix-gcc.mak&quot; work; bug 691306</pre>
<p>[base/unix-gcc.mak]</p>
</blockquote>

<p><strong><a name="2010-05-15T025530.474135Z"></a>
2010-05-15T02:55:30.474135Z Hin-Tak Leung</strong></p>
<blockquote>
<pre>
add documentation about the default internal resolution for pdfwrite is 720dpi</pre>
<p>[doc/Ps2pdf.htm]</p>
</blockquote>

<p><strong><a name="2010-05-15T025408.145913Z"></a>
2010-05-15T02:54:08.145913Z Hin-Tak Leung</strong></p>
<blockquote>
<pre>
add documentation about how to force-embedding the basic 14 fonts</pre>
<p>[doc/Ps2pdf.htm]</p>
</blockquote>

<p><strong><a name="2010-05-15T025247.037525Z"></a>
2010-05-15T02:52:47.037525Z Hin-Tak Leung</strong></p>
<blockquote>
<pre>
fix an obvious typo in the makefile</pre>
<p>[base/libtiff.mak]</p>
</blockquote>

<p><strong><a name="2010-05-14T164605.198340Z"></a>
2010-05-14T16:46:05.198340Z Marcos H. Woehrmann</strong></p>
<blockquote>
<pre>
Added support to unix-gcc.mak and unixansi.mak to build/use libtiff
(also fixed some typos and made the device lists more similar).

Note because of the FreeType code these files do not work with
the current head (they work with ghostscript-8.71).

Fixes Bug 691301.

</pre>
<p>[base/unix-gcc.mak base/unixansi.mak]</p>
</blockquote>

<p><strong><a name="2010-05-14T042314.678757Z"></a>
2010-05-14T04:23:14.678757Z Hin-Tak Leung</strong></p>
<blockquote>
<pre>
remove one extra tab introduced in r10994; non-GNU Make on Tru64 and HP-UX is picky. Bug 688184 and bug 691299</pre>
<p>[psi/psromfs.mak]</p>
</blockquote>

<p><strong><a name="2010-05-14T042029.682174Z"></a>
2010-05-14T04:20:29.682174Z Hin-Tak Leung</strong></p>
<blockquote>
<pre>
HP compiler quirk - apparently the same workaround is needed for SUN Pro C and GCC 1.x (see a few lines before this change) ; bug 688184</pre>
<p>[contrib/opvp/opvp.h]</p>
</blockquote>

<p><strong><a name="2010-05-14T041842.997881Z"></a>
2010-05-14T04:18:42.997881Z Hin-Tak Leung</strong></p>
<blockquote>
<pre>
uint8_t type located in usual header on HP-UX needed for jbig2dec ; bug 688184</pre>
<p>[jbig2dec/os_types.h]</p>
</blockquote>

<p><strong><a name="2010-05-14T041654.357328Z"></a>
2010-05-14T04:16:54.357328Z Hin-Tak Leung</strong></p>
<blockquote>
<pre>
fix conflicting types against HP-UX system header in jasper; bug 688184</pre>
<p>[jasper/src/libjasper/include/jasper/jas_types.h]</p>
</blockquote>

<p><strong><a name="2010-05-13T200808.900471Z"></a>
2010-05-13T20:08:08.900471Z Robin Watts</strong></p>
<blockquote>
<pre>
Nudge the windows solution/makefiles closer to supporting 64 bit builds
by defining WIN64 and amending makefiles to pass the define on through
recursive calls.

</pre>
<p>[/trunk/ghostpdl/win32/xps.vcproj ghostscript-ufst.vcproj ghostscript.vcproj /trunk/ghostpdl/win32/pcl.vcproj /trunk/ghostpdl/win32/svg.vcproj psi/msvc32.mak /trunk/ghostpdl/main/pcl6_msvc.mak /trunk/ghostpdl/win32/language_switch.vcproj]</p>
</blockquote>

<p><strong><a name="2010-05-13T164947.848287Z"></a>
2010-05-13T16:49:47.848287Z Hin-Tak Leung</strong></p>
<blockquote>
<pre>
adding NULL check before closedevice - bug report 691296 and patch from Tim Waugh. Thanks.</pre>
<p>[base/gdevbbox.c]</p>
</blockquote>

<p><strong><a name="2010-05-13T085542.013750Z"></a>
2010-05-13T08:55:42.013750Z Ken Sharp</strong></p>
<blockquote>
<pre>
Changes only in white space, to provoke another regression test.
</pre>
<p>[psi/zfapi.c]</p>
</blockquote>

<p><strong><a name="2010-05-13T083002.236776Z"></a>
2010-05-13T08:30:02.236776Z Ken Sharp</strong></p>
<blockquote>
<pre>
No changes, just an attempt to provoke some regression runs.</pre>
<p>[psi/zfapi.c]</p>
</blockquote>

<p><strong><a name="2010-05-13T080516.555333Z"></a>
2010-05-13T08:05:16.555333Z Ken Sharp</strong></p>
<blockquote>
<pre>
Fix FAPI interface
There is code in the FAPI interface for replacing a font's /FontBBox entry, this
sometimes has to create a new array to insert into the dictionary, if the old array is
not suitable for storing real values.

The code to do this continued using ref_assign_old, as it had done for replacing the
values in an existing array. This appears to be incorrect, when created the refs in a 
new array are uninitialised so attempting to use ref_assign_old tries to use
uninitialised data. 

Modified to use ref_assign_new instead, as indicated by the comments in store.h

This *may* reduce some of the non-deterministic behaviour, possibly with files such
as ShadowText.eps
</pre>
<p>[psi/zfapi.c]</p>
</blockquote>

<p><strong><a name="2010-05-12T084416.052741Z"></a>
2010-05-12T08:44:16.052741Z Chris Liddell</strong></p>
<blockquote>
<pre>
Elimate an irksome compiler warning introduced in r11221</pre>
<p>[psi/zcolor.c]</p>
</blockquote>

<p><strong><a name="2010-05-12T014318.946640Z"></a>
2010-05-12T01:43:18.946640Z Hin-Tak Leung</strong></p>
<blockquote>
<pre>
adding documentation about the -dDisableFAPI=true switch in various places</pre>
<p>[doc/Use.htm doc/Make.htm]</p>
</blockquote>

<p><strong><a name="2010-05-11T220522.389565Z"></a>
2010-05-11T22:05:22.389565Z regression</strong></p>
<blockquote>
<pre>
The local cluster now tests the language switch build (ls).
</pre>
<p>[toolbin/localcluster/clustermaster.pl toolbin/localcluster/build.pl toolbin/localcluster/clusterpush.pl toolbin/localcluster/run.pl toolbin/localcluster/clusterpush.txt]</p>
</blockquote>

<p><strong><a name="2010-05-11T212119.118628Z"></a>
2010-05-11T21:21:19.118628Z Robin Watts</strong></p>
<blockquote>
<pre>
Add x64 platform target to Visual Studio projects. I can't
test it myself due to not having a 64bit Windows setup,
but it at least starts building and then falls over when
it tries to run a 64bit exe as part of the build process.



</pre>
<p>[/trunk/ghostpdl/win32/xps.vcproj ghostscript-ufst.vcproj /trunk/ghostpdl/win32/pcl.vcproj /trunk/ghostpdl/win32/svg.vcproj /trunk/ghostpdl/win32/language_switch.vcproj]</p>
</blockquote>

<p><strong><a name="2010-05-11T210209.407086Z"></a>
2010-05-11T21:02:09.407086Z regression</strong></p>
<blockquote>
<pre>
Minor improvement to cluster node log collection code.
</pre>
<p>[toolbin/localcluster/clustermaster.pl toolbin/localcluster/run.pl]</p>
</blockquote>

<p><strong><a name="2010-05-11T204110.123188Z"></a>
2010-05-11T20:41:10.123188Z Robin Watts</strong></p>
<blockquote>
<pre>
bmpcmp was reporting the wrong page number for images, due to me forgetting
to increment the imagecount when images were loaded. Fixed here.

</pre>
<p>[toolbin/bmpcmp.c]</p>
</blockquote>

<p><strong><a name="2010-05-11T172501.376580Z"></a>
2010-05-11T17:25:01.376580Z Chris Liddell</strong></p>
<blockquote>
<pre>
Bugs 690356 and 690832: have the colour space object take a copy of string data associated with an indexed colour space lookup table. This prevents the colour space finalising code (gx_final_Indexed) freeing the contents of a Postscript object which may still be in use.</pre>
<p>[psi/zcolor.c]</p>
</blockquote>

<p><strong><a name="2010-05-11T154421.967848Z"></a>
2010-05-11T15:44:21.967848Z Ken Sharp</strong></p>
<blockquote>
<pre>
Fix (FAPI)
The PDF interpreter, when a font is missing, and it has the 'small caps' flag set,
creates a substitute by altering the CharStrings of the substitute font, replacing
the lower case glyph CharStrings with procedures which 'show' the upper case glyph at a
reduced size.

This ends up in the FAPI code as a t_mixedarray type which was being missed by the check
for a t_array, added previously to handle arbitrary procedures in a type 1 font. After
extending the check to include t_mixedarray it was clear that the SEAC processing was
also messing up the dictionary lookup, so it was necessary to restore a value which
had been overwritten in case a SEAC turned up.

zero-length-font.pdf should now work as it does without FAPI, no other differences
expected.
</pre>
<p>[psi/fapi_ft.c psi/zfapi.c]</p>
</blockquote>

<p><strong><a name="2010-05-11T143432.672494Z"></a>
2010-05-11T14:34:32.672494Z Chris Liddell</strong></p>
<blockquote>
<pre>
Revise the UFST interface code for PCL/PXL and GS to work with the changes to eliminate global variables in the Artifex code base.

NOTE: the UFST_REENTRANT configuration was broken, and still is (it has been since the creation of gxfapiu.[ch] files. To be resolved in the future. At this time, therefore, no build integrating UFST can be thread safe.


</pre>
<p>[/trunk/ghostpdl/pl/plulfont.c psi/fapiufst.c base/gxfapiu.c base/gxfapiu.h]</p>
</blockquote>

<p><strong><a name="2010-05-11T132443.420456Z"></a>
2010-05-11T13:24:43.420456Z Robin Watts</strong></p>
<blockquote>
<pre>
Fix for bug 691249 - error caused by failing to initialise new member of
libctx that was previously a global.

We now memset the contents of libctx to 0 after mallocing it, and then
explicitly set the non-zero/NULL/false values. This is safer long term as
it protects us from making the same mistake in future.

</pre>
<p>[base/gslibctx.c]</p>
</blockquote>

<p><strong><a name="2010-05-11T124144.704781Z"></a>
2010-05-11T12:41:44.704781Z Hin-Tak Leung</strong></p>
<blockquote>
<pre>
replace &quot;/*&quot; by &quot;&lt;slash&gt;&lt;star&gt;&quot; to avoid compiler warning about comments inside comment </pre>
<p>[base/mkromfs.c]</p>
</blockquote>

<p><strong><a name="2010-05-11T115510.416074Z"></a>
2010-05-11T11:55:10.416074Z Michael Vrhel</strong></p>
<blockquote>
<pre>
Debug code for helping in debug of 689737.  The pattern that is created is 1 bpp.  With this code the pattern bit map is dumped for opening with photoshop as a raw 8bit image.  The source of the problem appears to be incorrect creation of the pattern bit map when GraphicAlphaBits is set to greater than 1.</pre>
<p>[base/gxpcmap.c]</p>
</blockquote>

<p><strong><a name="2010-05-11T093516.657505Z"></a>
2010-05-11T09:35:16.657505Z Ken Sharp</strong></p>
<blockquote>
<pre>
Fix (fonts)
Bug #691290 &quot;new freetype code gives error /typecheck in definefont&quot;

When creating a Decoding from an Encoding array, treat null objects the same as /.notdef
(ie not encoded).

No differences expected.
</pre>
<p>[Resource/Init/gs_fntem.ps]</p>
</blockquote>

<p><strong><a name="2010-05-10T151725.103327Z"></a>
2010-05-10T15:17:25.103327Z Ken Sharp</strong></p>
<blockquote>
<pre>
Fix (FreeType) : illegal use of setcurrentpoint not handled as per Adobe.
Bug #691172, file type1-ce1_setcurrentpoint.ps

The PostScript file includes a font which illegally uses setcurrentpoint to establish an
absolute x/y position. The spec is quite clear that this operator is *only* meaningful
when processing the results of an OtherSubr, so this usage is definitely illegal.

Not only does it use setcurrentpoint but, unlike previous uses we have seen, it does not
simply establish 0,0 as the initial point, which can be safely ignored, it actually
uses it to displace the outline vertically.

FreeType normally just puts two uninitialised variables on the stack, ignores the
setcurrentpoint and pops the two dummy values. Instead, we now push the current x and
y co-ordinates when we get a '0 callothersubr'. In setcurrentpoint we then use the
top two values on the stack to set the current point. This now works for the illegal
usage seen here, the previous illegal usage, and does not break well-formed fonts
which actually use the OtherSubrs to set the point.

</pre>
<p>[freetype/src/psaux/t1decode.c]</p>
</blockquote>

<p><strong><a name="2010-05-10T122909.676516Z"></a>
2010-05-10T12:29:09.676516Z Michael Vrhel</strong></p>
<blockquote>
<pre>
Retry of fix for Bug 69048 (this one actually builds...) Again this should only be a factor when using GraphicsAlphaBits.  The fix was to make sure that when GraphicsAlphaBits is used we initialize the pattern bits buffer.  Otherwise the get_bits operation used during the gx_default_copy_alpha grabs uninitialized memory.  Since we do not test with GraphicsAlphabits in the regression testing I don't expect there to be any differences.</pre>
<p>[base/lib.mak base/gxpcmap.c base/gxdevmem.h base/gdevabuf.c base/gspaint.c]</p>
</blockquote>

<p><strong><a name="2010-05-10T015742.574530Z"></a>
2010-05-10T01:57:42.574530Z Michael Vrhel</strong></p>
<blockquote>
<pre>
Reversion to 11210 until I figure out what went wrong...</pre>
<p>[base/gsutil.h base/lib.mak base/gxpcmap.c base/gspaint.c base/gsutil.c]</p>
</blockquote>

<p><strong><a name="2010-05-09T231059.799862Z"></a>
2010-05-09T23:10:59.799862Z Michael Vrhel</strong></p>
<blockquote>
<pre>
Fix for Bug 690487.  This should only be a factor when using GraphicsAlphaBits.  The fix was to make sure that when GraphicsAlphaBits is used we initialize the pattern bits buffer.  Otherwise the get_bits operation used during the gx_default_copy_alpha grabs uninitialized memory.  Since we do not test with GraphicsAlphabits in the regression testing I don't expect there to be any differences.</pre>
<p>[base/gsutil.h base/lib.mak base/gxpcmap.c base/gspaint.c base/gsutil.c]</p>
</blockquote>

<p><strong><a name="2010-05-08T223046.926748Z"></a>
2010-05-08T22:30:46.926748Z Alex Cherepanov</strong></p>
<blockquote>
<pre>
Update license headers of a few retaining files with AFPL header.
Bug 691285.
</pre>
<p>[Resource/Decoding/StandardEncoding Resource/Decoding/Latin1]</p>
</blockquote>

<p><strong><a name="2010-05-08T212213.614092Z"></a>
2010-05-08T21:22:13.614092Z regression</strong></p>
<blockquote>
<pre>
Whitespace changes only.
</pre>
<p>[toolbin/localcluster/run.pl]</p>
</blockquote>

<p><strong><a name="2010-05-08T211223.981766Z"></a>
2010-05-08T21:12:23.981766Z regression</strong></p>
<blockquote>
<pre>
Minor changes to cluster software:

  Check svn commands for errors and retry.

  Gather individual logs and md5sums after each job is completed
  rather than at the end of all jobs.
</pre>
<p>[toolbin/localcluster/run.pl]</p>
</blockquote>

<p><strong><a name="2010-05-08T204725.658412Z"></a>
2010-05-08T20:47:25.658412Z Marcos H. Woehrmann</strong></p>
<blockquote>
<pre>
Minor changes to the cluster software:

  Added a lock file to the clusterpull.sh task
  Updated the documentation to explain how to temporarily disable a node.

</pre>
<p>[toolbin/localcluster/clusterpull.sh toolbin/localcluster/readme]</p>
</blockquote>

<p><strong><a name="2010-05-08T155646.469253Z"></a>
2010-05-08T15:56:46.469253Z Alex Cherepanov</strong></p>
<blockquote>
<pre>
Detect and break an infinite loop when some of the image data source are
at EOF, some are not, and the image code doesn't take more data.
Bug 691285.
</pre>
<p>[psi/zimage.c]</p>
</blockquote>

<p><strong><a name="2010-05-08T095955.023824Z"></a>
2010-05-08T09:59:55.023824Z Ken Sharp</strong></p>
<blockquote>
<pre>
Initialise a structure to silence a Coverity warning.</pre>
<p>[base/gdevpdfj.c]</p>
</blockquote>

<p><strong><a name="2010-05-08T085757.923764Z"></a>
2010-05-08T08:57:57.923764Z Ken Sharp</strong></p>
<blockquote>
<pre>
Really, properly, silence the gcc compiler this time....</pre>
<p>[base/gdevpdte.c]</p>
</blockquote>

<p><strong><a name="2010-05-07T143008.276765Z"></a>
2010-05-07T14:30:08.276765Z Ray Johnston</strong></p>
<blockquote>
<pre>
Fix clist_band_height to use the macro defined in gxband.h as other code does to prevent future bitrot. Also use macros for the clist_ cfname, cfile, bfname, bfile.</pre>
<p>[base/gxclist.h]</p>
</blockquote>

<p><strong><a name="2010-05-07T142318.978837Z"></a>
2010-05-07T14:23:18.978837Z Ray Johnston</strong></p>
<blockquote>
<pre>
Fix number of elements in the BAND_PARAMS_INITIAL initializer macro to correspond to the size of gx_band_params_t (needed since rev 5751).</pre>
<p>[base/gxband.h]</p>
</blockquote>

<p><strong><a name="2010-05-07T121650.113521Z"></a>
2010-05-07T12:16:50.113521Z Ken Sharp</strong></p>
<blockquote>
<pre>
Silence some compiler warnings about not checking the return value from fread.</pre>
<p>[base/gdevpdf.c base/gdevpdfu.c]</p>
</blockquote>

<p><strong><a name="2010-05-07T121247.989467Z"></a>
2010-05-07T12:12:47.989467Z Ken Sharp</strong></p>
<blockquote>
<pre>
Initialise the members of a local structure to silence a (spurious) compiler and
Coverity warning.</pre>
<p>[base/gdevpdte.c]</p>
</blockquote>

<p><strong><a name="2010-05-07T081729.050795Z"></a>
2010-05-07T08:17:29.050795Z Ken Sharp</strong></p>
<blockquote>
<pre>
Silence a GCC compiler warning, no differences expected.</pre>
<p>[psi/zfapi.c]</p>
</blockquote>

<p><strong><a name="2010-05-06T160427.459137Z"></a>
2010-05-06T16:04:27.459137Z Robin Watts</strong></p>
<blockquote>
<pre>
Remove gs_debug_out global variable as it is never used.

No differences expected or seen with local cluster testing.

</pre>
<p>[base/bench.c base/gsmisc.c]</p>
</blockquote>

<p><strong><a name="2010-05-06T160343.016324Z"></a>
2010-05-06T16:03:43.016324Z Robin Watts</strong></p>
<blockquote>
<pre>
Update overprint device to avoid writing back to 3 global variables
({generic,no,sep}_overptint_procs). We still have those global variables
but each instantiated device takes copies of them and does any writing back
into the copies. This is part of the work for bug 691207.

No differences expected or shown by local cluster testing.

</pre>
<p>[base/gsovrc.c]</p>
</blockquote>

<p><strong><a name="2010-05-06T160028.103268Z"></a>
2010-05-06T16:00:28.103268Z Robin Watts</strong></p>
<blockquote>
<pre>
Move gs_interp_reschedule_proc, gs_interp_time_slice_proc, and
gs_interp_time_slice_ticks into context to avoid global variables as
part of the work for bug 691207.

No differences expected or seen with local cluster testing.

</pre>
<p>[psi/icontext.c psi/zcontext.c psi/icstate.h psi/interp.c]</p>
</blockquote>

<p><strong><a name="2010-05-06T152510.815510Z"></a>
2010-05-06T15:25:10.815510Z Ken Sharp</strong></p>
<blockquote>
<pre>
Fix (FAPI &amp; FreeType)

Bug #691284 &quot;Error: /unknownerror in --.FAPIBuildChar&quot;
The issue is caused because the PostScript file adds to an existing type 1 font a 
CharString entry which is not in type 1 CharString format. I would have thought this
to be illegal but other PostScript interpreters (specifically Distiller) are happy
with it.

Modifed the FAPI interface so that after retrieving a type 1, non-CID, CharString we
test to see if it is a procedure, if it is, then we return an error from the FAPI
code to the caller (in this case the FreeType interface).

Modified the FreeType interface so that if the CharString retrieval returns an error
we return a  specific (otherwise unused) error to the caller, in this case the
FreeType engine. On return from FreeType to the interface we test for the specific
FreeType error (FT_ERR_Invalid_File_Format) and if this is detected then instead of
returning an error to FAPI, we add one to the character index (to ensure it isn't 0)
and return that to FAPI.

Finally, in the FAPI code, after 'rendering' the glyph, if we were returned a value
&gt; 0 then we assume that 'something went wrong' with the CharString. As a last-ditch
effort we use the return value -1 to retrieve the CharString, and then 'exec' it.

NB if we fail to retrieve the CharString at this level, we return an invalidfont error.


</pre>
<p>[psi/fapi_ft.c psi/zfapi.c psi/ifapi.h]</p>
</blockquote>

<p><strong><a name="2010-05-06T030441.737028Z"></a>
2010-05-06T03:04:41.737028Z Alex Cherepanov</strong></p>
<blockquote>
<pre>
Fix compilation errors on Visual C that wants &quot;ui64&quot; suffix instead of &quot;ULL&quot;
for &quot;unsigned long long&quot; numerals.
</pre>
<p>[base/sha2.c]</p>
</blockquote>

<p><strong><a name="2010-05-05T203019.371369Z"></a>
2010-05-05T20:30:19.371369Z Robin Watts</strong></p>
<blockquote>
<pre>
Remove 2 unused globals. These should have been removed as part of 11146.

No differences expected.

</pre>
<p>[psi/iinit.c]</p>
</blockquote>

<p><strong><a name="2010-05-05T195805.790577Z"></a>
2010-05-05T19:58:05.790577Z regression</strong></p>
<blockquote>
<pre>
Minor changes to the local cluster:

Report md5sum differences even in files that generate an error during processing.
Archive the email and log files for all revisions, including those which had compile errors.
</pre>
<p>[toolbin/localcluster/clustermaster.pl toolbin/localcluster/compare.pl]</p>
</blockquote>

<p><strong><a name="2010-05-05T181421.583279Z"></a>
2010-05-05T18:14:21.583279Z Robin Watts</strong></p>
<blockquote>
<pre>
More work towards bug 691207 (global variable removal).

There are 4 places is xps where we do eprintfs that access mem_err_print.
This resolves 1, the other 3 should never be called in files we support.

Resolve 4 const warnings from jasper.

Remove 2 calls to gs_lib_ctx_get_non_gc_memory_t from the cups driver. This
means the only places left calling this are devices in gs\contrib.

Convert calls to errprint_nomem to calls to errprint (in gdevx.c, gxttb.c,
gdevupd.c)

The only places using mem_err_print are therefore:

 * calls to debug printing functions
 * devices in gs/contrib calling gs_lib_gtx_get_non_gc_memory, errprint_nomem,
   and eprintf.
 * jasper calling eprintf.
 * gdevsco.c (but that seems intrinsically single threaded to me as only one
   thing can be using the console at a time, presumably)
 * signal handlers in os2 and iwatc for catching numeric exceptions.
 * Various devices in gs/base still call errprintf_nomem - some in DEBUG only
   code, but some not.
 * The gs_throw_imp function.

I think this may be as good as we can get at this point.

No differences expected, or shown by local cluster testing.

</pre>
<p>[/trunk/ghostpdl/xps/xpsfont.c base/gdevx.c base/gdevupd.c base/gxttfb.c cups/gdevcups.c jasper/src/libjasper/base/jas_image.c jasper/src/libjasper/include/jasper/jas_image.h]</p>
</blockquote>

<p><strong><a name="2010-05-05T162549.238174Z"></a>
2010-05-05T16:25:49.238174Z Robin Watts</strong></p>
<blockquote>
<pre>
More work for bug 691207 (remove global vars). Change the gp_ interface and
all its implementations to pass a gs_memory_t in some cases to allow eprintf
calls to be made safely.

Also fix a 'const' warning in pxl/pxfont.c and pcl/pcsymbol.c

No differences expected, or shown by local cluster testing.

</pre>
<p>[base/gp_os2.c base/gdevos2p.c base/gsdevice.c psi/zfile.c base/gp_os2pr.c base/gp_vms.c base/gdevwprn.c base/gxclfile.c base/gp_iwatc.c base/gp_os2.h base/gp_os9.c base/gdevwpr2.c /trunk/ghostpdl/pcl/pcsymbol.c /trunk/ghostpdl/xps/xpstop.c base/gp_unix.c /trunk/ghostpdl/psi/psitop.c base/gp_unifs.c base/gp.h base/gp_macio.c base/bench.c base/gdevpdf.c base/gp_os2fs.c /trunk/ghostpdl/pxl/pxfont.c base/gp_mswin.c base/gp_dvx.c]</p>
</blockquote>

<p><strong><a name="2010-05-05T064720.379288Z"></a>
2010-05-05T06:47:20.379288Z Masaki Ushizaka</strong></p>
<blockquote>
<pre>
A fix for 691164 &quot;PDF loads blank when not Administrator on Vista using GS 8.7&quot;.

The problem was in JasPer library.  It tried to create temporary file in 
current directory (HAVE_MKSTEMP), or root directory (Windows and others).
When those directories are read only, it failed to decode images.

This patch introduces searching of TMPDIR, TEMP and TMP environment varibales
and use them for temporary files.

Localcluster test reported no differences.

</pre>
<p>[jasper/src/libjasper/base/jas_stream.c jasper/src/libjasper/include/jasper/jas_stream.h]</p>
</blockquote>

<p><strong><a name="2010-05-05T030800.170436Z"></a>
2010-05-05T03:08:00.170436Z Hin-Tak Leung</strong></p>
<blockquote>
<pre>
adding --ldflags to cups.mak ; bug 690268</pre>
<p>[cups/cups.mak]</p>
</blockquote>

<p><strong><a name="2010-05-04T231146.700325Z"></a>
2010-05-04T23:11:46.700325Z Hin-Tak Leung</strong></p>
<blockquote>
<pre>
Incoporate the reporter's suggested change to config.guess , bug 69020

It appears that the same change is already in automake-1.11 (and after 1.7), 
so the change is correct. If we merge with upstream again, it is possible that
this might be overwritten. Hopefully when that happens, the config.guess from
newer upstream will have this change. 
</pre>
<p>[jasper/acaux/config.guess]</p>
</blockquote>

<p><strong><a name="2010-05-04T225233.245666Z"></a>
2010-05-04T22:52:33.245666Z Hin-Tak Leung</strong></p>
<blockquote>
<pre>
minor wording and grammar corrections. Bug 690005</pre>
<p>[doc/Use.htm]</p>
</blockquote>

<p><strong><a name="2010-05-04T190537.567635Z"></a>
2010-05-04T19:05:37.567635Z Robin Watts</strong></p>
<blockquote>
<pre>
A couple of calls to eprintf missed from the previous commit.

No expected changes.

</pre>
<p>[base/gsfcid.c]</p>
</blockquote>

<p><strong><a name="2010-05-04T190451.514942Z"></a>
2010-05-04T19:04:51.514942Z Marcos H. Woehrmann</strong></p>
<blockquote>
<pre>
Improved the localcluster readme instructions.
</pre>
<p>[toolbin/localcluster/readme]</p>
</blockquote>

<p><strong><a name="2010-05-04T184712.330141Z"></a>
2010-05-04T18:47:12.330141Z Robin Watts</strong></p>
<blockquote>
<pre>
As part of the work for bug 691207 (remove global variables) we introduce
a new set of macros, &quot;emprintfX&quot;. These do the same as the &quot;eprintfX&quot;
macros, except they take an explicit memory reference rather than using
the mem_err_print global.

The plan is to move everything possible over to using emprintf, leaving
callers of eprintf as 'unsafe' in multithreaded builds.

This review changes all callers of eprintf in ghostscript except:
gdevsco.c, gp_iwatc.c, gp_macio.c, gp_mswin.c, gp_os2.c, gp_os2pr.c,
gp_unifs.c, gp_vms.c, gsfid.c, contrib\*, jasper\*.

1 instance in gzspotan.c remains unchanged, but it should never be used.

Local cluster testing shows no build problems.

</pre>
<p>[psi/fapi_ft.c base/gdevpdfj.c base/gsdevice.c base/gdevos2p.c psi/zfapi.c base/gdevijs.c base/gdevpdfm.c base/gdevpx.c base/gxclfile.c base/gdevpdtb.c base/gdevpdfp.c base/gdevpdtc.c psi/fapiufst.c base/gdevpdtf.c base/gdevpdfu.c base/gxblend1.c base/gspaint.c base/gdevxini.c base/gxcmap.c base/gxclthrd.c base/gdevpsdu.c base/gdevpdtt.c base/gstype42.c base/gdevpsft.c base/gsmisc.c base/gdevsgi.c base/gxclmem.c base/gxttfb.c base/std.h base/gslib.c base/gxtype1.c base/gzspotan.c psi/imainarg.c base/gdevpe.c base/gdevsun.c base/gdevxcmp.c psi/imain.c base/gsiorom.c base/gdevpdf.c base/gdevtsep.c contrib/japanese/gdevdmpr.c base/gxclrast.c base/gdevpdfi.c]</p>
</blockquote>

<p><strong><a name="2010-05-04T160329.077971Z"></a>
2010-05-04T16:03:29.077971Z regression</strong></p>
<blockquote>
<pre>
Changed casper3.ghostscript.com to casper.ghostscript.com (no reason to test this, how can it possibly fail?).

</pre>
<p>[toolbin/localcluster/clustermaster.pl toolbin/localcluster/build.pl toolbin/localcluster/run.pl]</p>
</blockquote>

<p><strong><a name="2010-05-04T123427.748154Z"></a>
2010-05-04T12:34:27.748154Z Robin Watts</strong></p>
<blockquote>
<pre>
As part of the efforts towards bug 691207 (global variables must be removed)
this commit reduces the reliance on mem_err_print.

Currently all calls to errwrite and errflush get the stdin/out/err details
from a global mem_err_print. For multithreaded gs this will result in output
going to the wrong place if any of them are redirected. This review splits
errwrite into 2 variants, errwrite and errwrite_nomem. The first takes an
explicit mem pointer. The second continues to assume a global one.

The plan is to make everything possible use the first. Currently debugging
calls and some 'stubborn' devices continue to call errwrite_nomem.

Local cluster testing shows no differences.


</pre>
<p>[base/gdevos2p.c base/gdevsppr.c base/gdevpdfm.c base/gdevsunr.c base/gdevpx.c base/gdevupd.c base/gdevimgn.c base/gdevwpr2.c base/ttfmain.c base/ttfoutl.h base/gp_unifs.c /trunk/ghostpdl/psi/psitop.c base/gdev4693.c /trunk/ghostpdl/xps/xpsfont.c base/strmio.c /trunk/ghostpdl/pxl/pxtop.c contrib/pcl3/src/gdevpcl3.c base/gsmisc.c base/gdevwddb.c base/gsargs.c base/szlibd.c /trunk/ghostpdl/pl/plmain.c base/gxttfb.c base/std.h base/gdevifno.c /trunk/ghostpdl/xps/xpscff.c /trunk/ghostpdl/pcl/pctop.c contrib/pcl3/eprn/gdeveprn.c base/gdevcdj.c psi/ziodevsc.c base/gdevx.c base/gslibctx.c contrib/pcl3/eprn/eprnparm.c toolbin/localcluster/run.pl base/gdevhl7x.c]</p>
</blockquote>

<p><strong><a name="2010-05-03T165735.641421Z"></a>
2010-05-03T16:57:35.641421Z Henry Stiles</strong></p>
<blockquote>
<pre>
Fix compiler warning (return from incompatible pointer type)
introduced with making the font cache part of the library context,
revision 11165.
</pre>
<p>[psi/isave.c]</p>
</blockquote>

<p><strong><a name="2010-05-03T164816.934577Z"></a>
2010-05-03T16:48:16.934577Z Lars Uebernickel</strong></p>
<blockquote>
<pre>
Applied Michael Constant's patch to support reading 256-bit AES encrypted PDFs
(bug #690702).

Minor modifications were made to the original patch to make it work with the
current trunk.

Aaron Gifford's SHA-2 implementation is included (BSD licensed).

Libidn is added as an optional dependency to support unicode passwords.  If it
is not installed, only ASCII passwords are supported.


</pre>
<p>[base/errno_.h psi/zfaes.c psi/gs.c base/saes.c base/lib.mak base/sha2.c doc/Use.htm base/saes.h base/Makefile.in psi/int.mak psi/zutf8.c base/sha2.h base/locale_.h psi/zpdfops.c psi/zfsha2.c psi/zwinutf8.c psi/winint.mak base/ssha2.c base/configure.ac Resource/Init/pdf_sec.ps psi/msvc32.mak base/ssha2.h]</p>
</blockquote>

<p><strong><a name="2010-05-03T132552.802113Z"></a>
2010-05-03T13:25:52.802113Z Ken Sharp</strong></p>
<blockquote>
<pre>
Fix (pdfwrite) incorrect ToUnicode CMap.
Bug #691274 &quot;Missing or incorrect ToUnicode when using Identity ordering&quot;

pdfwrite emits ToUnicode CMaps in PDF files which always use 2 bytes for the key
length. That is 0x21 is represented as &lt;0021&gt;, since these are hex strings there should
in fact be no difference between &lt;21&gt; and &lt;0021&gt;. It is clear from the ToUnicode
Mapping file tutorial that this is correct for mapping files.

However, a PDF file is not a CMap file. It appears that Acrobat does not like
beginbfrange data which is padded with zeros (it seems happy with codespacerange and 
destination codes which are 0 padded though).

This patch outputs ToUnicode CMaps which are not padded with 0, ie 0x21 is emitted as
&lt;0021&gt;, for the srcCodeLo and SrcCodeHi parameters in a beginbfrange operation. The
destination codes remain zero-padded.

Technically this would be incorrect for a real CMap file, but we don't write those
out so this should not be an issue. The change is limited to ToUnicode CMaps and does
not affect any other kind of CMap.

I believe the change will affect the data emitted for the beginbfrange,
beginbfchar, begincidchar, beginnotdefchar, beginnotdefrange and begincidrange
operators. It does *not* affect the begincodespacerange operator; although Acrobat
Distiller writes this without zero padding tests show that Acrobat is happy reading
zero-padded code space ranges.

ToUnicode information is not used in rendering PDF files, so regression testing should
show no differences. Local testing of a limited number of files doesn't reveal any
problems, but this change has not been well tested.
</pre>
<p>[base/gsfcmap.c]</p>
</blockquote>

<p><strong><a name="2010-05-03T041330.766321Z"></a>
2010-05-03T04:13:30.766321Z Hin-Tak Leung</strong></p>
<blockquote>
<pre>
Fix unix so build regression; fixes regression from r9948 which was committed for bug 690695</pre>
<p>[base/unix-dll.mak]</p>
</blockquote>

<p><strong><a name="2010-05-03T035903.969165Z"></a>
2010-05-03T03:59:03.969165Z Hin-Tak Leung</strong></p>
<blockquote>
<pre>
fixes multiple jpeg devices listed in gs -h (bug 691176)</pre>
<p>[base/libtiff.mak]</p>
</blockquote>

<p><strong><a name="2010-05-03T031434.052929Z"></a>
2010-05-03T03:14:34.052929Z Hin-Tak Leung</strong></p>
<blockquote>
<pre>
Rewording build instructions for unix systems, and adding more warnings about 
instructions for legacy old systems being deprecated; bug 691264.
</pre>
<p>[doc/Make.htm]</p>
</blockquote>

<p><strong><a name="2010-05-02T001952.718987Z"></a>
2010-05-02T00:19:52.718987Z Robin Watts</strong></p>
<blockquote>
<pre>
Script to generate an html page that graphically show the differences
between local cluster regression run results between arbitrary revisions.

Usage information given in file. Must be run on the cluster master machine
(i.e. casper).


</pre>
<p>[toolbin/localcluster/comparerevs.pl]</p>
</blockquote>

<p><strong><a name="2010-05-01T232233.008186Z"></a>
2010-05-01T23:22:33.008186Z Henry Stiles</strong></p>
<blockquote>
<pre>
Continue work to remove globals (691207).  The font cache is no longer
global but part of the library context.
</pre>
<p>[psi/isave.h psi/bfont.h base/gslibctx.c psi/zfcid0.c psi/zfcid1.c psi/zfont.c psi/zfont0.c psi/zfont1.c psi/zbfont.c psi/zusparam.c base/gslibctx.h psi/zfont32.c psi/zfont42.c psi/isave.c]</p>
</blockquote>

<p><strong><a name="2010-05-01T092324.281883Z"></a>
2010-05-01T09:23:24.281883Z Ken Sharp</strong></p>
<blockquote>
<pre>
Modify the 'C' defaults of the pdfwrite device

Bug #691259 &quot;HPGL graphic followed by raster graphic results in incorrect pdf&quot;
The pdfwrite device is initialised in 'C', and then partly overridden by PostScript
initialisation. The problem is that non-PostScript input does not (cannot) execute the
PostScript initialisation, and so the defaults are left as those done in 'C'.

Not only do these defaults not match the documented defaults in ps2pdf.htm, they are
not particularly well selected. In this case the problem was caused by sending image
data at 150 dpi, but only a single scan line at a time. The default setting for
pdfwrite was to downsample image data to 72 dpi, this caused us to subsample (the 
default downsampling) by a factor of more than 2, which led to our single scan line
becoming less than half a scan line, and so disappearing altogether.

This patch addresses this issue by altering a number of the defaults to more sensible 
values. In particular we disable downsampling and enable image compression for gray
and colour images. This has the fortunate result of making most PDF output files 
smaller than before, even though we are now storing more image data.

</pre>
<p>[base/gdevpsdf.h]</p>
</blockquote>

<p><strong><a name="2010-05-01T015946.738263Z"></a>
2010-05-01T01:59:46.738263Z Alex Cherepanov</strong></p>
<blockquote>
<pre>
Check all PDF files for transparency features because some files have
incorrect version number but Acrobat renders them just fine. Bug 691273.
</pre>
<p>[Resource/Init/pdf_main.ps]</p>
</blockquote>

<p><strong><a name="2010-04-30T155408.117709Z"></a>
2010-04-30T15:54:08.117709Z Ken Sharp</strong></p>
<blockquote>
<pre>
Testing a white space change for cluster regression tests, this will be overwritten later.</pre>
<p>[base/gdevpsdf.h]</p>
</blockquote>

<p><strong><a name="2010-04-29T215134.733741Z"></a>
2010-04-29T21:51:34.733741Z Till Kamppeter</strong></p>
<blockquote>
<pre>
rev 11149 for fixing bug 691014 had still some compiler warnings. This rev fixes them.
</pre>
<p>[cups/gdevcups.c]</p>
</blockquote>

<p><strong><a name="2010-04-29T183244.398974Z"></a>
2010-04-29T18:32:44.398974Z Robin Watts</strong></p>
<blockquote>
<pre>
Remove the 'parent' parameter from gs_malloc_init calls. It only serves to
allow libctx's to be shared between instances, and we'll never want to do
that. It's unused at the moment anyway, so this doesn't impact anything.

No expected differences.

</pre>
<p>[psi/gs.c base/gsinit.c base/gslib.c base/gsmalloc.c /trunk/ghostpdl/pl/plalloc.c psi/iapi.c base/gsmalloc.h]</p>
</blockquote>

<p><strong><a name="2010-04-29T041915.713592Z"></a>
2010-04-29T04:19:15.713592Z Hin-Tak Leung</strong></p>
<blockquote>
<pre>
Doubling the arbitrary 0x100000 alloc size limit; the alloc_size_is_ok() check is 
complied out and replaced with DO_NOTHING in release build so this has effect only 
on debug builds. Fixes Bug 691271 . 

</pre>
<p>[base/gsalloc.c]</p>
</blockquote>

<p><strong><a name="2010-04-28T231901.308642Z"></a>
2010-04-28T23:19:01.308642Z Robin Watts</strong></p>
<blockquote>
<pre>
Eliminate some warnings in gxcht.c (keep shifts &lt; size of uint).

No local cluster differences reported, or expected.

</pre>
<p>[base/gxcht.c]</p>
</blockquote>

<p><strong><a name="2010-04-28T223701.089543Z"></a>
2010-04-28T22:37:01.089543Z Till Kamppeter</strong></p>
<blockquote>
<pre>
Fixed segfaults caused by setting and changing the page geometry parameters incorrectly (bug #691014).
</pre>
<p>[cups/gdevcups.c]</p>
</blockquote>

<p><strong><a name="2010-04-28T215729.180527Z"></a>
2010-04-28T21:57:29.180527Z Alex Cherepanov</strong></p>
<blockquote>
<pre>
Associate cached font instance with PDF font resource dictionary instead of
font descriptor. The latter may be shared by font resource dictionaries with
different encodings causing incorrect rendering. Bug 690714.
</pre>
<p>[Resource/Init/pdf_font.ps]</p>
</blockquote>

<p><strong><a name="2010-04-28T202441.808400Z"></a>
2010-04-28T20:24:41.808400Z Robin Watts</strong></p>
<blockquote>
<pre>
Move op_array_table_global and op_array_table_local away from being
globals and into i_ctx_p. This requires various knock on changes
throughout the code to enable them to be recovered from the context
(which may itself need to be recovered from a memory pointer).

Also, the garbage collection is altered slightly; rather than the
op_arrays being special cased (as special objects that have to have
their component parts registered as roots for the garbage collection) we
move them inline into i_ctx_t and amend the gc routines for that
structure. Thanks to Alex for his help with this.

No differences expected, or shown with local cluster testing.

</pre>
<p>[psi/iinit.c psi/icontext.c psi/imain.c psi/idebug.c psi/icstate.h psi/interp.c psi/igc.c psi/opdef.h psi/zmisc.c psi/iutil.c]</p>
</blockquote>

<p><strong><a name="2010-04-28T201940.848310Z"></a>
2010-04-28T20:19:40.848310Z Robin Watts</strong></p>
<blockquote>
<pre>
Simple fix to remove dict_default_pack from being a global bool.
(Make it an enum instead).

No changes expected or shown by local cluster testing.

</pre>
<p>[psi/idict.c]</p>
</blockquote>

<p><strong><a name="2010-04-28T171852.709002Z"></a>
2010-04-28T17:18:52.709002Z Chris Liddell</strong></p>
<blockquote>
<pre>
Ensure that multiplication gets applied prior to type casting.</pre>
<p>[psi/fapi_ft.c]</p>
</blockquote>

<p><strong><a name="2010-04-28T144102.575217Z"></a>
2010-04-28T14:41:02.575217Z Robin Watts</strong></p>
<blockquote>
<pre>
Add missing cast to fapi_ft.c to quiet a warning. This was missed out of
yesterdays commit of such fixes.

No expected diffs.

</pre>
<p>[psi/fapi_ft.c]</p>
</blockquote>

<p><strong><a name="2010-04-28T114024.316225Z"></a>
2010-04-28T11:40:24.316225Z Robin Watts</strong></p>
<blockquote>
<pre>
Small tweaks to Ghostscript initialisation to check for malloc failures etc.
This would very rarely have been a problem in current code, but would be
more of an issue in multithreaded operation as running out of memory
while forking a new instance is more likely.

No expected differences, but the local cluster code seems to be claiming
differences for an unchanged tree at the moment, so if 3 or so non-pdfwrite
errors and 1800ish pdfwrite errors show up, it's not because of this.

</pre>
<p>[psi/gs.c psi/imain.c base/gsmalloc.c psi/iapi.c]</p>
</blockquote>

<p><strong><a name="2010-04-27T160605.631664Z"></a>
2010-04-27T16:06:05.631664Z Chris Liddell</strong></p>
<blockquote>
<pre>
Add back in a call removed in (a merging) error in my previous commit (11137).</pre>
<p>[psi/fapi_ft.c]</p>
</blockquote>

<p><strong><a name="2010-04-27T145314.939131Z"></a>
2010-04-27T14:53:14.939131Z Chris Liddell</strong></p>
<blockquote>
<pre>
Bug 691260: make the FAPI and Freetype related warning messages debug only, and depend on -Zm for the FAPI warnings or -Z1 for the Freetype warnings. Also address compiler warnings in fapi_ft.c.</pre>
<p>[psi/fapi_ft.c psi/zfapi.c]</p>
</blockquote>

<p><strong><a name="2010-04-27T142708.849186Z"></a>
2010-04-27T14:27:08.849186Z Robin Watts</strong></p>
<blockquote>
<pre>
Silence some warnings, either by including new headers or by introducing
explicit casts.

No differences shown by local cluster testing (of pcl and gs only as xps is
currently broken).

</pre>
<p>[base/gxdcconv.c base/gsptype1.c base/gdevpx.c base/gstrans.c base/gdevrinkj.c base/gxfill.c base/gxstroke.c psi/zmisc.c]</p>
</blockquote>

<p><strong><a name="2010-04-27T095626.779813Z"></a>
2010-04-27T09:56:26.779813Z Till Kamppeter</strong></p>
<blockquote>
<pre>
Made the CUPS Raster output device working in a multi-threaded mode, removing all global variables. Thanks to James Cloos for the patch. Fixes bug #691241.
</pre>
<p>[cups/gdevcups.c]</p>
</blockquote>

<p><strong><a name="2010-04-26T152928.937213Z"></a>
2010-04-26T15:29:28.937213Z Alex Cherepanov</strong></p>
<blockquote>
<pre>
Remember the allocator in the dynamically allocated scanner_state to ensure
proper deallocation. Current allocation may be reset when a PS error occurs.
Bug 691167.
</pre>
<p>[psi/ztoken.c psi/iscan.c psi/iscan.h]</p>
</blockquote>

<p><strong><a name="2010-04-26T090435.569612Z"></a>
2010-04-26T09:04:35.569612Z Chris Liddell</strong></p>
<blockquote>
<pre>
Ensure that the BuildChar object is not the null object before trying access its contents.
</pre>
<p>[psi/zfapi.c]</p>
</blockquote>

<p><strong><a name="2010-04-26T055846.519692Z"></a>
2010-04-26T05:58:46.519692Z Michael Vrhel</strong></p>
<blockquote>
<pre>
Change so that when a graphic state is restored, the overprint compositor action only occurs if there is a change from the current overprint state.  This fixes a problem in one of the files associated with bug 691014.  In the particular file, overprint compositor actions were getting placed into a pattern clist.  The file in fact had no overprint settings.  Ran regression test, no differences expected.</pre>
<p>[base/gsstate.c]</p>
</blockquote>

<p><strong><a name="2010-04-25T234756.048527Z"></a>
2010-04-25T23:47:56.048527Z Alex Cherepanov</strong></p>
<blockquote>
<pre>
Add ANSI/ASME Y14.1 A - F paper sizes named ANSI_A - ANSI_F for completeness.
Bug 691217.
</pre>
<p>[Resource/Init/gs_statd.ps]</p>
</blockquote>

<p><strong><a name="2010-04-25T224548.099475Z"></a>
2010-04-25T22:45:48.099475Z Till Kamppeter</strong></p>
<blockquote>
<pre>
Minor clean-ups: Added some parantheses to casts and initialized allocated memory.
</pre>
<p>[cups/gdevcups.c]</p>
</blockquote>

<p><strong><a name="2010-04-25T223209.854994Z"></a>
2010-04-25T22:32:09.854994Z Michael Vrhel</strong></p>
<blockquote>
<pre>
(empty)</pre>
<p>[base/gximono.c]</p>
</blockquote>

<p><strong><a name="2010-04-25T215242.447453Z"></a>
2010-04-25T21:52:42.447453Z Till Kamppeter</strong></p>
<blockquote>
<pre>
Introduced a real get_color_comp_index() method, to fix bug #690338 correctly.
</pre>
<p>[cups/gdevcups.c]</p>
</blockquote>

<p><strong><a name="2010-04-25T184728.775496Z"></a>
2010-04-25T18:47:28.775496Z Alex Cherepanov</strong></p>
<blockquote>
<pre>
Add -dNONATIVEFONTMAP option to disable the use of font map and corresponding
fonts installed on underlying platform. This may be needed to ensure consistent
rendering on the platforms with different fonts, for instance,
during regression testing. Bug 691240.
</pre>
<p>[doc/Use.htm Resource/Init/gs_fonts.ps]</p>
</blockquote>

<p><strong><a name="2010-04-25T004140.540207Z"></a>
2010-04-25T00:41:40.540207Z Michael Vrhel</strong></p>
<blockquote>
<pre>
Fix for Bug 691014.  Problem was caused by the fact that we had a soft mask present and a pattern with no transparency.  This means the PDF14 device is installed and more importantly that transparency state pushes and pops occur to keep the softmask in sync with the graphic state.  This particular files pattern is installed as a clist, which happens to not have any transparency.  The transparency state pushes and pops were getting placed into the pattern clist when the Q and q operations occurred in the pattern, which was causing problems since the pattern clist device had no pdf14 device installed to handle such commands.  

The solution is to check, when a transparency compositor action is to occur, if the current device is a pattern accumulator or a pattern-clist device.  If it is, then the pattern instance is checked to see if it has transparency.  If it does not, then the transparency state chance is ignored.  This all occurs on the clist writing phase in the gs_trans functions.  

In addition, a fix was made so that the pdf14custom device sets up it's color information correctly.  For subtractive devices that do not have cmyk process colorants the custompdf14 device is installed.  This pdf14 device was obtaining its color_info from the target device.  The pdf14 device must be continuous tone even if the target device is not. 

Ran a regression test and saw no differences.</pre>
<p>[base/gdevp14.c base/lib.mak base/gstrans.c]</p>
</blockquote>

<p><strong><a name="2010-04-24T222126.893815Z"></a>
2010-04-24T22:21:26.893815Z Alex Cherepanov</strong></p>
<blockquote>
<pre>
Remove rudimentary code that maps out-of-range character codes to 0 causing
dictionary overflow in some cases. Unlike earlier array, dictionary
representation of 'cmap' table doesn't need this. Bug 691253, customer 780.
</pre>
<p>[Resource/Init/gs_ttf.ps]</p>
</blockquote>

<p><strong><a name="2010-04-23T125600.372874Z"></a>
2010-04-23T12:56:00.372874Z Chris Liddell</strong></p>
<blockquote>
<pre>
Resolve issues with the language_switch Ghostscript build for Windows, since Freetype enabled became the default for the normal GS build.
</pre>
<p>[/trunk/ghostpdl/common/msvc_top.mak /trunk/ghostpdl/language_switch/pspcl6_msvc.mak /trunk/ghostpdl/psi/psitop.c psi/msvc32.mak]</p>
</blockquote>

<p><strong><a name="2010-04-23T041050.732099Z"></a>
2010-04-23T04:10:50.732099Z Michael Vrhel</strong></p>
<blockquote>
<pre>
Fix of minor memory leak found by Ray.  maskbuf entry of transparency ctx object was not getting freed.  The large mask buffer, which is a member variable of maskbuf was getting freed but not this 12 byte structure.  No expected differences.</pre>
<p>[base/gdevp14.c]</p>
</blockquote>

<p><strong><a name="2010-04-23T032533.581070Z"></a>
2010-04-23T03:25:33.581070Z Alex Cherepanov</strong></p>
<blockquote>
<pre>
Always load CFF font as a CIDFont when it is used as a descendant font of a
composite font in PDF file. Bug 691253.
</pre>
<p>[Resource/Init/pdf_font.ps]</p>
</blockquote>

<p><strong><a name="2010-04-22T122816.186930Z"></a>
2010-04-22T12:28:16.186930Z Alex Cherepanov</strong></p>
<blockquote>
<pre>
Trap errors that happen in the font reader, issue a warning, and proceed as
if the font was not embedded. Bug 691242.
</pre>
<p>[Resource/Init/pdf_font.ps]</p>
</blockquote>

<p><strong><a name="2010-04-22T042000.389442Z"></a>
2010-04-22T04:20:00.389442Z Alex Cherepanov</strong></p>
<blockquote>
<pre>
Don't use precompiled headers on MSVC 6 and 7 because it causes compilation
error C2006 in freetype, which uses #include MACRO .
</pre>
<p>[base/msvccmd.mak]</p>
</blockquote>

<p><strong><a name="2010-04-21T195107.227636Z"></a>
2010-04-21T19:51:07.227636Z Robin Watts</strong></p>
<blockquote>
<pre>
Add missing header file from revision 11097.

</pre>
<p>[base/gdevpdtd.h]</p>
</blockquote>

<p><strong><a name="2010-04-21T192613.171574Z"></a>
2010-04-21T19:26:13.171574Z Robin Watts</strong></p>
<blockquote>
<pre>
Revert macro magic from gserror.h introduced in r11097, due to it being
broken when used as an expression. Sorry.

</pre>
<p>[base/gserror.h]</p>
</blockquote>

<p><strong><a name="2010-04-21T181256.928835Z"></a>
2010-04-21T18:12:56.928835Z Robin Watts</strong></p>
<blockquote>
<pre>
Another set of very simple tweaks to a range of source files to remove
warnings. Nothing contentious in here I hope!

base/gdevpdf.c: Make the fact we're ignoring the return value of fread
explicit by casting to void.

base/gdevsj48.c: Remove unused var.

base/gdevtknk.c: Avoid gcc warning by not needlessly assigning within
expression.

base/gdevimgn.c: Fix type declaration, make function static.

base/gxdcolor.c: Remove unused var.

base/gdevwts.c: Comment out unused function, cast unused return value from
fread to void, remove unused vars.

base/gdevo182.c: Be more explicit in type definition to stop warning.

base/gdevlp8k.c: Remove unused var.

base/gdevpdfu.c: Cast unused return value from fread to void.

base/gdevlbp8.c: Cast unused return value from fread to void.

base/gdevokii.c: Explicit cast to int to shut up stupid compiler.

base/gdevpdtd.c: Add const to arg to avoid warning.

base/gserror.h: Do some macro magic to ensure that the macro always evaluates
it's arg strictly once, insists on being followed by a semicolon, and behaves
well with surrounding if/else structures etc.

base/gxp1fill.c: Remove unused var.

</pre>
<p>[base/gdevlbp8.c base/gdevtknk.c base/gdevsj48.c base/gdevo182.c base/gdevpdf.c base/gdevimgn.c base/gdevokii.c base/gdevpdtd.c base/gxdcolor.c base/gdevwts.c base/gdevlp8k.c base/gdevpdfu.c base/gxp1fill.c base/gserror.h]</p>
</blockquote>

<p><strong><a name="2010-04-21T175508.584502Z"></a>
2010-04-21T17:55:08.584502Z Robin Watts</strong></p>
<blockquote>
<pre>
Fix for a problem in the rinkj driver for Epson Stylus Photo 2200.
The code was accessing indexes 4,5,6 in plane_offsets[6] and hence was
running off the end of the array. This was causing a warning at compile time
but never caused a segv as it was merely corrupting the next entry in the
structure which was reset to 0 shortly afterwards.

Presumably the offset for one of the planes would be wrong though causing
a loss of quality.

</pre>
<p>[base/rinkj/rinkj-epson870.c]</p>
</blockquote>

<p><strong><a name="2010-04-21T172331.243056Z"></a>
2010-04-21T17:23:31.243056Z Robin Watts</strong></p>
<blockquote>
<pre>
Remove several occurrences of calls to gs_lib_ctx_get_non_gc_memory_t().
The only code that now needs this is gp_macpoll.c and gp_mspol.c for when
CHECK_INTERRUPTS is defined. This reduces the need for mem_err_print.

The only other code that uses mem_err_print is errflush() and errwrite().
Potentially these could be nobbled for a multithreaded build.

The changes here rely on the memory pointers being set up correctly. While
local cluster testing gives this a clean bill of health, it's possible that
problems will appear with files in the wider world - we'll just have to fix
these as they are reported.

</pre>
<p>[base/gdevjpeg.c base/sjpx_luratech.c base/strmio.c base/gxttfb.c psi/zfdctd.c base/sdctc.c psi/zfdcte.c psi/zfjpx.c base/sjpx.c]</p>
</blockquote>

<p><strong><a name="2010-04-21T150847.471495Z"></a>
2010-04-21T15:08:47.471495Z Robin Watts</strong></p>
<blockquote>
<pre>
Move CPSI_mode from being a global to living in the libctx, as part of the
efforts for bug 691207 (remove global variables).

I originally tried moving CPSI_mode into the imager state, which would have
been slightly nicer, but had to abandon this due to problems interacting
with the command list code. My first thought to make this work was to
push the value of CPSI_mode into the clist at initial clist creation time.
As the setting of CPSI_mode isn't vectored through the device, we can't
detect changes in its setting, but then changing CPSI_mode during the
lifespan of a clist would give unpredictable results anyway in many cases.

Sadly this was doomed to failure as if a page device is started up that
uses the clist code to do banding, then the command list is created before
CPSI_mode is enabled, and we'd operate with the incorrect value.

Moving CPSI_mode into libctx means we keep exactly the same behaviour as
we have now. This has required various functions throughout the code to
pass a gs_memory_t * around.

Localcluster testing reveals no problems.

</pre>
<p>[psi/zfunc3.c psi/zupath.c base/gsdps1.c base/gdevdevn.c base/gxblend1.c base/gspaint.c base/gxstroke.c psi/zmisc.c base/gdevperm.c base/gxdcconv.c base/gdevpsds.c base/gxcmap.c base/gxdcconv.h psi/zfont.c base/gdevrinkj.c base/gdevbit.c base/gsmisc.c base/gxfill.c base/gdevxcf.c base/gxicolor.c base/gdevpsd.c psi/zimage.c base/gsfont.c contrib/opvp/gdevopvp.c base/gsfont.h base/gsstate.c base/gslibctx.c base/gsstate.h psi/zcharx.c psi/zusparam.c base/gslibctx.h base/gsequivc.c psi/zchar.c]</p>
</blockquote>

<p><strong><a name="2010-04-21T072014.808042Z"></a>
2010-04-21T07:20:14.808042Z Masaki Ushizaka</strong></p>
<blockquote>
<pre>
A fix for a regression introduced by r11074 (bug 690094).

As I changed image number to be incremented when 'exflag' is false, 
the problem of 'exrunlength' when SDHUFF == 1 was unveiled.
This fixes it.
JBIG2 images with SDHUFF == 1 should have been having trouble 
between r11074 and this revision.  No other difference expected.

</pre>
<p>[jbig2dec/jbig2_symbol_dict.c]</p>
</blockquote>

<p><strong><a name="2010-04-20T185236.186732Z"></a>
2010-04-20T18:52:36.186732Z Robin Watts</strong></p>
<blockquote>
<pre>
A series of tiny changes to various files to stop compiler warnings.
Nothing contentious in here, so I hope component owners don't object.

psi/zpdfops.c: Make zpdfinkpath function static.

psi/zcie.c: cie_cache_finish1 is an unused function; #if 0 it with a note.

psi/zicc.c: Remove 2 unused variables from a function.

psi/zcolor.c: Add a 'default' case to a switch to stop a 'variable RGB
might be used uninitialised' warning. Remove out of date comment and make
zswapcolors static.

psi/zfcid1.c: Convert some unused variables to comments.

base/gp_unix_cache.c: Make the fact we are ignoring the return value from
fread explicit by casting to void.

base/gstype42.c: Move an unused var into a #if 0 section, comment out an
unused function.

base/gstrans.c: Use 'any_abs' rather than 'abs' (to avoid abs being used
without definition).

base/gxshade6.c: Remove unused function

base/gxclfile.c: Make the fact we are ignoring the return value to freopen
explicit by casting to void.

</pre>
<p>[base/gxshade6.c psi/zcolor.c psi/zicc.c psi/zcie.c base/gp_unix_cache.c base/gxclfile.c base/gstrans.c base/gstype42.c psi/zfcid1.c psi/zpdfops.c base/echogs.c]</p>
</blockquote>

<p><strong><a name="2010-04-19T161513.462842Z"></a>
2010-04-19T16:15:13.462842Z Lars Uebernickel</strong></p>
<blockquote>
<pre>
Made oog_encode in tif_luv.c reentrant by precalculating oog_tables.

oog_tables was calculated on-demand when writing TIFF files in LogLuv Encoding.
Since it didn't depend on anything dynamic, I replaced this code with a static
const array.  The array only consisted of 100 ints - the net library size
actually went down a few bytes after this change.

This is part of bug #691207 (global variables must be removed).

</pre>
<p>[tiff/libtiff/oog_table.h tiff/libtiff/tif_luv.c]</p>
</blockquote>

<p><strong><a name="2010-04-19T115627.260655Z"></a>
2010-04-19T11:56:27.260655Z Lars Uebernickel</strong></p>
<blockquote>
<pre>
Removed global variables in libtiff's tif_pixarlog.c.

This is part of #691207 (global variables must be removed).

</pre>
<p>[tiff/libtiff/tif_pixarlog.c]</p>
</blockquote>

<p><strong><a name="2010-04-19T094714.697946Z"></a>
2010-04-19T09:47:14.697946Z Lars Uebernickel</strong></p>
<blockquote>
<pre>
Removed TIFFReassignTagToIgnore in the local libtiff copy.

It wasn't reentrant due to static variables and has been deprecated for a while
now.  GhostScript does not use it at all.  Libtiff HEAD also has this function
removed, it was only kept in 3.x for backwards compatibility.

</pre>
<p>[tiff/libtiff/tif_dir.c]</p>
</blockquote>

<p><strong><a name="2010-04-15T185800.960218Z"></a>
2010-04-15T18:58:00.960218Z Robin Watts</strong></p>
<blockquote>
<pre>
New Visual Stdio project file for building ufst version of ghostscript.

Currently assumes that the ufst code will be found in C:\ufst, but this can
be edited in the nmake invocation lines within the Project settings.

</pre>
<p>[ghostscript-ufst.vcproj]</p>
</blockquote>

<p><strong><a name="2010-04-15T184131.569934Z"></a>
2010-04-15T18:41:31.569934Z Robin Watts</strong></p>
<blockquote>
<pre>
Update msvc32.mak with various ufst make targets. This allows a
ghostscript-ufst Visual Studio project to be constructed.

No differences to existing builds.

</pre>
<p>[psi/msvc32.mak]</p>
</blockquote>

<p><strong><a name="2010-04-15T171330.072845Z"></a>
2010-04-15T17:13:30.072845Z Robin Watts</strong></p>
<blockquote>
<pre>
Remove invalid_file_stream and invalid_file_entry global variables,
as part of the effort for bug 691207 (remove global variables).

We move invalid_file_stream to be a non-gc chunk allocated to be in
i_ctx_t, and invalid_file_entry can then be replaced by
i_ctx_p-&gt;invalid_file_stream. The only tricky bits are a) the need to ensure
that i_ctx_p is available everywhere where it is needed, and b) making sure
that invalid_file_stream doesn't move when i_ctx_p is relocated.

No changes shown by localcluster testing (though a previous version of the
patch did fail during gc, so the relavent code is getting tested).

</pre>
<p>[psi/zfile.c psi/ztoken.c psi/zcontrol.c psi/zshade.c psi/zcontext.c psi/zfcid0.c psi/zfcid1.c psi/zicc.c psi/zfrsd.c psi/icontext.c psi/zvmem.c psi/ziodev.c psi/zfileio.c psi/interp.c psi/icstate.h psi/files.h]</p>
</blockquote>

<p><strong><a name="2010-04-15T161310.848189Z"></a>
2010-04-15T16:13:10.848189Z Lars Uebernickel</strong></p>
<blockquote>
<pre>
Backported and applied libtiff patches from libtiff bugs #2125 and #2125.
These get rid of some of the global variables in libtiff (in particular
rgb_refblackwhite and whitepoint in tif_aux.c).

This is part of the multi-threaded gs effort (bug #691207).

</pre>
<p>[tiff/libtiff/tif_dirinfo.c tiff/libtiff/tif_aux.c tiff/libtiff/tif_dir.c tiff/man/TIFFGetField.3tiff tiff/libtiff/tif_dir.h tiff/libtiff/tif_ojpeg.c tiff/libtiff/tif_jpeg.c]</p>
</blockquote>

<p><strong><a name="2010-04-15T144836.373936Z"></a>
2010-04-15T14:48:36.373936Z Robin Watts</strong></p>
<blockquote>
<pre>
Fix for bug 691244, reported/patch supplied by Norbert Janssen. In
revision 11045, I'd moved some globals into the libctx, which is
accessed via the gs_memory_t pointer. This has required certain
functions to now take a gs_memory_t pointer as an extra arg. In
this particular case the gs_memory_t pointer in question could be
NULL. The fix is to use one obtained from gs_lib_ctx_get_non_gc_memory_t,
a call to which happens conveniently to be on the previous line.

gs_lib_ctx_get_non_gs_memory_t is going to be painful to remove later on,
but at least this fix gets us up and running again now.

No expected differences.

</pre>
<p>[base/strmio.c]</p>
</blockquote>

<p><strong><a name="2010-04-15T095333.313864Z"></a>
2010-04-15T09:53:33.313864Z Masaki Ushizaka</strong></p>
<blockquote>
<pre>
A fix for 690094, &quot;missing letters replaced by little vertical lines&quot;.

This problem was in jbig2dec function jbig2_decode_symbol_dict().
The image number was not incremented correctly when it built 
symbol dictionary.
No difference expected, other than JBIG2 pdf files suffered by
this problem.
</pre>
<p>[jbig2dec/jbig2_symbol_dict.c]</p>
</blockquote>

<p><strong><a name="2010-04-15T083048.171463Z"></a>
2010-04-15T08:30:48.171463Z Chris Liddell</strong></p>
<blockquote>
<pre>
Resolve a Freetype build problem on Mac - solution suggested by Tor and Henry.

</pre>
<p>[base/freetype.mak]</p>
</blockquote>

<p><strong><a name="2010-04-14T192956.362613Z"></a>
2010-04-14T19:29:56.362613Z Robin Watts</strong></p>
<blockquote>
<pre>
Update the clist band list compressor code to work without using global
variables as part of the workd for bug 691207 (remove global variables).

The old code used to call a function to read an initialise global structure,
then based on that allocate storage and copy the structure into it. The new
code essentially does 2 calls; one that serves to get the size, and another
that serves to initialise the newly allocated structure.

To facilitate testing, this introduces a new TEST_BAND_LIST_COMPRESSION
define. If built with this as a define, the code sets the compression
threshold to 1K, thus forcing the use of compression. A local cluster
push with this in reveals just one problem, and that seems to be in the
existing code whereby inflateEnd can be incorectly called on a NULL derived
pointer. A fix for that is included too.

No expected differences.

</pre>
<p>[base/gxcllzw.c base/gxclmem.c base/lib.mak base/gxclzlib.c base/gxclmem.h base/szlibd.c]</p>
</blockquote>

<p><strong><a name="2010-04-14T162511.391305Z"></a>
2010-04-14T16:25:11.391305Z Chris Liddell</strong></p>
<blockquote>
<pre>
Reverse the previous build options for Freetype integration: now --disable-freetype for configure on Unix type systems or pass FT_BRIDGE=0 to nmake on Windows if you do not want to integrate Freetype.
</pre>
<p>[base/configure.ac psi/msvc32.mak]</p>
</blockquote>

<p><strong><a name="2010-04-14T160329.953276Z"></a>
2010-04-14T16:03:29.953276Z Ken Sharp</strong></p>
<blockquote>
<pre>
Fix FreeType FAPI
No bug for this (probably should be). Noticed while testing that using a TrueType to
replace a missing CIDFont (ie entry in cidfmap) was rendering the wrong glyphs, and
applying a vertical advance.

The incorrect glyph seems to be because we were incorrectly stating that the character
index was not a glyph ID, which it is in this case.

The second problem was more difficult. FreeType manufactures vertical advance metrics
for all TrueType glyphs, we override those in the incremental interface callback, but
when the TT is a CIDFont on disk, we don't use the incremental interface and so have
no opportunity to override the metric.

Addressed this by checking in load_glyph to see if the current font is not type 1 
(ie its TT), *is* a CIDFont, and is not a vertical font (WMode is 0). In this case
we simply override the vertical advance and maek it 0.
</pre>
<p>[psi/fapi_ft.c psi/zfapi.c]</p>
</blockquote>

<p><strong><a name="2010-04-14T141119.891045Z"></a>
2010-04-14T14:11:19.891045Z Robin Watts</strong></p>
<blockquote>
<pre>
Move real_time_0 from being a static variable in zmisc.c to being an entry
int libctx. Instead of initialisation happening in zmisc it now happens in
gslibctx.c. Part of the effort for bug 691027 (remove global vars).

This variable isn't strictly speaking necessary, but apparently some FTS
tests behave better if realtime starts from 0, and it isn't a big problem.

No differences shown in localcluster testing.

</pre>
<p>[base/gslibctx.c base/gslibctx.h psi/zmisc.c]</p>
</blockquote>

<p><strong><a name="2010-04-14T100331.189133Z"></a>
2010-04-14T10:03:31.189133Z Hin-Tak Leung</strong></p>
<blockquote>
<pre>
a few more comments about some microsoft CJK fonts</pre>
<p>[lib/mkcidfm.ps]</p>
</blockquote>

<p><strong><a name="2010-04-14T023158.209185Z"></a>
2010-04-14T02:31:58.209185Z Masaki Ushizaka</strong></p>
<blockquote>
<pre>
Fixed jbig2dec command getopt() parameter for -v option.  Not used by ghostscript itself but worth for standalone debugging.</pre>
<p>[jbig2dec/jbig2dec.c]</p>
</blockquote>

<p><strong><a name="2010-04-14T022616.603254Z"></a>
2010-04-14T02:26:16.603254Z Masaki Ushizaka</strong></p>
<blockquote>
<pre>
Fixed an indent. No influence on code.</pre>
<p>[jbig2dec/jbig2_symbol_dict.c]</p>
</blockquote>

<p><strong><a name="2010-04-13T145216.370358Z"></a>
2010-04-13T14:52:16.370358Z Henry Stiles</strong></p>
<blockquote>
<pre>
Gets rid us of 2 global variables in jasper (jas_image_numfmts and
jas_image_fmtinfos).  In so doing we take the liberty of simplifiying
jasper's startup.  The configured codecs (we only use 2: jpc and jp2)
were set at compile time anyway so the the methods to &quot;add formats&quot;
and &quot;clear formats&quot; have been replaced with a static table.

</pre>
<p>[jasper/src/appl/imgcmp.c jasper/src/appl/jasper.c jasper/src/appl/imginfo.c jasper/src/libjasper/base/jas_image.c jasper/src/libjasper/base/jas_init.c jasper/src/libjasper/include/jasper/jas_image.h]</p>
</blockquote>

<p><strong><a name="2010-04-13T142959.699580Z"></a>
2010-04-13T14:29:59.699580Z Robin Watts</strong></p>
<blockquote>
<pre>
Remove BITTAG global variable by moving it into the libctx, as part of
efforts towards bug 691207 (multithreaded gs). This has required several
accessor functions to gain gs_memory_t * arguments.

No differences expected, or shown by localcluster testing.

</pre>
<p>[base/gsnamecl.c base/gsutil.h base/gslibctx.c base/gdevbit.c base/gslibctx.h base/gsutil.c]</p>
</blockquote>

<p><strong><a name="2010-04-13T130654.792469Z"></a>
2010-04-13T13:06:54.792469Z Ken Sharp</strong></p>
<blockquote>
<pre>
Fix FreeType
A prior update which re-initialised a glyph index to prevent old Metrics override
values persisting after a glyph was discarded did not check the ft_inc_int member of
the 'FF_face' structure before dereferncing it, leading to a potential crash if the
font was not incrementally loaded.

The code now checks the value before attempting to dereference the pointer.
</pre>
<p>[psi/fapi_ft.c]</p>
</blockquote>

<p><strong><a name="2010-04-13T125040.024266Z"></a>
2010-04-13T12:50:40.024266Z Ken Sharp</strong></p>
<blockquote>
<pre>
Modify FAPI support files
Moved FAPIConfig, FAPIcidfmap and FAPIfontmap from the 'lib' directory to the
'Resource/Init' directory, so that they get built in when COMPILE_INITS=1.

Also modified gs_fapi.ps to contain default values for the contents of FAPIConfig which
map all fonts to the FAPI engine (FreeType for now). Modified FAPIConfig so that the
usual contents are commented out. This should allow the possibility of overriding the
default values by putting new values in FAPIConfig.
</pre>
<p>[lib/FAPIcidfmap lib/FAPIfontmap lib/FAPIconfig Resource/Init/FAPIcidfmap Resource/Init/FAPIfontmap Resource/Init/FAPIconfig Resource/Init/gs_fapi.ps]</p>
</blockquote>

<p><strong><a name="2010-04-13T121542.067350Z"></a>
2010-04-13T12:15:42.067350Z Robin Watts</strong></p>
<blockquote>
<pre>
Move global variables from gshtscr.c (screen_accurate_screens,
screen_min_screen_levels, screen_use_wts) into libctx. This has
meant updating the functions to read/write these to take a
gs_memory_t pointer too. Part of the efforts for bug 691207.

No differences shown by localcluster testing.

</pre>
<p>[base/gshtscr.c base/gxht.h psi/zusparam.c base/gslibctx.h base/gsht.c base/gsht1.c psi/zht.c psi/zht2.c]</p>
</blockquote>

<p><strong><a name="2010-04-13T095008.611008Z"></a>
2010-04-13T09:50:08.611008Z Masaki Ushizaka</strong></p>
<blockquote>
<pre>
A fix for 691081, 691206, and part of 690094.

From r9769, jbig2dec wasn't capable of decoding some JBIG2 files and throwing a error &quot;jbig2dec FATAL ERROR runlength too large in export symbol table (XXX &gt; XX - XX) (segment 0xXX)&quot;.
This was caused by accidentaly bound checking export symbol table size with number of non-export symbol.  This fixes it.
No differences expected, other than JBIG2 files suffered from this problem.
</pre>
<p>[jbig2dec/jbig2_symbol_dict.c]</p>
</blockquote>

<p><strong><a name="2010-04-13T093822.017180Z"></a>
2010-04-13T09:38:22.017180Z Chris Liddell</strong></p>
<blockquote>
<pre>
Minor revision to FAPI code to better ensure GS errors in callbacks survive through the font renderer library.</pre>
<p>[psi/fapi_ft.c psi/zfapi.c psi/ifapi.h psi/fapiufst.c]</p>
</blockquote>

<p><strong><a name="2010-04-13T032558.022387Z"></a>
2010-04-13T03:25:58.022387Z Henry Stiles</strong></p>
<blockquote>
<pre>
Make the CIESpaces array and its elements constant so it is not
confused with global modifiable data.
</pre>
<p>[psi/zcolor.c]</p>
</blockquote>

<p><strong><a name="2010-04-12T104443.428786Z"></a>
2010-04-12T10:44:43.428786Z Chris Liddell</strong></p>
<blockquote>
<pre>
Remove the hardcoded identity matrix in the Type 1 serialization code in favour of the new FAPI call allowing the interface code to dictate the matrix to be used.</pre>
<p>[psi/zfapi.c]</p>
</blockquote>

<p><strong><a name="2010-04-10T093554.039788Z"></a>
2010-04-10T09:35:54.039788Z Ken Sharp</strong></p>
<blockquote>
<pre>
Remove extraneous debug statement in revision 11050.</pre>
<p>[Resource/Init/gs_fapi.ps]</p>
</blockquote>

<p><strong><a name="2010-04-10T092850.393011Z"></a>
2010-04-10T09:28:50.393011Z Ken Sharp</strong></p>
<blockquote>
<pre>
FAPI Enhancement
We need a way in the initial release where we set FreeType as the default font scaler to
switch it off and revert back to the Ghostscript internal font scaler, in case there
are significant problems. Bug #691237

This allows the user to either send PostScript or set a command line value to create
a key called DisableFAPI, if the value is true then FAPI will no longer be active, and
so the GS font scaler will be used.

Can also be set with -dDisableFAPI=true at the command line.
</pre>
<p>[Resource/Init/gs_fapi.ps]</p>
</blockquote>

<p><strong><a name="2010-04-09T182238.657773Z"></a>
2010-04-09T18:22:38.657773Z regression</strong></p>
<blockquote>
<pre>
Fixed a recently introduced bug in the cluster that caused gs head to
be used when compiling GhostPCL/GhostXPS even if a previous revision
should have been used (as is the case when two or more commits occur
while the cluster is busy).
</pre>
<p>[toolbin/localcluster/run.pl]</p>
</blockquote>

<p><strong><a name="2010-04-09T174920.410599Z"></a>
2010-04-09T17:49:20.410599Z regression</strong></p>
<blockquote>
<pre>
Minor tweaks/improvements to the cluster code:

Fixed bug which occasionally left jobs running on macpro.

Clusterpush.pl when run with user==Michael Vrhel now compares to icc_work branch.

Report all icc_work branch errors (not just new ones).

Collect time to run information.

No longer cache mupdf results.
</pre>
<p>[toolbin/localcluster/clustermaster.pl toolbin/localcluster/build.pl toolbin/localcluster/run.pl toolbin/localcluster/cachearchive.pl toolbin/localcluster/compare.pl]</p>
</blockquote>

<p><strong><a name="2010-04-09T145126.314389Z"></a>
2010-04-09T14:51:26.314389Z Ken Sharp</strong></p>
<blockquote>
<pre>
Fix UFST and enhance FAPI
Define a new API call for FAPI to allow font engines to replace a FontMatrix. This is
to allow FreeType to replace the FotnMatrix with the identity as it makes the 2-step
scaling performed by FreeType simpler.

Modified compute_em_scale so that it uses the new API call instead of blindly replacing
the FontMatrix.

Restored the calculation in FAPI_do_char which unwinds the FontMatrix from the CTM
when calculating the scale factor. Use the new API call to retrieve the desired
FontMatrix rather than pulling it directly from the font as before.
</pre>
<p>[psi/fapi_ft.c psi/zfapi.c psi/ifapi.h psi/fapiufst.c]</p>
</blockquote>

<p><strong><a name="2010-04-09T081356.362732Z"></a>
2010-04-09T08:13:56.362732Z Ken Sharp</strong></p>
<blockquote>
<pre>
Fix Bug #691180
This alters the described 'odd behaviour' of the font substitution code whereby fonts
whose name does not contain either 'Serif' or 'Sans' are substituted with Helvetica,
but those which contain 'Italic' are substituted with Times. Italic fonts are now
treated the same as Oblique fonts, and substituted with Helvetica, unless the font
is identified as a serif font.

This may cause some substitution differences with regression files.</pre>
<p>[Resource/Init/gs_fonts.ps]</p>
</blockquote>

<p><strong><a name="2010-04-08T214254.260278Z"></a>
2010-04-08T21:42:54.260278Z Robin Watts</strong></p>
<blockquote>
<pre>
Move io_device_table from being a global static in gsiodev.c into
the library context. In order to retrieve it we need to update
lots of functions to take a gs_memory_t * as well.

Localcluster testing shows no expected differences.

</pre>
<p>[base/gsdevice.c psi/zfile.c base/gdevupd.c base/gsiodev.c base/gxdevice.h psi/ziodev2.c base/gdevprn.c psi/ziodevsc.c base/sfxcommon.c psi/zfrsd.c base/gxiodev.h base/strmio.c base/gslibctx.c base/gsfname.c psi/ziodev.c base/gdevtsep.c psi/zcrd.c base/gslibctx.h base/gsfname.h base/gdevps.c]</p>
</blockquote>

<p><strong><a name="2010-04-08T160550.601517Z"></a>
2010-04-08T16:05:50.601517Z Ken Sharp</strong></p>
<blockquote>
<pre>
Fix TrueType interpreter Bug #691227
Another nasty hack for another broken TrueType font. In this case the font tries to 
execute a DeltaP instruction with an argument greater than the number of points in the
glyph, which is an error.

FreeType's interpreter has this comment

      /* XXX: Because some popular fonts contain some invalid DeltaP */
      /*      instructions, we simply ignore them when the stacked   */
      /*      point reference is off limit, rather than returning an */
      /*      error.  As a delta instruction doesn't change a glyph  */
      /*      in great ways, this shouldn't be a problem.            */

This patch more or less mimics this in our code.
</pre>
<p>[base/ttinterp.c]</p>
</blockquote>

<p><strong><a name="2010-04-08T155431.828558Z"></a>
2010-04-08T15:54:31.828558Z Ralph Giles</strong></p>
<blockquote>
<pre>
Remove the commented out invocations of autoheader and aclocal/automake
in the autotools bootstrap script.

The various autotools modules must be invoked in a specific order, and
usually with non-default options. We only use autoconf in our build,
not any of the other tools which layer on top of it, but I had left
their invocations in the script, but commented out, so make it easier
to add them at a later date.

It's been some years since autogen.sh was added, and we still have no
plans to adopt automake. Also, the script didn't include support for
libtoolize (which is glibtoolize of MacOS X)  nor for detecting the
appropriate automake version, so it seems simpler to just remove the
commented out lines to avoid confusion.
</pre>
<p>[autogen.sh]</p>
</blockquote>

<p><strong><a name="2010-04-08T153926.443280Z"></a>
2010-04-08T15:39:26.443280Z Robin Watts</strong></p>
<blockquote>
<pre>
Stop a function scope static from being static as nothing was gained by it,
and this removes it from the list of global variables as part of the efforts
for bug 691207 (multithreaded safety).

No expected differences.

</pre>
<p>[base/gdevupd.c]</p>
</blockquote>

<p><strong><a name="2010-04-08T152926.540666Z"></a>
2010-04-08T15:29:26.540666Z Robin Watts</strong></p>
<blockquote>
<pre>
Change a static (that happens to be const) to be a static const to remove
it from the global variable list for bug 691207. 

No expected differences.

</pre>
<p>[base/gdevifno.c]</p>
</blockquote>

<p><strong><a name="2010-04-08T152228.719732Z"></a>
2010-04-08T15:22:28.719732Z Robin Watts</strong></p>
<blockquote>
<pre>
Remove globals from gdevmgr.c as part of efforts on bug 691207 (multithreaded
safety).

Move 5 tables from being file level statics to living in the device structure.

Checked by doing back to back builds and verifying that the same output is
given for tiger.eps in both cases.

No expected differences.

</pre>
<p>[base/gdevmgr.c]</p>
</blockquote>

<p><strong><a name="2010-04-08T151651.654028Z"></a>
2010-04-08T15:16:51.654028Z Robin Watts</strong></p>
<blockquote>
<pre>
Remove the function scope static variables from gdevcdj.c as part of the
efforts for bug 691207 (multithreaded safety). These only affect the
ESC/P driver.

There are 4 variables in play here. real_rows doesn't actually need to be
static at all as it is always set before being used. The other 3 (ln_idx,
vskip1 and vskip2) all go into the 'ep_globals' structure.

There is a subtle change in behaviour here; previously these variables were
initialised to zero on execution start (and again on every flush). Now they
are initialised to zero at the start of every page (and again on every flush).
This means that leftover vskips are no longer carried forwards from page to
page. This seems like a good thing to me.

</pre>
<p>[base/gdevcdj.c]</p>
</blockquote>

<p><strong><a name="2010-04-08T143041.679319Z"></a>
2010-04-08T14:30:41.679319Z Robin Watts</strong></p>
<blockquote>
<pre>
Make a table of 4 zeros be static const, and update the cast where they are
used to also be static const. This should remove them from the global variable
list in bug 691207.

</pre>
<p>[contrib/japanese/gdev10v.c]</p>
</blockquote>

<p><strong><a name="2010-04-08T115629.059369Z"></a>
2010-04-08T11:56:29.059369Z Robin Watts</strong></p>
<blockquote>
<pre>
Remove global variables in gdevcdj.c as part of the effort for bug 691207.

The ESC/P based printing code in gdevcdj.c uses various global variables; we
gather them into a struct here, and pass the struct between the 2 functions
concerned.

This device isn't used in the default build, so no point in testing with the
localcluster. Enabling it locally and doing before/after tests shows that
identical results are given for rendering tiger.eps.

A side effect of this commit is to remove the nasty shadowing of the img_rows
variable (doubly nasty because of it's use within a macro). This meant that I
had the code wrong for a while, so I know the test is actually testing the
right thing.

</pre>
<p>[base/gdevcdj.c]</p>
</blockquote>

<p><strong><a name="2010-04-07T171846.406090Z"></a>
2010-04-07T17:18:46.406090Z Robin Watts</strong></p>
<blockquote>
<pre>
Remove global variable lbp8_end from gdevlbp8.c - it was permanently NULL
so removing it isn't hard, or risky. This will help towards the &quot;No global
variables&quot; goal (bug 691207).

No expected differences.

</pre>
<p>[base/gdevlbp8.c]</p>
</blockquote>

<p><strong><a name="2010-04-07T132337.938542Z"></a>
2010-04-07T13:23:37.938542Z Chris Liddell</strong></p>
<blockquote>
<pre>
Revise the interface code and the use of FT so that both use GS managed memory, rather than the stdlib memory routines (malloc/free and co.).</pre>
<p>[psi/fapi_ft.c]</p>
</blockquote>

<p><strong><a name="2010-04-07T131357.741241Z"></a>
2010-04-07T13:13:57.741241Z Robin Watts</strong></p>
<blockquote>
<pre>
Fix for bug 691228, problems with wide strokes with round caps/joins with
antialiasing enabled.

2 small problems in the same code. In the antialiased case, we stroke by
forming 2 paths (one up either side of the line) and then reverse one and
concatenate it. This should happen whenever we meet a closepath, but due to
a misplaced return, was being missed out in some round join cases.

Also, when using a round join in the case where 2 lines meet 'in-line' we
would inadvertently leave the point on the wrong side of the line.

No changes in localcluster testing as this only affects antialiased results
and that's not tested currently.

</pre>
<p>[base/gxstroke.c]</p>
</blockquote>

<p><strong><a name="2010-04-06T192640.921375Z"></a>
2010-04-06T19:26:40.921375Z Robin Watts</strong></p>
<blockquote>
<pre>
Another attempt to fix Bug 691115. This corrects the clipping of a trapezoid
to a rectangle within the shading code. My previous attempt had failed to
allow for one case.

This causes 116 non-pdfwrite diffs, and 23 pdfwrite ones, all checked using
bmpcmp and found to be acceptable.

</pre>
<p>[base/gxshade6.c]</p>
</blockquote>

<p><strong><a name="2010-04-06T171554.520182Z"></a>
2010-04-06T17:15:54.520182Z Michael Vrhel</strong></p>
<blockquote>
<pre>
Update of fuzzy to report average and max color errors.  This is useful for continuous tone images only.  If the max error reaches the largest possible, the calculations for these values are not performed.</pre>
<p>[toolbin/tests/fuzzy.c]</p>
</blockquote>

<p><strong><a name="2010-04-06T141443.252652Z"></a>
2010-04-06T14:14:43.252652Z Ken Sharp</strong></p>
<blockquote>
<pre>
Fix FAPI and FreeType interface.
The Metrics override was broken, the code to retrieve the /Metrics entries (1 to 4
values) stored the results in an array in a different order to the code which read the
values back.

In addition the FreeType code did not reset the 'glyph_metrics_index' if a glyph had no
metrics override, which could lead to us using the metrics overrides from a prior glyph
if we had already encountered one using an override.
</pre>
<p>[psi/fapi_ft.c psi/zfapi.c]</p>
</blockquote>

<p><strong><a name="2010-04-06T100831.160988Z"></a>
2010-04-06T10:08:31.160988Z Ken Sharp</strong></p>
<blockquote>
<pre>
Fix FreeType. 
The revision 11012 fixed a problem with an invalid font but accidentally introduced a
regression because an 'else' clause was missed.
</pre>
<p>[freetype/src/psaux/psobjs.c]</p>
</blockquote>

<p><strong><a name="2010-04-06T081444.802475Z"></a>
2010-04-06T08:14:44.802475Z Chris Liddell</strong></p>
<blockquote>
<pre>
Resolve two compiler warnings - no behaviour change expected</pre>
<p>[psi/zfapi.c]</p>
</blockquote>

<p><strong><a name="2010-04-05T235000.539571Z"></a>
2010-04-05T23:50:00.539571Z Hin-Tak Leung</strong></p>
<blockquote>
<pre>
adding comments about using globs not expandable by shell; bug 691229</pre>
<p>[base/mkromfs.c]</p>
</blockquote>

<p><strong><a name="2010-04-05T172412.188391Z"></a>
2010-04-05T17:24:12.188391Z Hin-Tak Leung</strong></p>
<blockquote>
<pre>
adding escaped quotes around &#36;0 in &quot;basename &#36;0&quot; ; 2nd part of bug 691219</pre>
<p>[lib/pdf2ps lib/eps2eps lib/pfbtopfa lib/ps2epsi lib/ps2pdfwr lib/ps2ps lib/dumphint lib/ps2ps2 lib/dvipdf lib/pdfopt]</p>
</blockquote>

<p><strong><a name="2010-04-05T172210.077618Z"></a>
2010-04-05T17:22:10.077618Z Hin-Tak Leung</strong></p>
<blockquote>
<pre>
adding escaped quotes around &#36;0 in &quot;dirname &#36;0&quot; ; bug 691219</pre>
<p>[lib/printafm lib/eps2eps lib/pdf2dsc lib/gsbj lib/ps2epsi lib/gsdj lib/dumphint lib/gsnd lib/font2c lib/pdfopt lib/pdf2ps lib/ps2pdf lib/gslj lib/pfbtopfa lib/bdftops lib/ps2pdf12 lib/ps2pdf13 lib/ps2pdf14 lib/gslp lib/wftopfa lib/ps2pdfwr lib/ps2ps lib/pphs lib/pf2afm lib/gsdj500]</p>
</blockquote>

<p><strong><a name="2010-04-05T171334.259627Z"></a>
2010-04-05T17:13:34.259627Z Hin-Tak Leung</strong></p>
<blockquote>
<pre>
adding reference to msmin04, msgoth04 and ngulim,nbantang; fixes the remaining issues in bug 689456</pre>
<p>[lib/mkcidfm.ps]</p>
</blockquote>

<p><strong><a name="2010-04-05T154847.768122Z"></a>
2010-04-05T15:48:47.768122Z Ken Sharp</strong></p>
<blockquote>
<pre>
Fix line endings. The previous commit (11012) accidentally used DOS line endings which 
made it appear every line in the file was different.
</pre>
<p>[freetype/src/psaux/psobjs.c]</p>
</blockquote>

<p><strong><a name="2010-04-05T153111.441559Z"></a>
2010-04-05T15:31:11.441559Z Ken Sharp</strong></p>
<blockquote>
<pre>
Fix FreeType
When using bitmaps from a TrueType/Type42 font FreeType uses a heuristic approach to
synthesize vertical metrics for the glyphs, including a horizontal advance. As in the 
past, this works well as long as the client knows whether the advance direction is
horizontal or vertical and uses the correct advance.

However we don't know that, so we don't want the vertical advance.

Its easiest jut to have FreeType ignore embedded bitmaps and use the outlines, in which
case we don't get the invented vertical advance. Not only that but the rendered bitmap
is a better match for the cases where we don't have a pre-built bitmap, so consistency
is improved with this patch as well.
</pre>
<p>[psi/fapi_ft.c]</p>
</blockquote>

<p><strong><a name="2010-04-05T152725.365922Z"></a>
2010-04-05T15:27:25.365922Z Ken Sharp</strong></p>
<blockquote>
<pre>
Fix FreeType
The test file objlune_font2_mine.ps contains a Type 1 font which has a technically
 invalid glyph. The glyph executes a 'lineto' class operation before a 'moveto' class
operation.

Although illegal it seems that all other PostScript RIPs ignore this requirement, this 
patch removes the error check in FreeType to conform with other interpreters.
</pre>
<p>[freetype/src/psaux/psobjs.c]</p>
</blockquote>

<p><strong><a name="2010-04-05T113332.361294Z"></a>
2010-04-05T11:33:32.361294Z Chris Liddell</strong></p>
<blockquote>
<pre>
Update the to latest FT code from the FT git repository.</pre>
<p>[freetype/src/pshinter/pshglob.c freetype/src/base/ftpfr.c freetype/src/pshinter/pshglob.h freetype/src/type1/t1objs.c freetype/docs/DEBUG freetype/src/type1/t1objs.h freetype/docs/INSTALL.CROSS freetype/src/truetype/ttgload.c freetype/src/truetype/ttgload.h freetype/src/tools/ftrandom/ftrandom.c freetype/devel/ft2build.h freetype/src/tools/docmaker/formatter.py freetype/src/autofit/Jamfile freetype/src/bdf/module.mk freetype/include/freetype/config/ftheader.h freetype/src/cff/Jamfile freetype/src/cff/cffparse.c freetype/src/raster/ftraster.c freetype/src/cff/cffparse.h freetype/src/cff/cffcmap.c freetype/src/raster/ftraster.h freetype/src/cff/cffcmap.h freetype/src/raster/ftrend1.c freetype/include/freetype/internal/services/svttglyf.h freetype/src/raster/ftrend1.h freetype/builds/wince/vc2005-ce/freetype.vcproj freetype/docs/INSTALL.ANY freetype/src/psnames/module.mk freetype/src/base/ftutil.c freetype/src/autofit/afglobal.c freetype/src/cache/ftcsbits.c freetype/src/autofit/afglobal.h freetype/src/pcf/rules.mk freetype/src/base/ftsystem.c freetype/src/cache/ftcsbits.h freetype/src/psaux/psaux.c freetype/src/cff/module.mk freetype/src/pshinter/rules.mk freetype/src/pcf/pcfread.c freetype/src/bdf/bdflib.c freetype/src/pcf/pcfread.h freetype/include/freetype/ftcache.h freetype/src/raster/Jamfile freetype/src/gzip/rules.mk freetype/src/pshinter/pshalgo.c freetype/include/freetype/ftincrem.h freetype/include/freetype/internal/services/svcid.h freetype/src/pshinter/pshalgo.h freetype/src/psnames/psnamerr.h freetype/src/tools/test_afm.c freetype/src/cache/ftccache.c freetype/src/cache/ftcmru.c freetype/include/freetype/config/ftstdlib.h freetype/src/cid/cidtoken.h freetype/include/freetype/freetype.h freetype/vms_make.com freetype/src/cache/ftccache.h freetype/src/cache/ftcmru.h freetype/docs/INSTALL.UNIX freetype/src/tools/cordic.py freetype/src/pfr/Jamfile freetype/src/pfr/pfr.c freetype/src/pfr/pfrload.c freetype/src/pfr/pfrload.h freetype/include/freetype/fterrdef.h freetype/src/type1/t1gload.c freetype/src/base/ftbbox.c freetype/src/otvalid/otvgdef.c freetype/src/type1/t1gload.h freetype/include/freetype/ftsystem.h freetype/src/bdf/bdferror.h freetype/src/gxvalid/rules.mk freetype/src/pcf/pcf.c freetype/src/bdf/Jamfile freetype/src/gxvalid/gxvbsln.c freetype/include/freetype/internal/services/svotval.h freetype/src/otvalid/rules.mk freetype/src/pfr/pfrdrivr.c freetype/src/pcf/pcf.h freetype/src/type1/Jamfile freetype/src/pfr/pfrdrivr.h freetype/src/pcf/pcferror.h freetype/src/sfnt/ttsbit0.c freetype/src/base/ftmac.c freetype/src/base/ftgloadr.c freetype/src/base/ftbase.c freetype/builds/win32/vc2005/freetype.vcproj freetype/src/base/ftbase.h freetype/src/gxvalid/gxvmort0.c freetype/src/bdf/bdf.c freetype/src/bdf/bdf.h freetype/src/gxvalid/gxvalid.c freetype/src/cff/cff.c freetype/include/freetype/internal/psaux.h freetype/src/gxvalid/gxvalid.h freetype/autogen.sh freetype/src/base/fttype1.c freetype/src/autofit/afmodule.c freetype/src/autofit/afmodule.h freetype/src/pfr/pfrcmap.c freetype/src/pfr/pfrcmap.h freetype/src/psaux/Jamfile freetype/src/cff/cffpic.c freetype/src/base/ftdebug.c freetype/src/gzip/inflate.c freetype/src/cff/cffpic.h freetype/src/type1/t1driver.c freetype/src/otvalid/otvbase.c freetype/include/freetype/ftmoderr.h freetype/src/gxvalid/gxvopbd.c freetype/src/type1/t1driver.h freetype/src/base/basepic.c freetype/src/type1/t1parse.c freetype/src/otvalid/otvmath.c freetype/src/gxvalid/gxvmort1.c freetype/src/base/basepic.h freetype/src/psnames/rules.mk freetype/src/type1/t1parse.h freetype/src/pcf/Jamfile freetype/src/gzip/Jamfile freetype/src/base/ftbdf.c freetype/src/type1/t1afm.c freetype/src/raster/module.mk freetype/src/cid/cidobjs.c freetype/include/ft2build.h freetype/include/freetype/internal/services/svgxval.h freetype/include/freetype/internal/ftrfork.h freetype/src/type1/t1tokens.h freetype/src/type1/t1afm.h freetype/src/pshinter/pshrec.c freetype/src/cid/cidobjs.h freetype/src/pshinter/pshrec.h freetype/src/truetype/ttobjs.c freetype/src/autofit/autofit.c freetype/include/freetype/ftchapters.h freetype/src/type1/t1errors.h freetype/include/freetype/ftlzw.h freetype/src/truetype/ttobjs.h freetype/src/otvalid/otvgsub.c freetype/src/tools/apinames.c freetype/src/winfonts/fnterrs.h freetype/src/cache/ftcache.c freetype/include/freetype/ftglyph.h freetype/builds/win32/vc2005/index.html freetype/src/raster/rasterrs.h freetype/src/autofit/aflatin2.c freetype/src/type42/Jamfile freetype/src/base/ftpic.c freetype/src/autofit/aflatin2.h freetype/include/freetype/fttypes.h freetype/src/cache/ftcglyph.c freetype/src/gxvalid/gxvmort2.c freetype/src/pshinter/pshinter.c freetype/src/cache/ftcglyph.h freetype/src/tools/test_bbox.c freetype/src/cache/Jamfile freetype/src/type42/t42types.h freetype/include/freetype/internal/services/svpsinfo.h freetype/src/gxvalid/gxvmort.c freetype/src/raster/rastpic.c freetype/builds/win32/vc2008/index.html freetype/src/gxvalid/gxvmort.h freetype/src/gxvalid/README freetype/src/tools/docmaker/docbeauty.py freetype/src/raster/rastpic.h freetype/src/gzip/ftgzip.c freetype/include/freetype/ftcid.h freetype/include/freetype/internal/services/svpfr.h freetype/src/sfnt/module.mk freetype/src/type1/t1load.c freetype/docs/INSTALL freetype/src/gzip/inftrees.c freetype/docs/INSTALL.VMS freetype/src/type1/t1load.h freetype/src/gzip/inftrees.h freetype/src/pfr/pfrsbit.c freetype/src/cff/cfftoken.h freetype/src/gxvalid/gxvfeat.c freetype/include/freetype/internal/ftgloadr.h freetype/docs/PROBLEMS freetype/src/pfr/pfrsbit.h freetype/src/gxvalid/gxvfeat.h freetype/src/truetype/Jamfile freetype/src/gxvalid/gxvkern.c freetype/docs/INSTALL.MAC freetype/src/cid/Jamfile freetype/src/base/ftglyph.c freetype/include/freetype/ftmm.h freetype/src/otvalid/otverror.h freetype/docs/UPGRADE.UNIX freetype/src/autofit/afcjk.c freetype/src/autofit/aftypes.h freetype/src/psaux/afmparse.c freetype/src/sfnt/sfdriver.c freetype/src/autofit/afcjk.h freetype/src/sfnt/sfobjs.c freetype/src/base/ftobjs.c freetype/src/psaux/afmparse.h freetype/src/sfnt/sfdriver.h freetype/src/sfnt/sfobjs.h freetype/src/pfr/rules.mk freetype/src/psaux/module.mk freetype/src/base/ftstroke.c freetype/src/base/ftfstype.c freetype/docs/GPL.TXT freetype/src/base/ftbitmap.c freetype/src/pshinter/pshpic.c freetype/src/pshinter/pshpic.h freetype/src/psnames/pstables.h freetype/src/sfnt/rules.mk freetype/builds/wince/vc2005-ce/index.html freetype/src/autofit/afpic.c freetype/docs/PATENTS freetype/docs/raster.txt freetype/src/autofit/afpic.h freetype/src/cff/cffdrivr.c freetype/src/otvalid/otvgpos.c freetype/src/cid/cidriver.c freetype/src/cff/cffdrivr.h freetype/include/freetype/ftgasp.h freetype/src/autofit/afindic.c freetype/src/otvalid/otvgpos.h freetype/src/cid/cidriver.h freetype/src/autofit/afindic.h freetype/docs/INSTALL.GNU freetype/src/winfonts/module.mk freetype/src/sfnt/ttkern.c freetype/src/gzip/infutil.c freetype/src/sfnt/sferrors.h freetype/src/psaux/t1cmap.c freetype/src/sfnt/ttkern.h freetype/src/gxvalid/gxvmort4.c freetype/src/gzip/infutil.h freetype/include/freetype/ttnameid.h freetype/src/psaux/t1cmap.h freetype/src/gzip/zconf.h freetype/src/base/ftpatent.c freetype/src/truetype/rules.mk freetype/src/base/ftadvanc.c freetype/src/tools/docmaker/tohtml.py freetype/src/otvalid/otvalid.c freetype/src/otvalid/otvcommn.c freetype/include/freetype/config/ftmodule.h freetype/include/freetype/ftxf86.h freetype/src/otvalid/otvalid.h freetype/src/otvalid/otvcommn.h freetype/include/freetype/internal/ftserv.h freetype/Jamrules freetype/src/type1/module.mk freetype/src/base/ftapi.c freetype/docs/VERSION.DLL freetype/docs/LICENSE.TXT freetype/include/freetype/ftstroke.h freetype/include/freetype/ftlist.h freetype/include/freetype/ftbitmap.h freetype/src/type42/t42parse.c freetype/src/bdf/bdfdrivr.c freetype/modules.cfg freetype/builds/win32/visualce/freetype.dsp freetype/src/cid/ciderrs.h freetype/ChangeLog.20 freetype/ChangeLog.21 freetype/src/type42/t42parse.h freetype/ChangeLog.22 freetype/src/bdf/bdfdrivr.h freetype/include/freetype/tttables.h freetype/src/cid/module.mk freetype/src/autofit/afdummy.c freetype/src/tools/chktrcmp.py freetype/include/freetype/internal/services/svxf86nm.h freetype/src/autofit/afdummy.h freetype/include/freetype/internal/ftobjs.h freetype/src/pcf/pcfdrivr.c freetype/src/gxvalid/gxvmort5.c freetype/src/pcf/pcfdrivr.h freetype/src/psnames/Jamfile freetype/docs/MAKEPP freetype/Jamfile freetype/builds/win32/visualce/index.html freetype/include/freetype/ftotval.h freetype/src/tools/test_trig.c freetype/src/tools/docmaker/content.py freetype/include/freetype/ftadvanc.h freetype/include/freetype/internal/services/svpostnm.h freetype/src/cff/rules.mk freetype/src/gzip/zlib.h freetype/src/type42/t42error.h freetype/src/smooth/module.mk freetype/src/sfnt/sfnt.c freetype/src/autofit/afloader.c freetype/src/otvalid/Jamfile freetype/include/freetype/internal/services/svkern.h freetype/src/autofit/afloader.h freetype/src/cache/ftcerror.h freetype/src/psaux/psobjs.c freetype/src/sfnt/Jamfile freetype/src/gzip/infcodes.c freetype/src/truetype/ttpic.c freetype/src/psaux/psobjs.h freetype/src/base/ftcalc.c freetype/src/pshinter/pshnterr.h freetype/src/gzip/infcodes.h freetype/src/truetype/ttpic.h freetype/src/bdf/rules.mk freetype/include/freetype/internal/tttypes.h freetype/src/gxvalid/gxvmorx0.c freetype/include/freetype/internal/ftvalid.h freetype/include/freetype/fterrors.h freetype/builds/win32/visualc/freetype.dsp freetype/src/gzip/infblock.c freetype/src/base/ftlcdfil.c freetype/include/freetype/internal/ftmemory.h freetype/src/type1/type1.c freetype/include/freetype/ftpfr.h freetype/src/gzip/infblock.h freetype/src/pshinter/module.mk freetype/src/tools/ftrandom/Makefile freetype/src/type42/rules.mk freetype/src/gxvalid/gxvmorx.c freetype/docs/formats.txt freetype/src/cff/cffobjs.c freetype/src/smooth/ftsmooth.c freetype/src/gxvalid/gxvmorx.h freetype/src/cff/cffobjs.h freetype/include/freetype/ftoutln.h freetype/src/smooth/ftsmooth.h freetype/include/freetype/ftsynth.h freetype/src/tools/ftrandom/README freetype/src/winfonts/rules.mk freetype/docs/CHANGES freetype/src/base/ftotval.c freetype/include/freetype/tttags.h freetype/src/truetype/module.mk freetype/include/freetype/internal/autohint.h freetype/src/tools/glnames.py freetype/src/sfnt/ttload.c freetype/src/gxvalid/gxvfgen.c freetype/src/sfnt/ttload.h freetype/src/pfr/pfrtypes.h freetype/src/gxvalid/gxvtrak.c freetype/src/pcf/README freetype/include/freetype/internal/ftdriver.h freetype/include/freetype/ftgzip.h freetype/src/base/ftrfork.c freetype/include/freetype/internal/services/svbdf.h freetype/src/smooth/rules.mk freetype/src/gxvalid/gxvmorx1.c freetype/src/base/rules.mk freetype/src/autofit/afwarp.c freetype/src/cid/cidload.c freetype/include/freetype/ftgxval.h freetype/src/autofit/afwarp.h freetype/include/freetype/internal/services/svgldict.h freetype/src/cid/cidload.h freetype/src/gxvalid/gxvprop.c freetype/include/freetype/ftlcdfil.h freetype/src/tools/docmaker/sources.py freetype/src/type42/type42.c freetype/src/raster/rules.mk freetype/src/truetype/ttgxvar.c freetype/src/pshinter/Jamfile freetype/src/truetype/ttdriver.c freetype/src/gxvalid/Jamfile freetype/src/truetype/ttgxvar.h freetype/src/pfr/pfrgload.c freetype/src/Jamfile freetype/src/pshinter/pshmod.c freetype/src/truetype/ttdriver.h freetype/src/autofit/aflatin.c freetype/src/pfr/pfrgload.h freetype/src/base/ftsnames.c freetype/src/pshinter/pshmod.h freetype/include/freetype/internal/ftcalc.h freetype/include/freetype/ftrender.h freetype/src/base/ftgasp.c freetype/src/autofit/aflatin.h freetype/src/base/ftdbgmem.c freetype/docs/TRUETYPE freetype/src/smooth/ftspic.c freetype/include/freetype/t1tables.h freetype/src/cid/cidgload.c freetype/src/base/ftoutln.c freetype/src/smooth/ftspic.h freetype/src/base/ftsynth.c freetype/src/base/ftwinfnt.c freetype/src/cid/cidgload.h freetype/include/freetype/internal/internal.h freetype/src/sfnt/ttbdf.c freetype/src/sfnt/ttbdf.h freetype/src/lzw/ftlzw.c freetype/builds/win32/vc2008/freetype.vcproj freetype/src/truetype/ttpload.c freetype/src/gxvalid/gxvmorx2.c freetype/src/truetype/ttinterp.c freetype/src/lzw/rules.mk freetype/src/truetype/ttpload.h freetype/src/truetype/ttinterp.h freetype/src/base/ftxf86.c freetype/src/base/ftstream.c freetype/src/sfnt/ttcmap.c freetype/include/freetype/internal/services/svmm.h freetype/src/sfnt/ttcmap.h freetype/src/gxvalid/module.mk freetype/src/gxvalid/gxvjust.c freetype/src/truetype/tterrors.h freetype/src/pcf/pcfutil.c freetype/src/cid/type1cid.c freetype/src/pcf/pcfutil.h freetype/src/base/ftgxval.c freetype/include/freetype/internal/pshints.h freetype/src/sfnt/ttmtx.c freetype/src/psnames/psmodule.c freetype/src/sfnt/ttmtx.h freetype/src/psaux/psauxmod.c freetype/builds/wince/vc2008-ce/index.html freetype/src/pfr/module.mk freetype/src/psnames/psmodule.h freetype/src/base/ftcid.c freetype/include/freetype/ftsnames.h freetype/src/psaux/psauxmod.h freetype/README.git freetype/configure freetype/src/sfnt/ttcmapc.h freetype/src/gzip/inffixed.h freetype/include/freetype/ftwinfnt.h freetype/src/pfr/pfrobjs.c freetype/src/base/Jamfile freetype/include/freetype/ftimage.h freetype/docs/release freetype/src/pfr/pfrobjs.h freetype/src/lzw/ftzopen.c freetype/src/truetype/truetype.c freetype/src/lzw/Jamfile freetype/Makefile freetype/src/lzw/ftzopen.h freetype/src/base/fttrigon.c freetype/src/autofit/afhints.c freetype/src/autofit/afhints.h freetype/builds/win32/visualce/freetype.vcproj freetype/include/freetype/ftmac.h freetype/src/psaux/rules.mk freetype/src/type1/rules.mk freetype/src/cache/ftcimage.c freetype/src/psnames/pspic.c freetype/src/cache/ftcimage.h freetype/include/freetype/config/ftconfig.h freetype/src/cid/cidparse.c freetype/src/psnames/pspic.h freetype/src/cff/cfferrs.h freetype/src/cid/cidparse.h freetype/src/smooth/Jamfile freetype/src/gzip/adler32.c freetype/include/freetype/internal/sfnt.h freetype/docs/reference/README freetype/src/winfonts/winfnt.c freetype/devel/ftoption.h freetype/src/sfnt/sfntpic.c freetype/src/gzip/zutil.c freetype/src/winfonts/winfnt.h freetype/src/smooth/smooth.c freetype/src/sfnt/sfntpic.h freetype/src/gzip/zutil.h freetype/src/smooth/ftgrays.c freetype/src/raster/ftmisc.h freetype/src/gxvalid/gxvmorx4.c freetype/src/winfonts/Jamfile freetype/include/freetype/internal/pcftypes.h freetype/src/smooth/ftgrays.h freetype/src/pfr/pfrerror.h freetype/src/raster/raster.c freetype/include/freetype/internal/services/svwinfnt.h freetype/docs/CUSTOMIZE freetype/builds/unix/configure.raw freetype/include/freetype/internal/t1types.h freetype/builds/wince/vc2008-ce/freetype.vcproj freetype/src/otvalid/module.mk freetype/ChangeLog freetype/include/freetype/internal/services/svpscmap.h freetype/include/freetype/fttrigon.h freetype/docs/FTL.TXT freetype/src/cache/ftcmanag.c freetype/src/sfnt/ttsbit.c freetype/README freetype/src/cache/ftcmanag.h freetype/src/sfnt/ttsbit.h freetype/src/type42/t42drivr.c freetype/src/psaux/psconv.c freetype/include/freetype/ftbdf.h freetype/include/freetype/ftsizes.h freetype/src/type42/t42drivr.h freetype/src/psaux/psconv.h freetype/include/freetype/internal/services/svtteng.h freetype/include/freetype/internal/ftdebug.h freetype/src/tools/docmaker/docmaker.py freetype/src/gxvalid/gxverror.h freetype/src/autofit/module.mk freetype/include/freetype/internal/ftstream.h freetype/src/cff/cfftypes.h freetype/src/gxvalid/gxvmorx5.c freetype/src/gxvalid/gxvmod.c freetype/include/freetype/internal/ftpic.h freetype/src/gxvalid/gxvmod.h freetype/include/freetype/ftbbox.h freetype/src/otvalid/otvmod.c freetype/src/psnames/psnames.c freetype/src/cid/rules.mk freetype/src/psaux/psauxerr.h freetype/src/type42/t42objs.c freetype/src/otvalid/otvmod.h freetype/src/cache/ftccmap.c freetype/src/cache/ftcbasic.c freetype/src/type42/t42objs.h freetype/src/smooth/ftsmerrs.h freetype/include/freetype/internal/services/svttcmap.h freetype/version.sed freetype/src/psaux/t1decode.c freetype/src/autofit/rules.mk freetype/src/tools/docmaker/utils.py freetype/builds/win32/visualc/index.html freetype/src/psaux/t1decode.h freetype/src/type42/module.mk freetype/src/otvalid/otvjstf.c freetype/src/autofit/aferrors.h freetype/src/cff/cffgload.c freetype/src/gxvalid/gxvlcar.c freetype/include/freetype/internal/services/svsfnt.h freetype/src/base/ftinit.c freetype/src/bdf/README freetype/src/cache/ftccback.h freetype/src/cff/cffgload.h freetype/src/base/ftmm.c freetype/src/pcf/module.mk freetype/docs/TODO freetype/src/tools/Jamfile freetype/src/autofit/afangles.c freetype/include/freetype/config/ftoption.h freetype/src/cff/cffload.c freetype/src/gxvalid/gxvcommn.c freetype/src/autofit/afangles.h freetype/src/cff/cffload.h freetype/src/gxvalid/gxvcommn.h freetype/src/sfnt/ttpost.c freetype/src/sfnt/ttpost.h freetype/src/cache/rules.mk freetype/include/freetype/ttunpat.h freetype/include/freetype/ftmodapi.h freetype/include/freetype/internal/fttrace.h]</p>
</blockquote>

<p><strong><a name="2010-04-05T100359.155794Z"></a>
2010-04-05T10:03:59.155794Z Chris Liddell</strong></p>
<blockquote>
<pre>
Fix the FAPI implementation of finding the appropriate bytes for a given character code from an array of strings representing a CMap.</pre>
<p>[psi/zfapi.c]</p>
</blockquote>

<p><strong><a name="2010-04-02T123123.439338Z"></a>
2010-04-02T12:31:23.439338Z Ken Sharp</strong></p>
<blockquote>
<pre>
'Fix' FAPI with FreeType.

FreeType's hinting is worse than useless for type 1 fonts, its actually harmful. It
distorts the glyph shape because it hints an unscaled outline. While it would be best
to fix FreeType's hinting this is a large project. For now this patch disables FreeType
hinting when handling type 1 fonts.

This resolves many spacing issues as well as fixing the stroke/fill mismatch with 
ia3z3519.pdf and the incorrectly scaled outline in womanface.pdf.
</pre>
<p>[psi/fapi_ft.c]</p>
</blockquote>

<p><strong><a name="2010-04-02T091923.286738Z"></a>
2010-04-02T09:19:23.286738Z Chris Liddell</strong></p>
<blockquote>
<pre>
Extend Ken's change to avoid using FT's &quot;synthetic&quot; vertical metrics for Type42 fonts to cover all fonts using TTF outlines (so CIDType 2 fonts, as well).</pre>
<p>[psi/fapi_ft.c]</p>
</blockquote>

<p><strong><a name="2010-04-02T090653.941441Z"></a>
2010-04-02T09:06:53.941441Z Ken Sharp</strong></p>
<blockquote>
<pre>
Fix a bug in the FreeType scan conversion.

A multiply and divide to calculate the slope of a line did not account for the
possibility of overflow during multiplication. Using the supplied SMulDiv routine fixes
the problem.

The patch has been supplied upstream to the FreeType development team.
</pre>
<p>[freetype/src/raster/ftraster.c]</p>
</blockquote>

<p><strong><a name="2010-04-01T133252.153614Z"></a>
2010-04-01T13:32:52.153614Z Robin Watts</strong></p>
<blockquote>
<pre>
Slight tidy up to gs_2_colors code: Given that the cie_joint_caches_alt is
now kept in the imager state rather than the graphics state, move the
reference counting/initialisation for the same into the imager state
too. No difference in operation, but just a bit tidier.

No expected differences, though the cluster may show 2colCIEtest.pdf as
failing if it hasn't propogated around the nodes yet.

</pre>
<p>[base/gsstate.c base/gsistate.c]</p>
</blockquote>

<p><strong><a name="2010-03-31T154306.179195Z"></a>
2010-03-31T15:43:06.179195Z Chris Liddell</strong></p>
<blockquote>
<pre>
Bounds check the correct object when looking up a CID map</pre>
<p>[psi/zfapi.c]</p>
</blockquote>

<p><strong><a name="2010-03-31T144031.704728Z"></a>
2010-03-31T14:40:31.704728Z Chris Liddell</strong></p>
<blockquote>
<pre>
Correct a logical error/typo in the fallback to non-hinted condition.</pre>
<p>[psi/fapi_ft.c]</p>
</blockquote>

<p><strong><a name="2010-03-31T132201.442343Z"></a>
2010-03-31T13:22:01.442343Z Chris Liddell</strong></p>
<blockquote>
<pre>
Prevent applying the nominalWidthX for T2 fonts, when FT already applies it for us. Previously, the code was actually erroneously adding the defaultWidthX. Since this use of nominalWidthX *may* be renderer dependent, it is now controlled by the can_replace_metrics() call.</pre>
<p>[psi/zfapi.c]</p>
</blockquote>

<p><strong><a name="2010-03-31T131641.790764Z"></a>
2010-03-31T13:16:41.790764Z Chris Liddell</strong></p>
<blockquote>
<pre>
In the even a glyph name is not found in the CharStrings dictionary, fall back to using the .notdef (instead of returning an error).</pre>
<p>[psi/zfapi.c]</p>
</blockquote>

<p><strong><a name="2010-03-31T130744.152960Z"></a>
2010-03-31T13:07:44.152960Z Chris Liddell</strong></p>
<blockquote>
<pre>
For certain errors from FT, retry interpretting the glyph without hinting - this more closely matches the existing behaviour.</pre>
<p>[psi/fapi_ft.c]</p>
</blockquote>

<p><strong><a name="2010-03-31T113210.299125Z"></a>
2010-03-31T11:32:10.299125Z Robin Watts</strong></p>
<blockquote>
<pre>
Remove unused variable. No expected differences.

</pre>
<p>[base/gsstate.c]</p>
</blockquote>

<p><strong><a name="2010-03-31T012018.778513Z"></a>
2010-03-31T01:20:18.778513Z Ray Johnston</strong></p>
<blockquote>
<pre>
Temporary reversion of previous mkromfs commit to remove -g until it works
correctly (fooled by a GS_LIB environment variable during testing)
</pre>
<p>[psi/psromfs.mak]</p>
</blockquote>

<p><strong><a name="2010-03-30T225953.311321Z"></a>
2010-03-30T22:59:53.311321Z Ray Johnston</strong></p>
<blockquote>
<pre>
Implement '-g' option in mkromfs to fold in some of the older 'genint'
functions (collect all init files into a single gs_init.ps, strip
whitespace and comments). Also change mkromfs so that wildcard expansion
must be specified using '*' on the command line which also means that
single explicit files can now be put into the %rom% file system.

Add many missed dependencies to the list for the 'gsromfs.c' %rom% file
system (CMap, ColorSpace, Decoding, Encoding, Font, IdiomSet, ProcSet,
SubstCID) and separate out miscellenaeous files.

Remove old geninit references from makefiles: psi/int.mak psi/os2.mak,
base/bcwin32.mak, base/msvctail.mak, base/winlib.mak, base/macos-mcp.mak,
base/openvms.mak, base/lib.mak, base/unix-aux.mak base/watcw32.mak,
base/wctail.mak
</pre>
<p>[base/wctail.mak psi/os2.mak base/lib.mak base/bcwin32.mak base/openvms.mak base/mkromfs.c base/gs.mak base/watcw32.mak psi/psromfs.mak psi/int.mak base/unix-aux.mak base/macos-mcp.mak base/msvctail.mak]</p>
</blockquote>

<p><strong><a name="2010-03-30T184034.337393Z"></a>
2010-03-30T18:40:34.337393Z Robin Watts</strong></p>
<blockquote>
<pre>
Fix bug 691132 by ensuring that whenever we set a line width, we set
it to the absolute value of the line width. This seems consistent with
PDF, and cures the clipping problem in PCL referred to by the bug.

No expected differences.

</pre>
<p>[base/gxline.h]</p>
</blockquote>

<p><strong><a name="2010-03-30T144656.884951Z"></a>
2010-03-30T14:46:56.884951Z Robin Watts</strong></p>
<blockquote>
<pre>
In the gs_2_colors branch I had made 2 copies of the color state and swapped
between them. I had included dev_ht as part of this 'split' state, which
was a significant contributor to the slowdown due to it forcing repeated
writing of the halftone data to the clist. Also, it required significant
extra work on every setscreen or setcolorscreen operation.

Discussions with Henry/Ray/Kens et al lead to the realisation this wasn't
required. This patch therefore backs out the dev_ht split, and the changes
to zsetscreen and zsetcolorscreen. Additional code is however required to
clear the 'alternative' dev_color when a halftone is installed to stop the
'swapped out' color pointing to an illegal halftone cache.

This runs through local testing with no diffs showing (though some
strangeness was observed with an earlier version of this patch in
regression testing - Marcos has captured this with bug 691223).

This seems to have helped with the largest slowdowns, but there are still
significant differences in some cases. Very preliminary investigations seem
to show more time being spent in the interpreter/gc mechanism. Continuing
to investigate.


</pre>
<p>[base/gsstate.c base/gxistate.h base/gsht.c base/gxdcolor.h base/gzstate.h psi/zht.c psi/zht1.c]</p>
</blockquote>

<p><strong><a name="2010-03-30T101657.091024Z"></a>
2010-03-30T10:16:57.091024Z Ken Sharp</strong></p>
<blockquote>
<pre>
New Fontmap files for the URW fonts, both type 1 and TrueType formats.

The file Fontmap.URW-136.T1 contains definitions for the type 1 fonts (the URW PFB
fonts must be in the search path).

The file Fontmap.URW-136.TT contains definitions for the TrueType fonts (the URW TTF
fonts must be in the search path).

Currently neither of these work 100% because of problems with the URW font sets
(several incorrectly named fonts, and in one case an illegal type 1 font)

</pre>
<p>[lib/Fontmap.URW-136.T1 lib/Fontmap.URW-136.TT]</p>
</blockquote>

<p><strong><a name="2010-03-29T191049.447074Z"></a>
2010-03-29T19:10:49.447074Z Alex Cherepanov</strong></p>
<blockquote>
<pre>
Drop 'loca' entries that point beyond 'glyf' table during re-spliting
sfnts glyfs strings. Bug 691221.
</pre>
<p>[Resource/Init/gs_ttf.ps]</p>
</blockquote>

<p><strong><a name="2010-03-29T075249.284823Z"></a>
2010-03-29T07:52:49.284823Z Chris Liddell</strong></p>
<blockquote>
<pre>
Change the FT interface code so we always use metrics retrieved from Freetype, rather than attempting to &quot;fabricate&quot; metrics (which have already been handled correctly by FT).</pre>
<p>[psi/fapi_ft.c]</p>
</blockquote>

<p><strong><a name="2010-03-27T015955.922560Z"></a>
2010-03-27T01:59:55.922560Z Robin Watts</strong></p>
<blockquote>
<pre>
Fix compilation error in pngs2html.pl (forgot to define variable).

</pre>
<p>[toolbin/localcluster/pngs2html.pl]</p>
</blockquote>

<p><strong><a name="2010-03-26T102856.873949Z"></a>
2010-03-26T10:28:56.873949Z Masaki Ushizaka</strong></p>
<blockquote>
<pre>
A leftover from r10603 (Makefile change).</pre>
<p>[base/lib.mak]</p>
</blockquote>

<p><strong><a name="2010-03-26T002016.302228Z"></a>
2010-03-26T00:20:16.302228Z Robin Watts</strong></p>
<blockquote>
<pre>
Updated localcluster bmpcmp html generation script. Bitmaps produced are now
zoomable.


</pre>
<p>[toolbin/localcluster/pngs2html.pl]</p>
</blockquote>

<p><strong><a name="2010-03-24T124759.902550Z"></a>
2010-03-24T12:47:59.902550Z Robin Watts</strong></p>
<blockquote>
<pre>
Fix for bug 691115.

In some circumstances, the shading code can get all the way to the point of
marking the screen/page without ever clipping to the relavent region. This
produces cases where we &quot;draw outside the lines&quot;. Often this is masked by
the fact that we only ever draw as far out of the lines as would be covered
by an area of constant color (typically a small area).

The fix for this is to spot the unclipped case when we come to render
trapezoids to the screen, and to clip the trapezoid into (at most) 3
smaller trapezoids.

This causes 104 non-pdfwrite differences, and 24 pdfwrite ones. Examination
using localcuster bmpcmp shows them all to be acceptable.

</pre>
<p>[base/gxshade6.c]</p>
</blockquote>

<p><strong><a name="2010-03-24T120547.469905Z"></a>
2010-03-24T12:05:47.469905Z Robin Watts</strong></p>
<blockquote>
<pre>
Tweak to bmpcmp: Darken the third image (the diff image) to make changes
stand out better.

</pre>
<p>[toolbin/bmpcmp.c]</p>
</blockquote>

<p><strong><a name="2010-03-24T001027.875727Z"></a>
2010-03-24T00:10:27.875727Z Robin Watts</strong></p>
<blockquote>
<pre>
Correct DOS line endings in bmpcmp.c.

Fix bug whereby areas with no changes in were still be saved out.

</pre>
<p>[toolbin/bmpcmp.c]</p>
</blockquote>

<p><strong><a name="2010-03-23T191432.177681Z"></a>
2010-03-23T19:14:32.177681Z Robin Watts</strong></p>
<blockquote>
<pre>
Correct problem with bmpcmp whereby certain sizes of changed areas within
images could cause overlapping output bitmaps. This causes problems with
the output of bitmaps now due to the new 'in-place' generation of the diff
bitmap. Fixed by choosing sizes more smartly.

</pre>
<p>[toolbin/bmpcmp.c]</p>
</blockquote>

<p><strong><a name="2010-03-23T090216.120692Z"></a>
2010-03-23T09:02:16.120692Z Till Kamppeter</strong></p>
<blockquote>
<pre>
CUPS Raster output device: Error out correctly with the return_error() macro and not with &quot;gs_exit(); exit()&quot;, force banding mode as there are files which do not render otherwise (Bug #691170).
</pre>
<p>[cups/gdevcups.c]</p>
</blockquote>

<p><strong><a name="2010-03-23T000659.853037Z"></a>
2010-03-23T00:06:59.853037Z Till Kamppeter</strong></p>
<blockquote>
<pre>
Code clean-ups in the &quot;cups&quot; output device to fix the segfaults in bug #691170 and bug #691014 (but does not fix the bugs yet).
</pre>
<p>[cups/gdevcups.c]</p>
</blockquote>

<p><strong><a name="2010-03-22T141842.718453Z"></a>
2010-03-22T14:18:42.718453Z Chris Liddell</strong></p>
<blockquote>
<pre>
Handle CID fonts whose GDBytes != 2 - previously GDBytes was hardcoded as 2.</pre>
<p>[psi/zfapi.c]</p>
</blockquote>

<p><strong><a name="2010-03-22T064308.806820Z"></a>
2010-03-22T06:43:08.806820Z Marcos H. Woehrmann</strong></p>
<blockquote>
<pre>
Added the ability to specify bmpcmp options when running clusterpush.pl, e.g.:

  clusterpush.pl bmpcmp -w 9 -t 10

No validation is done on the options; bad options will result in no bmpcmp output being generated.
</pre>
<p>[toolbin/localcluster/clustermaster.pl toolbin/localcluster/readlog.pl toolbin/localcluster/build.pl toolbin/localcluster/clusterpush.pl toolbin/localcluster/run.pl toolbin/localcluster/compare.pl]</p>
</blockquote>

<p><strong><a name="2010-03-21T050150.135122Z"></a>
2010-03-21T05:01:50.135122Z Marcos H. Woehrmann</strong></p>
<blockquote>
<pre>
Fixed maxdiffs argument in bmpcmp.c (was acting as maxpage).
</pre>
<p>[toolbin/bmpcmp.c]</p>
</blockquote>

<p><strong><a name="2010-03-21T032353.245152Z"></a>
2010-03-21T03:23:53.245152Z Marcos H. Woehrmann</strong></p>
<blockquote>
<pre>
Fixed a couple of compiler warnings in bmpcmp.c
</pre>
<p>[toolbin/bmpcmp.c]</p>
</blockquote>

<p><strong><a name="2010-03-19T183004.447497Z"></a>
2010-03-19T18:30:04.447497Z Ralph Giles</strong></p>
<blockquote>
<pre>
Compute AES cypher tables at compile time instead of run time.

The aes implementation needs some tables of data to perform its
calculations. In a thread-safety review, Henry spotted that the
tables were global variables with no mutex isolation.

I believe this is actually ok. There is a static flag marking whether
the tables are initialized. If they are not, a call to aes_setkey_*
will invoke aes_gen_tables to initialize them, then set the flag.
However, aes_gen_tables operates deterministically, always writing
the same data sequence to the globals. So while there is a race
where two threads could be executing aes_gen_tables at the same time,
or while another thread is accessing the same tables, there is no
read-modify-write step which could create inconsistent data.

Nevertheless, the tables are small relative to our application, and
there is a compile time option XYSSL_AES_ROM_TABLES which generates
the data at compile time and stores it static const. This commit
turns on that option, allowing the compiler to put the data in a
non-writable segment and making the careful thread safety analysis
above unnecessary.

There should be no difference in behaviour, and Henry has verified
that the two code paths result in identical table data.</pre>
<p>[base/aes.c]</p>
</blockquote>

<p><strong><a name="2010-03-18T113938.599047Z"></a>
2010-03-18T11:39:38.599047Z Ken Sharp</strong></p>
<blockquote>
<pre>
Update the list of face substitutions in .substitutefaces to include all the fonts we
define in Fontmap.GS (if not already defined).

Bug #691180, if we have a font defined in the Fontmap then we don't use the additional 
information in a PDF file FontDescriptor. Instead we stick with whatever font the PS
substitution comes up with (if the font is not present). If a member of the family is
not defined we do use the FontDescriptor. This can lead to different choices for the
substitute font. By defining the font in the substitutefaces array we can attempt to get
a consistent result.

This *will* lead to differences in the regression suite as we are now substituting 
different fonts for some missing faces. Apparently only with the test file for this
bug though.</pre>
<p>[Resource/Init/gs_fonts.ps]</p>
</blockquote>

<p><strong><a name="2010-03-18T005710.529905Z"></a>
2010-03-18T00:57:10.529905Z Robin Watts</strong></p>
<blockquote>
<pre>
Merge gs_2_colors branch down to trunk.

This adds a new set of color state information to the graphics/imager
state, along with a new non-standard postscript operator .swapcolors to
toggle between them.

The Postscript interpreter is updated to use one set of color information
for stroking, and the other for all non-stroking colors.

This produces differences in just 2 pdfwrite tests, due to rounding errors
due to changes in the way pdf with non-zero rendering modes is emitted now.

</pre>
<p>[psi/zcolor.c base/gsdps1.c base/gdevpdft.c base/gxccache.c /trunk/gs base/gspaint.c base/gscsepr.c base/gsimage.c base/gxchar.c base/gsptype1.c base/gxcmap.c psi/interp.c base/gzstate.h psi/dmmain.c base/gscspace.c base/gscolor1.c base/gscdevn.c base/gscolor2.c base/gscie.c base/gxistate.h psi/psromfs.mak psi/dxmain.c base/gxcspace.h base/gxhldevc.c psi/dxmainc.c psi/dmmain.r Resource/Init/pdf_draw.ps psi/zht1.c base/gscolor.c psi/zicc.c psi/zchar1.c base/gxpaint.c base/gsstate.c Resource/Init/pdf_ops.ps psi/zcie.c base/gstext.c Resource/Init/pdf_font.ps base/gstrans.c psi/zht.c base/gsequivc.c base/gxdcolor.h psi/igstate.h base/gspcolor.c]</p>
</blockquote>

<p><strong><a name="2010-03-17T214113.190501Z"></a>
2010-03-17T21:41:13.190501Z Robin Watts</strong></p>
<blockquote>
<pre>
bmpcmp tweak to allow maximum/minimum bitmap sizes to be set from the
command line.

</pre>
<p>[toolbin/bmpcmp.c]</p>
</blockquote>

<p><strong><a name="2010-03-17T201225.972208Z"></a>
2010-03-17T20:12:25.972208Z Robin Watts</strong></p>
<blockquote>
<pre>
MSVC whinges when asked to shift by 32 or more bits at once. Simple tweaks
to fool the compiler and eliminate warnings.

No expected differences.

</pre>
<p>[base/gdevm64.c base/gdevm56.c base/gdevm48.c base/gdevm40.c base/gxclrast.c]</p>
</blockquote>

<p><strong><a name="2010-03-17T185412.480084Z"></a>
2010-03-17T18:54:12.480084Z Robin Watts</strong></p>
<blockquote>
<pre>
Tweak to gxcmap.c to remove warnings about shifting by more than 32 bits on
MSVC builds.

No expected differences.

</pre>
<p>[base/gxcmap.c]</p>
</blockquote>

<p><strong><a name="2010-03-17T173027.541399Z"></a>
2010-03-17T17:30:27.541399Z Robin Watts</strong></p>
<blockquote>
<pre>
Revised bmpcmp.
 * Redone command line handling
 * Ability to read PAMs (so we can read CMYK stuff now)
 * &quot;Fuzzy&quot; behaviour (both compatible and exhaustive modes)
 * New behaviour using map bitmap to avoid rediffing multiple times.
 * CMYK -&gt; RGB conversion as last step before PNG/BMP writing.

Still to do:
 * Output number of fuzzy matches etc to the meta file.

</pre>
<p>[toolbin/bmpcmp.c]</p>
</blockquote>

<p><strong><a name="2010-03-15T191855.825828Z"></a>
2010-03-15T19:18:55.825828Z Lars Uebernickel</strong></p>
<blockquote>
<pre>
Change default TIFF strip size to one megabyte.

Many fax readers have problems reading TIFF images which are chunked into
strips, and one megabyte is larger than the biggest expected fax page.  Hence,
ghostscript's default TIFF output will be accepted by those readers.


</pre>
<p>[base/gdevtifs.h]</p>
</blockquote>

<p><strong><a name="2010-03-15T190043.589302Z"></a>
2010-03-15T19:00:43.589302Z Lars Uebernickel</strong></p>
<blockquote>
<pre>
Write TIFF directories before the page data.  This might help bug #691172 and
probably some other non-conforming TIFF readers.

</pre>
<p>[base/gdevtifs.c base/gdevtsep.c base/gdevtfnx.c]</p>
</blockquote>

<p><strong><a name="2010-03-15T152155.436137Z"></a>
2010-03-15T15:21:55.436137Z Alex Cherepanov</strong></p>
<blockquote>
<pre>
Don't throw an error when a filter returns 0 bytes and a normal return code.
This often happens with eexecDecode filter, which has to return the control
to the interpreter after every space character since Adobe no longer adds
zeros at the end of the encoded block. Document new return code 2 used by
eexecDecode filter. Bug 690909.
</pre>
<p>[base/sstring.c base/seexec.c psi/iscan.c]</p>
</blockquote>

<p><strong><a name="2010-03-15T145615.278449Z"></a>
2010-03-15T14:56:15.278449Z Lars Uebernickel</strong></p>
<blockquote>
<pre>
Partial fix for bug #691172: The tiff resolution tags are floating point values
and need to be passed as such to TIFFSetField.

</pre>
<p>[base/gdevtifs.c]</p>
</blockquote>

<p><strong><a name="2010-03-15T074438.447170Z"></a>
2010-03-15T07:44:38.447170Z Lars Uebernickel</strong></p>
<blockquote>
<pre>
Applied Tim Waugh's patch from bug #691171: A NULL check for the argument of
TIFFCleanup was missing, which caused a segfault when opening the output device
failed for any of the devices in gdevtfax.c.

</pre>
<p>[base/gdevtfax.c]</p>
</blockquote>

<p><strong><a name="2010-03-15T063434.317078Z"></a>
2010-03-15T06:34:34.317078Z regression</strong></p>
<blockquote>
<pre>
Added support for mupdf testing in local regression suite.
</pre>
<p>[toolbin/localcluster/clustermaster.pl toolbin/localcluster/readlog.pl toolbin/localcluster/build.pl toolbin/localcluster/run.pl]</p>
</blockquote>

<p><strong><a name="2010-03-15T063125.268888Z"></a>
2010-03-15T06:31:25.268888Z Marcos H. Woehrmann</strong></p>
<blockquote>
<pre>
Changes to the local cluster code:

added bmpcmp documentation to clusterpush.txt
new file, runNightly.pl, for nightly regression testing
readlog.pl, build.pl, and run.pl changes for nightly regression use
</pre>
<p>[toolbin/localcluster/readlog.pl toolbin/localcluster/build.pl toolbin/localcluster/runNightly.pl toolbin/localcluster/run.pl toolbin/localcluster/clusterpush.txt]</p>
</blockquote>

<p><strong><a name="2010-03-11T173630.596061Z"></a>
2010-03-11T17:36:30.596061Z Chris Liddell</strong></p>
<blockquote>
<pre>
Apply a change submitted to FT and accepted - see FT bug #27442</pre>
<p>[freetype/src/raster/ftraster.c]</p>
</blockquote>

<p><strong><a name="2010-03-11T050122.057384Z"></a>
2010-03-11T05:01:22.057384Z Marcos H. Woehrmann</strong></p>
<blockquote>
<pre>

Run svn update on the ghostscript source even for clusterpush runs to make sure that bmpcmp.c is current.

</pre>
<p>[toolbin/localcluster/run.pl]</p>
</blockquote>

<p><strong><a name="2010-03-10T174109.765460Z"></a>
2010-03-10T17:41:09.765460Z regression</strong></p>
<blockquote>
<pre>

Minor cleanup of the local cluster code.

</pre>
<p>[toolbin/localcluster/clustermaster.pl toolbin/localcluster/pngs2html.pl toolbin/localcluster/build.pl toolbin/localcluster/run.pl toolbin/localcluster/compare.pl]</p>
</blockquote>

<p><strong><a name="2010-03-10T164226.014885Z"></a>
2010-03-10T16:42:26.014885Z Robin Watts</strong></p>
<blockquote>
<pre>
Fix bug in bmpcmp.c: When reading images from multi-image sets, we stop
the comparison process as soon as we fail to find any differences in the
current image. With this fix we correctly keep searching to the end.

</pre>
<p>[toolbin/bmpcmp.c]</p>
</blockquote>

<p><strong><a name="2010-03-10T150557.116970Z"></a>
2010-03-10T15:05:57.116970Z Chris Liddell</strong></p>
<blockquote>
<pre>
Change how we derive the glyph metrics from FT: we now interpret the glyph description only once, scaled and hinted, and then calculate the metrics from that. It's more accurate, accounts for hints that extend the glyph outline, and should be a worthwhile speed improvement.</pre>
<p>[psi/fapi_ft.c]</p>
</blockquote>

<p><strong><a name="2010-03-10T125150.027959Z"></a>
2010-03-10T12:51:50.027959Z Robin Watts</strong></p>
<blockquote>
<pre>
Change the condition under which we update the overprint device when restoring
a graphics state to be more relaxed; rather than updating if the overprint
state has changed we now update if it was enabled, or it if it is enabled.

The logic behind this is that it will still fire in all the same conditions
it did before, but will also fire when we restore from a state that had it
enabled to another state that had it enabled. This should be entirely
harmless, but will allow the state to be updated in the case where a
colorspace has been updated.

This causes 2 differences in the tests, that only show up in psd files.
All indications seem to be that these files really are identical. But if
they aren't, I believe they should be progressions, rather than regressions.

This moves the trunk more into line with the output of the gs_2_colors branch.

</pre>
<p>[base/gsstate.c]</p>
</blockquote>

<p><strong><a name="2010-03-10T061323.278865Z"></a>
2010-03-10T06:13:23.278865Z Marcos H. Woehrmann</strong></p>
<blockquote>
<pre>

Added local modes to build.pl and run.pl in preparation for use as part of the nightly regression.

</pre>
<p>[toolbin/localcluster/build.pl toolbin/localcluster/run.pl]</p>
</blockquote>

<p><strong><a name="2010-03-10T051959.535554Z"></a>
2010-03-10T05:19:59.535554Z Ray Johnston</strong></p>
<blockquote>
<pre>
Fix for SEGV with the psdcmyk device on 258-01.ps. This was a fundamental memory
problem with any device that used the compressed_color_list functions in gdevdevn.c
since a 'restore' could free structures which were still needed by the device.
Use stable_memory to avoid this. Bug 691150.
</pre>
<p>[base/gdevdevn.c]</p>
</blockquote>

<p><strong><a name="2010-03-09T172707.400171Z"></a>
2010-03-09T17:27:07.400171Z Robin Watts</strong></p>
<blockquote>
<pre>
Another tweak to the local cluster bmpcmp html page generation. I managed to
miss renaming the images in the second column.

</pre>
<p>[toolbin/localcluster/pngs2html.pl]</p>
</blockquote>

<p><strong><a name="2010-03-09T172239.470336Z"></a>
2010-03-09T17:22:39.470336Z Robin Watts</strong></p>
<blockquote>
<pre>
Another tweak to the localcluster bmpcmp html page generation javascript;
quote the string to avoid it being converted to an int.


</pre>
<p>[toolbin/localcluster/pngs2html.pl]</p>
</blockquote>

<p><strong><a name="2010-03-09T172235.452303Z"></a>
2010-03-09T17:22:35.452303Z Till Kamppeter</strong></p>
<blockquote>
<pre>
Let pdftoraster not exit before the Ghostscript sub-process finishes. Thanks to Tim Waugh from Red Hat for the patch.
</pre>
<p>[cups/pdftoraster.c]</p>
</blockquote>

<p><strong><a name="2010-03-09T171522.155871Z"></a>
2010-03-09T17:15:22.155871Z Robin Watts</strong></p>
<blockquote>
<pre>
Fix pngs2html.pl to number images according to both directory and image
number (needed now as images restart from 0 within each directory). This
really should fix the bmpcmp html output.

</pre>
<p>[toolbin/localcluster/pngs2html.pl]</p>
</blockquote>

<p><strong><a name="2010-03-09T170842.132281Z"></a>
2010-03-09T17:08:42.132281Z Robin Watts</strong></p>
<blockquote>
<pre>
More fixes for the bmpcmp html page generations javascript.

Change code to pass numbers to swap() rather than strings as javascripts
conversion of strings to ints is... unhelpful.

</pre>
<p>[toolbin/localcluster/bmps2html.pl toolbin/localcluster/pngs2html.pl]</p>
</blockquote>

<p><strong><a name="2010-03-09T165048.278966Z"></a>
2010-03-09T16:50:48.278966Z Robin Watts</strong></p>
<blockquote>
<pre>
Misplaced bracket in the javascript meant that only the first images would
swap on mouseover properly. Fixed here.


</pre>
<p>[toolbin/localcluster/bmps2html.pl toolbin/localcluster/pngs2html.pl]</p>
</blockquote>

<p><strong><a name="2010-03-09T163921.328229Z"></a>
2010-03-09T16:39:21.328229Z Robin Watts</strong></p>
<blockquote>
<pre>
Fix javascript problems in bmpcmp output page generation. What sort of
stupid broken language depends on whitespace?

</pre>
<p>[toolbin/localcluster/bmps2html.pl toolbin/localcluster/pngs2html.pl]</p>
</blockquote>

<p><strong><a name="2010-03-09T163506.527087Z"></a>
2010-03-09T16:35:06.527087Z Till Kamppeter</strong></p>
<blockquote>
<pre>
Fixes on CUPS Raster output device:
- Fixed memory reallocation on bitmap size change. Reallocation is not only
  needed when dimendions and margins change, but also when the color depth
  changes. Fixes bugs #691029 and #691108.
- Fixed arrayoption() macro in cups_put_params() function. Array values did
  not get actually set in cups.header data structure. Bug only showed via
  a compiler warning.
- Silenced compiler warning by presetting c0..c3 in cups_map_cmyk() to zero.
</pre>
<p>[cups/gdevcups.c]</p>
</blockquote>

<p><strong><a name="2010-03-09T162931.666786Z"></a>
2010-03-09T16:29:31.666786Z Robin Watts</strong></p>
<blockquote>
<pre>
Attempted fix for bmpcmp output javascript problems with the coordinate
tracking.

</pre>
<p>[toolbin/localcluster/pngs2html.pl]</p>
</blockquote>

<p><strong><a name="2010-03-09T161159.669918Z"></a>
2010-03-09T16:11:59.669918Z Robin Watts</strong></p>
<blockquote>
<pre>
Fix typos in the javascript code for pngs2html.pl and bmps2html.pl; this should
get at least some of it working, but the coord stuff still baffles me.

Also fix a typo that was causing the wrong &quot;third image&quot; to appear.

</pre>
<p>[toolbin/localcluster/bmps2html.pl toolbin/localcluster/pngs2html.pl]</p>
</blockquote>

<p><strong><a name="2010-03-09T014606.865448Z"></a>
2010-03-09T01:46:06.865448Z Marcos H. Woehrmann</strong></p>
<blockquote>
<pre>

Fixed longstanding bug fuzzy.c that caused pbm files to be misread.

</pre>
<p>[toolbin/tests/fuzzy.c]</p>
</blockquote>

<p><strong><a name="2010-03-08T215705.576067Z"></a>
2010-03-08T21:57:05.576067Z Hin-Tak Leung</strong></p>
<blockquote>
<pre>
updating documentation to mention how to run mkcidfm.ps manually; bug 688437</pre>
<p>[doc/Use.htm]</p>
</blockquote>

<p><strong><a name="2010-03-08T215437.005008Z"></a>
2010-03-08T21:54:37.005008Z Hin-Tak Leung</strong></p>
<blockquote>
<pre>
convert font file name to lowser case before matching; make it possible for upper case ARIALUNI.TTF to match; bug 688437</pre>
<p>[lib/mkcidfm.ps]</p>
</blockquote>

<p><strong><a name="2010-03-08T214956.216990Z"></a>
2010-03-08T21:49:56.216990Z Hin-Tak Leung</strong></p>
<blockquote>
<pre>
updating windows CJK font substitution list for more commonly found MS CJK fonts; bug 688437</pre>
<p>[lib/mkcidfm.ps]</p>
</blockquote>

<p><strong><a name="2010-03-08T214715.240330Z"></a>
2010-03-08T21:47:15.240330Z Hin-Tak Leung</strong></p>
<blockquote>
<pre>
revert to r8185 version of the korean example - it was removed in r8190 and a corrupted version r9325 was subsequently checked in; found during fixing bug 688437 (incompete font substitution list)</pre>
<p>[examples/cjk/gscjk_ak.ps]</p>
</blockquote>

<p><strong><a name="2010-03-08T162053.842289Z"></a>
2010-03-08T16:20:53.842289Z Ken Sharp</strong></p>
<blockquote>
<pre>
Ongoing bug fixes for #690448.
The FreeType code will synthesize vertical metrics for TrueType (Type 42) fonts which do
not contain a vmtx table. This includes the vertical advance, which will be returned
to the FAPI code, and used even if there were originally no vertical metrics and the
font should not have any vertical advance.

Modified the metrics override callback, called by FT, so that if the font is a TT font,
and this is a vertical metrics call, we set the advance to 0. This prevents the
synthesized metrics from incorrectly advancing the glyph vertically.

This may eventually be a problem if we find a CIDFont with Type42 outlines which relies
on the vmtx table in the font rather than the Metrics2 or CDevProc overrides to position
the glyphs. Since this facility was only added in CPSI 3011 it is unlikely we will ever
encounter such a font. THis has not been done at present, as the information (WMode=1)
is not currently available to the code called from FreeType to override the metrics, 
and would need to be added.

Also, fixed an issue where the 'advance_v' member of the metrics structure was left
uninitialised if a horizontal override took place. This could cause glyphs to be
mis-positioned vertically.
</pre>
<p>[psi/fapi_ft.c]</p>
</blockquote>

<p><strong><a name="2010-03-08T154120.817468Z"></a>
2010-03-08T15:41:20.817468Z Ken Sharp</strong></p>
<blockquote>
<pre>
revert revision 10871, we will tackle this problem in the FAPI FreeType interface code
instead of in FreeType itself.

</pre>
<p>[psi/fapi_ft.c]</p>
</blockquote>

<p><strong><a name="2010-03-08T152257.356559Z"></a>
2010-03-08T15:22:57.356559Z Ken Sharp</strong></p>
<blockquote>
<pre>
revert revision 10871, we will address the matter of FreeType creating synthetic vertical
metrics when none exist by overriding the synthetic metrics in the FAPI FreeType interface
code instead.
</pre>
<p>[freetype/src/truetype/ttgload.c freetype/include/freetype/freetype.h]</p>
</blockquote>

<p><strong><a name="2010-03-08T092849.484133Z"></a>
2010-03-08T09:28:49.484133Z Chris Liddell</strong></p>
<blockquote>
<pre>
Latest improvements to the FAPI/FT bridge code. This code resolves the issues with font matrices which do more than just scale. It is not yet &quot;finished&quot;, but is too big a step forward to risk losing.</pre>
<p>[psi/fapi_ft.c psi/zfapi.c]</p>
</blockquote>

<p><strong><a name="2010-03-05T210134.974121Z"></a>
2010-03-05T21:01:34.974121Z Marcos H. Woehrmann</strong></p>
<blockquote>
<pre>

Added bmpcmp option to clusterpush.pl.

</pre>
<p>[toolbin/localcluster/clusterpush.pl]</p>
</blockquote>

<p><strong><a name="2010-03-05T192534.812546Z"></a>
2010-03-05T19:25:34.812546Z regression</strong></p>
<blockquote>
<pre>

Export results of local cluster bmpcmp command to web.

</pre>
<p>[toolbin/localcluster/clustermaster.pl]</p>
</blockquote>

<p><strong><a name="2010-03-05T165000.654216Z"></a>
2010-03-05T16:50:00.654216Z regression</strong></p>
<blockquote>
<pre>

Update the local cluster code to use the new pbm-&gt;png mode of bmpcmp.

</pre>
<p>[toolbin/localcluster/clustermaster.pl toolbin/localcluster/build.pl toolbin/localcluster/run.pl toolbin/localcluster/compare.pl]</p>
</blockquote>

<p><strong><a name="2010-03-05T164710.049203Z"></a>
2010-03-05T16:47:10.049203Z Marcos H. Woehrmann</strong></p>
<blockquote>
<pre>

Minor changes due to bugzilla update.

</pre>
<p>[toolbin/bugsByEngineer.pl]</p>
</blockquote>

<p><strong><a name="2010-03-05T132434.158774Z"></a>
2010-03-05T13:24:34.158774Z Ken Sharp</strong></p>
<blockquote>
<pre>
Fix FreeType
Ongoing fixes for bug #690448. In this case FreeType generates vertical metrics for
TrueType (in our case Type 42) fonts which lack vhea/vmtx tables, which is generally
the case.

These metrics are useful to a 'normal' TrueType consumer which has a notion of the
orientation of the writing direction. However in PostScript we don;t know that, so we
apply both the horizontal and vertical advance widths.

If the vertical advance should be 0 (because its not specified) then creating one causes
the glyphs to be misplaced.

This code adds a new load flag to FreeType 'FT_LOAD_NO_SYNTHETIC_METRICS', and sets
this flag in the FAPI FreeType interface code, which prevents FreeType from manufacturing a bogus vertical advance.
</pre>
<p>[psi/fapi_ft.c freetype/src/truetype/ttgload.c freetype/include/freetype/freetype.h]</p>
</blockquote>

<p><strong><a name="2010-03-05T092347.698736Z"></a>
2010-03-05T09:23:47.698736Z Lars Uebernickel</strong></p>
<blockquote>
<pre>
Open tiffsep and tiffsep1 output files as seekable.

All files written by libtiff have to be seekable when writing multiple pages,
because libtiff tries to access previously written page dictionaries.  This
fixes bug 691160.

</pre>
<p>[base/gdevtsep.c]</p>
</blockquote>

<p><strong><a name="2010-03-05T070113.637667Z"></a>
2010-03-05T07:01:13.637667Z Marcos H. Woehrmann</strong></p>
<blockquote>
<pre>

Fix pbm reading and png writing in bmpcmp.c.

</pre>
<p>[toolbin/bmpcmp.c]</p>
</blockquote>

<p><strong><a name="2010-03-05T053224.962092Z"></a>
2010-03-05T05:32:24.962092Z regression</strong></p>
<blockquote>
<pre>

Added pngs2html.pl to repository: take a directory full of png files
generated by the increasingly poorly named bmpcmp.c and generate web pages
(like bmps2html.pl but without the bmp-&gt;png conversion).

</pre>
<p>[toolbin/localcluster/pngs2html.pl]</p>
</blockquote>

<p><strong><a name="2010-03-03T212107.833457Z"></a>
2010-03-03T21:21:07.833457Z Ralph Giles</strong></p>
<blockquote>
<pre>
Flip images from RGB to BGR pixel format when reading ppm files,
and flip them back to RGB when writing png files.

This adapts all the current routines to assume the BGRx storage
format used by the bmp image format for the internal representation,
as is already done with the row order.</pre>
<p>[toolbin/bmpcmp.c]</p>
</blockquote>

<p><strong><a name="2010-03-03T212104.624166Z"></a>
2010-03-03T21:21:04.624166Z Ralph Giles</strong></p>
<blockquote>
<pre>
Also save the difference image as a png when bmpcmp is compiled with HAVE_LIBPNG.</pre>
<p>[toolbin/bmpcmp.c]</p>
</blockquote>

<p><strong><a name="2010-03-03T203001.695369Z"></a>
2010-03-03T20:30:01.695369Z Robin Watts</strong></p>
<blockquote>
<pre>
Fix stupid memory overwrite bug on bmp load.

</pre>
<p>[toolbin/bmpcmp.c]</p>
</blockquote>

<p><strong><a name="2010-03-03T200329.767395Z"></a>
2010-03-03T20:03:29.767395Z Robin Watts</strong></p>
<blockquote>
<pre>
bmpcmp.c tweaks: Add (largely untested) code to allow &quot;plain&quot; (ascii) ppm,
pgm, pbm files. Also fix some compile warnings on 64bit platforms. Now
compiles cleanly with -Wall.


</pre>
<p>[toolbin/bmpcmp.c]</p>
</blockquote>

<p><strong><a name="2010-03-03T190712.236947Z"></a>
2010-03-03T19:07:12.236947Z Ralph Giles</strong></p>
<blockquote>
<pre>
Add optional support for png output to the bmpcmp utility.

When compiled with the HAVE_LIBPNG preprocessor symbol defined, and
linking with libpng, the utility will save its output focus images
in RGB png format. Currently, only 32 bit RGBx pixel data is supported.</pre>
<p>[toolbin/bmpcmp.c]</p>
</blockquote>

<p><strong><a name="2010-03-02T224902.357333Z"></a>
2010-03-02T22:49:02.357333Z Robin Watts</strong></p>
<blockquote>
<pre>
Attempt to fix the javascript in the created files. The change to use
numeric filenames padded to 5 chars had broken the javascript. This
might fix it.

</pre>
<p>[toolbin/localcluster/bmps2html.pl]</p>
</blockquote>

<p><strong><a name="2010-03-02T212636.100914Z"></a>
2010-03-02T21:26:36.100914Z regression</strong></p>
<blockquote>
<pre>

More changes towards having a bmpcmp running on the local cluster.

</pre>
<p>[toolbin/localcluster/bmps2html.pl toolbin/localcluster/clustermaster.pl toolbin/localcluster/build.pl]</p>
</blockquote>

<p><strong><a name="2010-03-02T211259.888859Z"></a>
2010-03-02T21:12:59.888859Z Robin Watts</strong></p>
<blockquote>
<pre>
Updated bmpcmp to avoid inverting pnms on reading.

Also improve reading of non 32bpp bitmaps - still not quite right.

</pre>
<p>[toolbin/bmpcmp.c]</p>
</blockquote>

<p><strong><a name="2010-03-02T001558.939654Z"></a>
2010-03-02T00:15:58.939654Z Marcos H. Woehrmann</strong></p>
<blockquote>
<pre>

Added partial support for &quot;clusterpush.pl bmpcmp&quot; (which will allow
users to generate bitmap comparisons of their most recent clusterpush
job and trunk).

</pre>
<p>[toolbin/localcluster/clustermaster.pl toolbin/localcluster/build.pl toolbin/localcluster/clusterpush.pl toolbin/localcluster/run.pl toolbin/localcluster/compare.pl]</p>
</blockquote>

<p><strong><a name="2010-03-01T174440.662743Z"></a>
2010-03-01T17:44:40.662743Z Ralph Giles</strong></p>
<blockquote>
<pre>
Add support to the autoconf and msvc builds to compile in a copy of
the FreeType2 library from local source.

Previously, the FAPI bridge for freetype required that the library
be compiled externally and include and link flags passed through
the FT_CFLAGS and FT_LIBS makefile variables. We now include a copy
of the freetype source in the tree, to make it easier to find a
compatible version of the source and to simplify building for
platforms that don't provide a system freetype.

Now, to enable both freetype and the FAPI bridge, pass --enable-freetype
to the configure script. This will set FT_BRIDGE=1 and the other required
variables. The configure script will prefer local source in gs/freetype2
to the copy in gs/freetype to simplify testing against upstream.

To enable freetype in the msvc build, pass FT_BRIDGE=1 on the nmake command
line.

Note that the fallback is now FT_BRIDGE=0, not FT_BRIDGE undefined; this
will require changes in any custom top-level makefiles. 
</pre>
<p>[base/winlib.mak doc/Make.htm base/gs.mak base/Makefile.in psi/int.mak base/configure.ac psi/msvc32.mak]</p>
</blockquote>

<p><strong><a name="2010-03-01T153456.724940Z"></a>
2010-03-01T15:34:56.724940Z Henry Stiles</strong></p>
<blockquote>
<pre>
Fixes bug #691154 and the regressions associated with revision 10823.
Unfortunately, performance-wise, the wtsimdi device must always use a
contone buffer until we've had a chance to see which raster operations
can be eliminated correctly.
</pre>
<p>[base/gdevwts.c]</p>
</blockquote>

<p><strong><a name="2010-02-28T225702.883228Z"></a>
2010-02-28T22:57:02.883228Z Hin-Tak Leung</strong></p>
<blockquote>
<pre>
First half of patch from John Wehle for bug 691149 - vac C compiler on AIX 5.2 does 
not like function with a void prototype returning a void function e.g.

------------------
void func1();

void funct2() {
return funct1();
}
------------------

The 2nd half of the submitted patch was committed as part of r10826 .

</pre>
<p>[base/gdevpx.c]</p>
</blockquote>

<p><strong><a name="2010-02-28T172609.949555Z"></a>
2010-02-28T17:26:09.949555Z Henry Stiles</strong></p>
<blockquote>
<pre>
Fixes part of 691149 - void function returning value, thanks to John
Wehle for the fix.  Also, there were several compiler warnings in this
file related to the casting of the gs memory type pointer which have
been cleaned up as well.
</pre>
<p>[base/gsnogc.c]</p>
</blockquote>

<p><strong><a name="2010-02-28T145200.838160Z"></a>
2010-02-28T14:52:00.838160Z Hin-Tak Leung</strong></p>
<blockquote>
<pre>
The distclean make target should call pgclean to clean up profile build also.</pre>
<p>[base/Makefile.in]</p>
</blockquote>

<p><strong><a name="2010-02-28T011926.994088Z"></a>
2010-02-28T01:19:26.994088Z Alex Cherepanov</strong></p>
<blockquote>
<pre>
Following PDF reference, version 1.7, section 10.10, crop /TrimBox and /CropBox
by the /MediaBox. Bug 691145.
</pre>
<p>[Resource/Init/pdf_main.ps]</p>
</blockquote>

<p><strong><a name="2010-02-27T232931.437722Z"></a>
2010-02-27T23:29:31.437722Z Henry Stiles</strong></p>
<blockquote>
<pre>
Fixes bug #691147 customer 861, the optimization to strength reduce
the raster operation here is wrong, it is premised on the assumption
the colors are opaque.  If either texture or source is transparent the
strength reduction which effectively ignores the source or pattern is
wrong and it will subsequently cause opaque painting.  We've simply
removed the optimization instead of conditionalizing on opaque cases,
because tests indicate the reduction not that significant.  The
example in the bug report was reduced from a file in the XL ATS 305
test suite.  The following customer reported bugs in that test suite
are fixed by this change:

FH905UJ1.BIN pp 1,2,3,4
FH906UJ1.BIN pp 1-6
MA2K7UJ2.BIN pp 1-10
PW2K6UJ1.BIN pp 2
PWTTDUJ3.BIN pp 1
</pre>
<p>[base/gxipixel.c]</p>
</blockquote>

<p><strong><a name="2010-02-27T202413.417473Z"></a>
2010-02-27T20:24:13.417473Z Alex Cherepanov</strong></p>
<blockquote>
<pre>
Upgrade Adobe Glyph List to v. 2.0. AGL is used for character mapping in
non-symbolic TrueType fonts in PDF files. Bug 691116.
</pre>
<p>[Resource/Init/gs_agl.ps]</p>
</blockquote>

<p><strong><a name="2010-02-27T165647.050522Z"></a>
2010-02-27T16:56:47.050522Z Alex Cherepanov</strong></p>
<blockquote>
<pre>
Add missing newline in a TTF debug message.
</pre>
<p>[Resource/Init/gs_ttf.ps]</p>
</blockquote>

<p><strong><a name="2010-02-26T171128.684024Z"></a>
2010-02-26T17:11:28.684024Z Ralph Giles</strong></p>
<blockquote>
<pre>
Correct a typo in the freetype makefile which prevented the inclusion
of ftlzw.c.
</pre>
<p>[base/freetype.mak]</p>
</blockquote>

<p><strong><a name="2010-02-26T064131.056673Z"></a>
2010-02-26T06:41:31.056673Z Ralph Giles</strong></p>
<blockquote>
<pre>
Fixes to our makefile for the third-party freetype library.

I'd missed a number of &quot;optional&quot; files in the original commit, but
didn't notice because other dependencies, which themselves link to
the system freetype library on linux were providing definitions of
the missing symbols. These are now included in our build.

We now generate freetype.dev by copying freetype_&#36;(SHARE_FT) within
freetype.mak, the same was this option is handled in the other third-
party makefiles.

We set native line endings and Id keyword substitution for this file
in the Subversion repository.
</pre>
<p>[base/freetype.mak]</p>
</blockquote>

<p><strong><a name="2010-02-25T110459.765077Z"></a>
2010-02-25T11:04:59.765077Z Chris Liddell</strong></p>
<blockquote>
<pre>
add quotes around the expansion of DEVSTUDIO variable when it's used for the recursive nmake call for debug targets - in case it has white space in it.</pre>
<p>[psi/msvc32.mak]</p>
</blockquote>

<p><strong><a name="2010-02-25T082146.259499Z"></a>
2010-02-25T08:21:46.259499Z Masaki Ushizaka</strong></p>
<blockquote>
<pre>
Fix for bug 691103.  The pdfwrite device now considers FDArray fonts' FontMatrix and writes correct W/W2/DW/DW2 widths for CIDFont with unusual FontMatrix.  This also fixes a problem gs_font::orig_FontMatrix not being initialized for CIDFont.
Bug687832.pdf and Bug690834.ps will show differences which are improvements.
</pre>
<p>[Resource/Init/gs_cidfn.ps base/gdevpdtt.c]</p>
</blockquote>

<p><strong><a name="2010-02-24T202657.347460Z"></a>
2010-02-24T20:26:57.347460Z Ralph Giles</strong></p>
<blockquote>
<pre>
Add a generic makefile for compiling the freetype library
as part of the Ghostscript monolithic build.

Including makefiles should define FTSRCDIR, FTGENDIR and FTOBJDIR,
similar to other third party libraries.
</pre>
<p>[base/freetype.mak]</p>
</blockquote>

<p><strong><a name="2010-02-24T195905.197182Z"></a>
2010-02-24T19:59:05.197182Z Ralph Giles</strong></p>
<blockquote>
<pre>
Copy our local branch of the freetype library source into the gs tree.

This was the intended result of commit 10804, but an ommitted path element
placed it in the repository root instead.
</pre>
<p>[freetype]</p>
</blockquote>

<p><strong><a name="2010-02-24T193811.435012Z"></a>
2010-02-24T19:38:11.435012Z Ralph Giles</strong></p>
<blockquote>
<pre>
Correct a typo in a dependency specification for wrfont.c.

The typo (stdio_h for stdio__h) prevented the dependency on arch.h
from being declared, generating a temporary error in a sufficiently
parallel make invocation.
</pre>
<p>[psi/int.mak]</p>
</blockquote>

<p><strong><a name="2010-02-24T192711.525322Z"></a>
2010-02-24T19:27:11.525322Z regression</strong></p>
<blockquote>
<pre>

Changed naming scheme for regressions from 00000-00000 to 00000 (i.e. no longer treat Ghostscript and GhostPDL revisions independently).

</pre>
<p>[toolbin/localcluster/clustermaster.pl toolbin/localcluster/run.pl toolbin/localcluster/cachearchive.pl]</p>
</blockquote>

<p><strong><a name="2010-02-24T182235.905364Z"></a>
2010-02-24T18:22:35.905364Z Ralph Giles</strong></p>
<blockquote>
<pre>
Move the fontconfig check into the libraries section of the configure script.
</pre>
<p>[base/configure.ac]</p>
</blockquote>

<p><strong><a name="2010-02-24T181645.225914Z"></a>
2010-02-24T18:16:45.225914Z Chris Liddell</strong></p>
<blockquote>
<pre>
ensure the DEVSTUDIO value is propagated when we recursively nmake for the debug targets.</pre>
<p>[psi/msvc32.mak]</p>
</blockquote>

<p><strong><a name="2010-02-24T172823.116518Z"></a>
2010-02-24T17:28:23.116518Z Ralph Giles</strong></p>
<blockquote>
<pre>
Remove a spurious circular symlink accidentally included in the libpng-1.2.42
source import.
</pre>
<p>[libpng/libpng]</p>
</blockquote>

<p><strong><a name="2010-02-24T095802.654907Z"></a>
2010-02-24T09:58:02.654907Z Ken Sharp</strong></p>
<blockquote>
<pre>
Fix, ignore a class of broken TrueType font.
Bug #691121 &quot;gs stops in interpreting tt instructions&quot;. The font executes an MDRP
instruction with point number 28, the glyph only contains 28 points numbered 0 to 27 so
the interpreter (correctly) flags an error.

Windows and FT both appear to silently ignore the error and the instruction (definitely
the case for FreeType). Modified Ins_MDRP to simply return if the indicated point is
outside the number of points in this case.
</pre>
<p>[base/ttinterp.c]</p>
</blockquote>

<p><strong><a name="2010-02-23T222918.142249Z"></a>
2010-02-23T22:29:18.142249Z Henry Stiles</strong></p>
<blockquote>
<pre>
Fixes bug 690967, a diagnostic problem with dumping memory the debug
-ZA option.  See the comment in the code for details, the change has
no effect on production builds.
</pre>
<p>[base/gsalloc.c]</p>
</blockquote>

<p><strong><a name="2010-02-23T215815.181686Z"></a>
2010-02-23T21:58:15.181686Z Alex Cherepanov</strong></p>
<blockquote>
<pre>
Fix obviously wrong code in .fixsethalftonescreen procedure that is used by
the setscreen (and setcolorscreen) procedure and caused a PS error if the
third 'proc' argument to setscreen is a read-only Halftone type 1 dictionary.
Thanks to Jonathan Dagresta for the patch. Bug 691130, customer 1130.
</pre>
<p>[Resource/Init/gs_dps2.ps]</p>
</blockquote>

<p><strong><a name="2010-02-23T205621.262529Z"></a>
2010-02-23T20:56:21.262529Z Alex Cherepanov</strong></p>
<blockquote>
<pre>
Simplify sed script that extracts libTiff version number for compatibility
with AIX sed. Include our portable header before tiff.h to make sure that
all stdint types are found. Bug 691102.
</pre>
<p>[base/gdevtifs.c base/gdevtsep.c base/configure.ac base/gdevtfnx.c base/devs.mak base/gdevtfax.c]</p>
</blockquote>

<p><strong><a name="2010-02-23T100154.545437Z"></a>
2010-02-23T10:01:54.545437Z Ken Sharp</strong></p>
<blockquote>
<pre>
Fix (pdfwrite)
Bug #691133. If producing PDF/A output. and a DOCINFO pdfmark string was UTF_16BE
encoded *and* contained a numeric character, then decode_escape incorrectly consumed
any numeric characters following the first octal byte of the UTF16 code.

This was caused by decode_escape assuming that octal sequences are terminated by 
non-numeric characters which is clearly wrong. The octal escape decoding loop is now
terminated when :
1) 3 numeric characters are read from the string
2) No more data is available in the string
3) A non-numeric character is encountered in the string.

</pre>
<p>[base/gdevpdfe.c]</p>
</blockquote>

<p><strong><a name="2010-02-22T114533.943563Z"></a>
2010-02-22T11:45:33.943563Z Chris Liddell</strong></p>
<blockquote>
<pre>
resolve inappropriate variable type (signed vs unsigned) and comparisons with the wrong variable when writing the local subrs info to the serialized T2 Private dictionary.</pre>
<p>[psi/write_t2.c]</p>
</blockquote>

<p><strong><a name="2010-02-21T175724.841443Z"></a>
2010-02-21T17:57:24.841443Z regression</strong></p>
<blockquote>
<pre>

Added regression testing of the icc_work branch to the local cluster.

</pre>
<p>[toolbin/localcluster/clustermaster.pl toolbin/localcluster/run.pl toolbin/localcluster/cachearchive.pl]</p>
</blockquote>

<p><strong><a name="2010-02-21T035726.068286Z"></a>
2010-02-21T03:57:26.068286Z Marcos H. Woehrmann</strong></p>
<blockquote>
<pre>

Add cast to bmpcmp.c to quiet useless compiler warning.

</pre>
<p>[toolbin/bmpcmp.c]</p>
</blockquote>

<p><strong><a name="2010-02-21T035151.891247Z"></a>
2010-02-21T03:51:51.891247Z regression</strong></p>
<blockquote>
<pre>
Several minor changes to local cluster code to improve reliability and increase performance.

</pre>
<p>[toolbin/localcluster/clustermaster.pl toolbin/localcluster/build.pl toolbin/localcluster/run.pl toolbin/localcluster/compare.pl]</p>
</blockquote>

<p><strong><a name="2010-02-21T033829.059238Z"></a>
2010-02-21T03:38:29.059238Z Alex Cherepanov</strong></p>
<blockquote>
<pre>
Update pdf2dsc.ps to match the changes in pdf_main.ps introduced by
the rev. 10341. Thanks to William Bader for the patch. Bug 691124.
</pre>
<p>[lib/pdf2dsc.ps]</p>
</blockquote>

<p><strong><a name="2010-02-21T025705.611462Z"></a>
2010-02-21T02:57:05.611462Z Alex Cherepanov</strong></p>
<blockquote>
<pre>
Include stat_.h before estack.h, which defines esp macro.
Prevent a spurious macro substitution in Cygwin version of signal.h.
Bug 691123, customers 661.
</pre>
<p>[psi/zfapi.c psi/int.mak]</p>
</blockquote>

<p><strong><a name="2010-02-17T170227.004947Z"></a>
2010-02-17T17:02:27.004947Z Henry Stiles</strong></p>
<blockquote>
<pre>
Adds placeholder files to trunk so the other languages (pcl, xps and
svg) can built with the icc branch and trunk.  Each of these files
will be replaced with real files when the icc branch is merged into
the trunk.
</pre>
<p>[base/lcms.mak base/gsiccmanage.h]</p>
</blockquote>

<p><strong><a name="2010-02-16T181257.832463Z"></a>
2010-02-16T18:12:57.832463Z Robin Watts</strong></p>
<blockquote>
<pre>
Tiny tweaks to clusterpush.pl to make it work on windows. First, wrap the
&#36;HOME directory in additional quotes to allow for awkward windows users
with spaces in their names. Secondly, add a crude mapping for people whos
windows names are not the same as the usernames. This can unquestionably
be done more nicely, but the simple version will do for now.

</pre>
<p>[toolbin/localcluster/clusterpush.pl]</p>
</blockquote>

<p><strong><a name="2010-02-16T170749.079920Z"></a>
2010-02-16T17:07:49.079920Z Alex Cherepanov</strong></p>
<blockquote>
<pre>
Add missing dereferencing of indirect objects in /Mask array.
Bug 691112, customers 870.
</pre>
<p>[Resource/Init/pdf_draw.ps]</p>
</blockquote>

<p><strong><a name="2010-02-12T152723.315268Z"></a>
2010-02-12T15:27:23.315268Z Ken Sharp</strong></p>
<blockquote>
<pre>
Sort out some minor benign compiler warnings. No differences expected.
</pre>
<p>[base/gdevpdfe.c]</p>
</blockquote>

<p><strong><a name="2010-02-12T151716.629322Z"></a>
2010-02-12T15:17:16.629322Z Ken Sharp</strong></p>
<blockquote>
<pre>
Fix colour processing. It was possible for nested ICCBased colour spaces (ie an ICCBased
space whose Alternate is another ICCBased space) to cause segmentation faults.

This was due to the fact that the conversion to base colour continuation procedure 
'currentbasecolor_cont' was supposed to scan the space from the initial declaration
each time round a loop. However a reassignment of an array pointer caused it to
rescan from the last processed colour array instead.

Normally this does not cause problems, but in the case of nested ICCBased it caused
us to generate an error.

Fixed by re-initialising the array pointer at the start of the loop.
</pre>
<p>[psi/zcolor.c]</p>
</blockquote>

<p><strong><a name="2010-02-11T162820.347398Z"></a>
2010-02-11T16:28:20.347398Z Ken Sharp</strong></p>
<blockquote>
<pre>
Fix (pdfwrite) bug #691104 &quot;pdfwrite emits garbage in the XMP metadata when DOCINFO
pdfmarks contain UTF-16BE text strings&quot;

There were several problems. Firstly the undoing of PostScript string escapes was wrong,
Octal escapes consumed too many characters, and several escape sequences weren't
recognised.

Secondly the XMP emission didn't expect to receive UTF-16BE strings and didn't convert
them to UTF-8 for inclusion in the metadata.

This patch fixes the broken octal escapes, adds teh unprocessed escapes and checks the
DOCINFo strings before sending to XMP. If they include the UTF-16BE Byte Order Mark
then convert the strings to UTF-8.
</pre>
<p>[base/gdevpdfe.c]</p>
</blockquote>

<p><strong><a name="2010-02-10T202733.989189Z"></a>
2010-02-10T20:27:33.989189Z Ralph Giles</strong></p>
<blockquote>
<pre>
Bump the versioning after the 8.71 release.
</pre>
<p>[base/gscdef.c base/version.mak Resource/Init/gs_init.ps doc/News.htm]</p>
</blockquote>


<!-- [2.0 end contents] ==================================================== -->

<!-- [3.0 begin visible trailer] =========================================== -->
<hr>

<p>
<small>Copyright &copy; 2000-2006 Artifex Software, Inc.  All rights reserved.</small>

<p>
This software is provided AS-IS with no warranty, either express or
implied.

This software is distributed under license and may not be copied, modified
or distributed except as expressly authorized under the terms of that
license.  Refer to licensing information at http://www.artifex.com/
or contact Artifex Software, Inc.,  7 Mt. Lassen Drive - Suite A-134,
San Rafael, CA  94903, U.S.A., +1(415)492-9861, for further information.

<p>
<small>Ghostscript version 9.20, 26 September 2016

<!-- [3.0 end visible trailer] ============================================= -->

</body>
</html>
